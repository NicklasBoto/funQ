exIntA : (QBit >< QBit >< QBit >< QBit)
exIntA = QFT4 (new 0, new 1, new 0, new 0)

exIntB : (QBit >< QBit >< QBit >< QBit)
exIntB = (new 0, new 0, new 1, new 1)

cAddv2 : (QBit >< QBit >< QBit >< QBit)
cAddv2 =    let (b0, b1, b2, b3) = exIntB in
            let (a0, a1, a2, a3) = exIntA in
            let (b31, a31) = CR  (b3, a3)   in -- 2^1
            let (b21, a32) = CR2 (b2, a31)  in -- 2^2
            let (b11, a33) = CR4 (b1, a32)  in -- 2^3
            let (b01, a34) = CR8 (b0, a33)  in -- 2^4

            let (b22, a21) = CR  (b21, a2)  in -- 2^1
            let (b12, a22) = CR2 (b11, a21) in -- 2^2
            let (b02, a23) = CR4 (b01, a22) in -- 2^3

            let (b13, a11) = CR  (b12, a1)  in -- 2^1
            let (b03, a12) = CR2 (b02, a11) in -- 2^2
            
            let (b04, a01) = CR  (b03, a0)  in -- 2^1

            (a01, a12, a23, a34)

swap4 : (QBit >< QBit >< QBit >< QBit) -o (QBit >< QBit >< QBit >< QBit)
swap4 q = let (a,b,c,d) = q in
           let (a1,d1) = SWAP (a,d) in
           let (b1,c1) = SWAP (b,c) in
           (a1,b1,c1,d1)

meas4 : (QBit >< QBit >< QBit >< QBit) -o (Bit >< Bit >< Bit >< Bit)
meas4 q = let (a,b,c,d) = q in (meas a,meas b,meas c,meas d)

main : Bit >< Bit >< Bit >< Bit
main = meas4 ((QFTI4 cAddv2))


-- 0011 -> 1010
-- 0111 -> 1110

-- | Functions on 3 qubits
-- exIntA3 : QBit >< QBit >< QBit
-- exIntA3 = QFT (new 1, new 0, new 0)
-- exIntB3 : QBit >< QBit >< QBit
-- exIntB3 = (new 0, new 1, new 1)

-- cAdd3 : (QBit >< QBit >< QBit)
-- cAdd3 = let (a0, a1, a2) = exIntA3 in   
--         let (b0, b1, b2) = exIntB3 in    
--         let (b21, a21) = CR  (b2, a2)   in
--         let (b11, a22) = CR2 (b1, a21)  in
--         let (b01, a23) = CR4 (b0, a22)  in
--         let (b12, a11) = CR  (b11, a1)  in
--         let (b02, a12) = CR2 (b01, a11) in
--         let (b03, a01) = CR  (b02, a0)  in
--         (a01,a12,a23)
swap3 : (QBit >< QBit >< QBit) -o (QBit >< QBit >< QBit)
swap3 q = let (a,b,c) = q in
           let (a1,c1) = SWAP (a,c) in
           (a1,b,c1)

meas3 : (QBit >< QBit >< QBit) -o (Bit >< Bit >< Bit)
meas3 q = let (a,b,c) = q in (meas a,meas b,meas c)