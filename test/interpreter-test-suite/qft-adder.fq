exIntA : (QBit >< QBit >< QBit >< QBit)
exIntA = (new 1, new 0, new 0, new 0)

exIntB : (QBit >< QBit >< QBit >< QBit)
exIntB = QFT (new 0, new 0, new 1, new 1)

-- cAdd : (QBit -o (QBit >< QBit >< QBit >< QBit))
-- cAdd c =    let (q0,q1,q2,q3) = exIntB in
--             let (a0,a1,a2,a3) = exIntA in
--             let (a31,q31) = CR8 (CR4 (CR2 (CR (a3,q3)))) in
--             let (a21,q21) =      CR4 (CR2 (CR (a2,q2))) in
--             let (a11,q11) =           CR2 (CR (a1,q1))  in
--             let (a01,q01) =                CR (a0,q0)   in
--                 (q01,q11,q21,q31)
            
cAddv2 : (QBit -o (QBit >< QBit >< QBit >< QBit))
cAddv2 c =  let (b0,b1,b2,b3) = exIntB in
            let (a0,a1,a2,a3) = exIntA in
            let (b31,a31) = CR (b3,a3) in
            let (b21,a32) = CR2 (b2,a31) in
            let (b11,a33) = CR4 (b1,a32) in
            let (b01,a34) = CR8 (b0,a33) in
            let (b21,a21) = CR (b2,a2) in
            let (b12,a22) = CR2 (b11,a21) in
            let (b02,a23) = CR4 (b01,a22) in
            let (b13,a11) = CR (b12,a1) in
            let (b03,a12) = CR2 (b02,a11) in
            let (b04,a01) = CR (b03,a0) in
            (a01,a12,a23,a34)

main : (Bit >< Bit >< Bit >< Bit)
main = meas4 (QFTI (cAddv2 (new 1)))


meas4 : ((QBit >< QBit >< QBit >< QBit) -o (Bit >< Bit >< Bit >< Bit))
meas4 q = let (a,b,c,d) = q in (meas a,meas b,meas c,meas d)