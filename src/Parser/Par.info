-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.12 from Parser/Par.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	%start_pTerm3 -> Term3                             (1)
	%start_pTerm2 -> Term2                             (2)
	%start_pTerm1 -> Term1                             (3)
	%start_pTerm -> Term                               (4)
	%start_pLetVar -> LetVar                           (5)
	%start_pListLetVar -> ListLetVar                   (6)
	%start_pTup -> Tup                                 (7)
	%start_pListTerm -> ListTerm                       (8)
	%start_pBit -> Bit                                 (9)
	%start_pFunDec -> FunDec                           (10)
	%start_pListFunDec -> ListFunDec                   (11)
	%start_pFunction -> Function                       (12)
	%start_pArg -> Arg                                 (13)
	%start_pListArg -> ListArg                         (14)
	%start_pType2 -> Type2                             (15)
	%start_pType1 -> Type1                             (16)
	%start_pType -> Type                               (17)
	%start_pGate -> Gate                               (18)
	FunVar -> L_FunVar                                 (19)
	Var -> L_Var                                       (20)
	GateIdent -> L_GateIdent                           (21)
	Lambda -> L_Lambda                                 (22)
	Program -> ListFunDec                              (23)
	Term3 -> Var                                       (24)
	Term3 -> Bit                                       (25)
	Term3 -> Gate                                      (26)
	Term3 -> Tup                                       (27)
	Term3 -> '*'                                       (28)
	Term3 -> '(' Term ')'                              (29)
	Term2 -> Term2 Term3                               (30)
	Term2 -> Term3                                     (31)
	Term1 -> 'if' Term2 'then' Term 'else' Term        (32)
	Term1 -> 'let' '(' LetVar ',' ListLetVar ')' '=' Term 'in' Term   (33)
	Term1 -> Lambda FunVar Type '.' Term               (34)
	Term1 -> Term2                                     (35)
	Term -> Term1                                      (36)
	LetVar -> Var                                      (37)
	ListLetVar -> LetVar                               (38)
	ListLetVar -> LetVar ',' ListLetVar                (39)
	Tup -> '(' Term ',' ListTerm ')'                   (40)
	ListTerm -> Term                                   (41)
	ListTerm -> Term ',' ListTerm                      (42)
	Bit -> '0'                                         (43)
	Bit -> '1'                                         (44)
	FunDec -> FunVar Type Function                     (45)
	ListFunDec ->                                      (46)
	ListFunDec -> FunDec ListFunDec                    (47)
	Function -> Var ListArg '=' Term                   (48)
	Arg -> Var                                         (49)
	ListArg ->                                         (50)
	ListArg -> Arg ListArg                             (51)
	Type2 -> 'Bit'                                     (52)
	Type2 -> 'QBit'                                    (53)
	Type2 -> 'T'                                       (54)
	Type2 -> '!' Type2                                 (55)
	Type2 -> '(' Type ')'                              (56)
	Type1 -> Type2 '><' Type1                          (57)
	Type1 -> Type2 '-o' Type1                          (58)
	Type1 -> Type2                                     (59)
	Type -> Type1                                      (60)
	Gate -> 'H'                                        (61)
	Gate -> 'X'                                        (62)
	Gate -> 'Y'                                        (63)
	Gate -> 'Z'                                        (64)
	Gate -> 'I'                                        (65)
	Gate -> 'S'                                        (66)
	Gate -> 'T'                                        (67)
	Gate -> 'CNOT'                                     (68)
	Gate -> 'TOFFOLI'                                  (69)
	Gate -> 'SWAP'                                     (70)
	Gate -> 'FREDKIN'                                  (71)
	Gate -> 'QFT'                                      (72)
	Gate -> 'QFTI'                                     (73)
	Gate -> 'QFT2'                                     (74)
	Gate -> 'QFTI2'                                    (75)
	Gate -> 'QFT3'                                     (76)
	Gate -> 'QFTI3'                                    (77)
	Gate -> 'QFT4'                                     (78)
	Gate -> 'QFTI4'                                    (79)
	Gate -> 'QFT5'                                     (80)
	Gate -> 'QFTI5'                                    (81)
	Gate -> 'CR'                                       (82)
	Gate -> 'CRD'                                      (83)
	Gate -> 'CR2'                                      (84)
	Gate -> 'CR2D'                                     (85)
	Gate -> 'CR4'                                      (86)
	Gate -> 'CR4D'                                     (87)
	Gate -> 'CR8'                                      (88)
	Gate -> 'CR8D'                                     (89)
	Gate -> 'CCR'                                      (90)
	Gate -> 'CCR2'                                     (91)
	Gate -> 'CCR4'                                     (92)
	Gate -> 'CCR8'                                     (93)
	Gate -> GateIdent                                  (94)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'('            { PT _ (TS _ 2) }
	')'            { PT _ (TS _ 3) }
	'*'            { PT _ (TS _ 4) }
	','            { PT _ (TS _ 5) }
	'-o'           { PT _ (TS _ 6) }
	'.'            { PT _ (TS _ 7) }
	'0'            { PT _ (TS _ 8) }
	'1'            { PT _ (TS _ 9) }
	'='            { PT _ (TS _ 10) }
	'><'           { PT _ (TS _ 11) }
	'Bit'          { PT _ (TS _ 12) }
	'CCR'          { PT _ (TS _ 13) }
	'CCR2'         { PT _ (TS _ 14) }
	'CCR4'         { PT _ (TS _ 15) }
	'CCR8'         { PT _ (TS _ 16) }
	'CNOT'         { PT _ (TS _ 17) }
	'CR'           { PT _ (TS _ 18) }
	'CR2'          { PT _ (TS _ 19) }
	'CR2D'         { PT _ (TS _ 20) }
	'CR4'          { PT _ (TS _ 21) }
	'CR4D'         { PT _ (TS _ 22) }
	'CR8'          { PT _ (TS _ 23) }
	'CR8D'         { PT _ (TS _ 24) }
	'CRD'          { PT _ (TS _ 25) }
	'FREDKIN'      { PT _ (TS _ 26) }
	'H'            { PT _ (TS _ 27) }
	'I'            { PT _ (TS _ 28) }
	'QBit'         { PT _ (TS _ 29) }
	'QFT'          { PT _ (TS _ 30) }
	'QFT2'         { PT _ (TS _ 31) }
	'QFT3'         { PT _ (TS _ 32) }
	'QFT4'         { PT _ (TS _ 33) }
	'QFT5'         { PT _ (TS _ 34) }
	'QFTI'         { PT _ (TS _ 35) }
	'QFTI2'        { PT _ (TS _ 36) }
	'QFTI3'        { PT _ (TS _ 37) }
	'QFTI4'        { PT _ (TS _ 38) }
	'QFTI5'        { PT _ (TS _ 39) }
	'S'            { PT _ (TS _ 40) }
	'SWAP'         { PT _ (TS _ 41) }
	'T'            { PT _ (TS _ 42) }
	'TOFFOLI'      { PT _ (TS _ 43) }
	'X'            { PT _ (TS _ 44) }
	'Y'            { PT _ (TS _ 45) }
	'Z'            { PT _ (TS _ 46) }
	'else'         { PT _ (TS _ 47) }
	'if'           { PT _ (TS _ 48) }
	'in'           { PT _ (TS _ 49) }
	'let'          { PT _ (TS _ 50) }
	'then'         { PT _ (TS _ 51) }
	L_FunVar       { PT _ (T_FunVar $$) }
	L_Var          { PT _ (T_Var $$) }
	L_GateIdent    { PT _ (T_GateIdent $$) }
	L_Lambda       { PT _ (T_Lambda $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	%start_pTerm3   rule  1
	%start_pTerm2   rule  2
	%start_pTerm1   rule  3
	%start_pTerm    rule  4
	%start_pLetVar  rule  5
	%start_pListLetVar rule  6
	%start_pTup     rule  7
	%start_pListTerm rule  8
	%start_pBit     rule  9
	%start_pFunDec  rule  10
	%start_pListFunDec rule  11
	%start_pFunction rule  12
	%start_pArg     rule  13
	%start_pListArg rule  14
	%start_pType2   rule  15
	%start_pType1   rule  16
	%start_pType    rule  17
	%start_pGate    rule  18
	FunVar          rule  19
	Var             rule  20
	GateIdent       rule  21
	Lambda          rule  22
	Program         rule  23
	Term3           rules 24, 25, 26, 27, 28, 29
	Term2           rules 30, 31
	Term1           rules 32, 33, 34, 35
	Term            rule  36
	LetVar          rule  37
	ListLetVar      rules 38, 39
	Tup             rule  40
	ListTerm        rules 41, 42
	Bit             rules 43, 44
	FunDec          rule  45
	ListFunDec      rules 46, 47
	Function        rule  48
	Arg             rule  49
	ListArg         rules 50, 51
	Type2           rules 52, 53, 54, 55, 56
	Type1           rules 57, 58, 59
	Type            rule  60
	Gate            rules 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	L_FunVar       shift, and enter state 20
	%eof           reduce using rule 46

	FunVar         goto state 74
	Program        goto state 106
	FunDec         goto state 75
	ListFunDec     goto state 107

State 1


	'('            shift, and enter state 91
	'*'            shift, and enter state 92
	'0'            shift, and enter state 79
	'1'            shift, and enter state 80
	'CCR'          shift, and enter state 23
	'CCR2'         shift, and enter state 24
	'CCR4'         shift, and enter state 25
	'CCR8'         shift, and enter state 26
	'CNOT'         shift, and enter state 27
	'CR'           shift, and enter state 28
	'CR2'          shift, and enter state 29
	'CR2D'         shift, and enter state 30
	'CR4'          shift, and enter state 31
	'CR4D'         shift, and enter state 32
	'CR8'          shift, and enter state 33
	'CR8D'         shift, and enter state 34
	'CRD'          shift, and enter state 35
	'FREDKIN'      shift, and enter state 36
	'H'            shift, and enter state 37
	'I'            shift, and enter state 38
	'QFT'          shift, and enter state 39
	'QFT2'         shift, and enter state 40
	'QFT3'         shift, and enter state 41
	'QFT4'         shift, and enter state 42
	'QFT5'         shift, and enter state 43
	'QFTI'         shift, and enter state 44
	'QFTI2'        shift, and enter state 45
	'QFTI3'        shift, and enter state 46
	'QFTI4'        shift, and enter state 47
	'QFTI5'        shift, and enter state 48
	'S'            shift, and enter state 49
	'SWAP'         shift, and enter state 50
	'T'            shift, and enter state 51
	'TOFFOLI'      shift, and enter state 52
	'X'            shift, and enter state 53
	'Y'            shift, and enter state 54
	'Z'            shift, and enter state 55
	L_Var          shift, and enter state 70
	L_GateIdent    shift, and enter state 56

	Var            goto state 81
	GateIdent      goto state 21
	Term3          goto state 105
	Tup            goto state 87
	Bit            goto state 89
	Gate           goto state 90

State 2


	'('            shift, and enter state 91
	'*'            shift, and enter state 92
	'0'            shift, and enter state 79
	'1'            shift, and enter state 80
	'CCR'          shift, and enter state 23
	'CCR2'         shift, and enter state 24
	'CCR4'         shift, and enter state 25
	'CCR8'         shift, and enter state 26
	'CNOT'         shift, and enter state 27
	'CR'           shift, and enter state 28
	'CR2'          shift, and enter state 29
	'CR2D'         shift, and enter state 30
	'CR4'          shift, and enter state 31
	'CR4D'         shift, and enter state 32
	'CR8'          shift, and enter state 33
	'CR8D'         shift, and enter state 34
	'CRD'          shift, and enter state 35
	'FREDKIN'      shift, and enter state 36
	'H'            shift, and enter state 37
	'I'            shift, and enter state 38
	'QFT'          shift, and enter state 39
	'QFT2'         shift, and enter state 40
	'QFT3'         shift, and enter state 41
	'QFT4'         shift, and enter state 42
	'QFT5'         shift, and enter state 43
	'QFTI'         shift, and enter state 44
	'QFTI2'        shift, and enter state 45
	'QFTI3'        shift, and enter state 46
	'QFTI4'        shift, and enter state 47
	'QFTI5'        shift, and enter state 48
	'S'            shift, and enter state 49
	'SWAP'         shift, and enter state 50
	'T'            shift, and enter state 51
	'TOFFOLI'      shift, and enter state 52
	'X'            shift, and enter state 53
	'Y'            shift, and enter state 54
	'Z'            shift, and enter state 55
	L_Var          shift, and enter state 70
	L_GateIdent    shift, and enter state 56

	Var            goto state 81
	GateIdent      goto state 21
	Term3          goto state 83
	Term2          goto state 104
	Tup            goto state 87
	Bit            goto state 89
	Gate           goto state 90

State 3


	'('            shift, and enter state 91
	'*'            shift, and enter state 92
	'0'            shift, and enter state 79
	'1'            shift, and enter state 80
	'CCR'          shift, and enter state 23
	'CCR2'         shift, and enter state 24
	'CCR4'         shift, and enter state 25
	'CCR8'         shift, and enter state 26
	'CNOT'         shift, and enter state 27
	'CR'           shift, and enter state 28
	'CR2'          shift, and enter state 29
	'CR2D'         shift, and enter state 30
	'CR4'          shift, and enter state 31
	'CR4D'         shift, and enter state 32
	'CR8'          shift, and enter state 33
	'CR8D'         shift, and enter state 34
	'CRD'          shift, and enter state 35
	'FREDKIN'      shift, and enter state 36
	'H'            shift, and enter state 37
	'I'            shift, and enter state 38
	'QFT'          shift, and enter state 39
	'QFT2'         shift, and enter state 40
	'QFT3'         shift, and enter state 41
	'QFT4'         shift, and enter state 42
	'QFT5'         shift, and enter state 43
	'QFTI'         shift, and enter state 44
	'QFTI2'        shift, and enter state 45
	'QFTI3'        shift, and enter state 46
	'QFTI4'        shift, and enter state 47
	'QFTI5'        shift, and enter state 48
	'S'            shift, and enter state 49
	'SWAP'         shift, and enter state 50
	'T'            shift, and enter state 51
	'TOFFOLI'      shift, and enter state 52
	'X'            shift, and enter state 53
	'Y'            shift, and enter state 54
	'Z'            shift, and enter state 55
	'if'           shift, and enter state 93
	'let'          shift, and enter state 94
	L_Var          shift, and enter state 70
	L_GateIdent    shift, and enter state 56
	L_Lambda       shift, and enter state 95

	Var            goto state 81
	GateIdent      goto state 21
	Lambda         goto state 82
	Term3          goto state 83
	Term2          goto state 84
	Term1          goto state 103
	Tup            goto state 87
	Bit            goto state 89
	Gate           goto state 90

State 4


	'('            shift, and enter state 91
	'*'            shift, and enter state 92
	'0'            shift, and enter state 79
	'1'            shift, and enter state 80
	'CCR'          shift, and enter state 23
	'CCR2'         shift, and enter state 24
	'CCR4'         shift, and enter state 25
	'CCR8'         shift, and enter state 26
	'CNOT'         shift, and enter state 27
	'CR'           shift, and enter state 28
	'CR2'          shift, and enter state 29
	'CR2D'         shift, and enter state 30
	'CR4'          shift, and enter state 31
	'CR4D'         shift, and enter state 32
	'CR8'          shift, and enter state 33
	'CR8D'         shift, and enter state 34
	'CRD'          shift, and enter state 35
	'FREDKIN'      shift, and enter state 36
	'H'            shift, and enter state 37
	'I'            shift, and enter state 38
	'QFT'          shift, and enter state 39
	'QFT2'         shift, and enter state 40
	'QFT3'         shift, and enter state 41
	'QFT4'         shift, and enter state 42
	'QFT5'         shift, and enter state 43
	'QFTI'         shift, and enter state 44
	'QFTI2'        shift, and enter state 45
	'QFTI3'        shift, and enter state 46
	'QFTI4'        shift, and enter state 47
	'QFTI5'        shift, and enter state 48
	'S'            shift, and enter state 49
	'SWAP'         shift, and enter state 50
	'T'            shift, and enter state 51
	'TOFFOLI'      shift, and enter state 52
	'X'            shift, and enter state 53
	'Y'            shift, and enter state 54
	'Z'            shift, and enter state 55
	'if'           shift, and enter state 93
	'let'          shift, and enter state 94
	L_Var          shift, and enter state 70
	L_GateIdent    shift, and enter state 56
	L_Lambda       shift, and enter state 95

	Var            goto state 81
	GateIdent      goto state 21
	Lambda         goto state 82
	Term3          goto state 83
	Term2          goto state 84
	Term1          goto state 85
	Term           goto state 102
	Tup            goto state 87
	Bit            goto state 89
	Gate           goto state 90

State 5


	L_Var          shift, and enter state 70

	Var            goto state 98
	LetVar         goto state 101

State 6


	L_Var          shift, and enter state 70

	Var            goto state 98
	LetVar         goto state 99
	ListLetVar     goto state 100

State 7


	'('            shift, and enter state 97

	Tup            goto state 96

State 8


	'('            shift, and enter state 91
	'*'            shift, and enter state 92
	'0'            shift, and enter state 79
	'1'            shift, and enter state 80
	'CCR'          shift, and enter state 23
	'CCR2'         shift, and enter state 24
	'CCR4'         shift, and enter state 25
	'CCR8'         shift, and enter state 26
	'CNOT'         shift, and enter state 27
	'CR'           shift, and enter state 28
	'CR2'          shift, and enter state 29
	'CR2D'         shift, and enter state 30
	'CR4'          shift, and enter state 31
	'CR4D'         shift, and enter state 32
	'CR8'          shift, and enter state 33
	'CR8D'         shift, and enter state 34
	'CRD'          shift, and enter state 35
	'FREDKIN'      shift, and enter state 36
	'H'            shift, and enter state 37
	'I'            shift, and enter state 38
	'QFT'          shift, and enter state 39
	'QFT2'         shift, and enter state 40
	'QFT3'         shift, and enter state 41
	'QFT4'         shift, and enter state 42
	'QFT5'         shift, and enter state 43
	'QFTI'         shift, and enter state 44
	'QFTI2'        shift, and enter state 45
	'QFTI3'        shift, and enter state 46
	'QFTI4'        shift, and enter state 47
	'QFTI5'        shift, and enter state 48
	'S'            shift, and enter state 49
	'SWAP'         shift, and enter state 50
	'T'            shift, and enter state 51
	'TOFFOLI'      shift, and enter state 52
	'X'            shift, and enter state 53
	'Y'            shift, and enter state 54
	'Z'            shift, and enter state 55
	'if'           shift, and enter state 93
	'let'          shift, and enter state 94
	L_Var          shift, and enter state 70
	L_GateIdent    shift, and enter state 56
	L_Lambda       shift, and enter state 95

	Var            goto state 81
	GateIdent      goto state 21
	Lambda         goto state 82
	Term3          goto state 83
	Term2          goto state 84
	Term1          goto state 85
	Term           goto state 86
	Tup            goto state 87
	ListTerm       goto state 88
	Bit            goto state 89
	Gate           goto state 90

State 9


	'0'            shift, and enter state 79
	'1'            shift, and enter state 80

	Bit            goto state 78

State 10


	L_FunVar       shift, and enter state 20

	FunVar         goto state 74
	FunDec         goto state 77

State 11


	L_FunVar       shift, and enter state 20
	%eof           reduce using rule 46

	FunVar         goto state 74
	FunDec         goto state 75
	ListFunDec     goto state 76

State 12


	L_Var          shift, and enter state 70

	Var            goto state 72
	Function       goto state 73

State 13


	L_Var          shift, and enter state 70

	Var            goto state 67
	Arg            goto state 71

State 14


	L_Var          shift, and enter state 70
	%eof           reduce using rule 50

	Var            goto state 67
	Arg            goto state 68
	ListArg        goto state 69

State 15


	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'Bit'          shift, and enter state 62
	'QBit'         shift, and enter state 63
	'T'            shift, and enter state 64

	Type2          goto state 66

State 16


	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'Bit'          shift, and enter state 62
	'QBit'         shift, and enter state 63
	'T'            shift, and enter state 64

	Type2          goto state 57
	Type1          goto state 65

State 17


	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'Bit'          shift, and enter state 62
	'QBit'         shift, and enter state 63
	'T'            shift, and enter state 64

	Type2          goto state 57
	Type1          goto state 58
	Type           goto state 59

State 18


	'CCR'          shift, and enter state 23
	'CCR2'         shift, and enter state 24
	'CCR4'         shift, and enter state 25
	'CCR8'         shift, and enter state 26
	'CNOT'         shift, and enter state 27
	'CR'           shift, and enter state 28
	'CR2'          shift, and enter state 29
	'CR2D'         shift, and enter state 30
	'CR4'          shift, and enter state 31
	'CR4D'         shift, and enter state 32
	'CR8'          shift, and enter state 33
	'CR8D'         shift, and enter state 34
	'CRD'          shift, and enter state 35
	'FREDKIN'      shift, and enter state 36
	'H'            shift, and enter state 37
	'I'            shift, and enter state 38
	'QFT'          shift, and enter state 39
	'QFT2'         shift, and enter state 40
	'QFT3'         shift, and enter state 41
	'QFT4'         shift, and enter state 42
	'QFT5'         shift, and enter state 43
	'QFTI'         shift, and enter state 44
	'QFTI2'        shift, and enter state 45
	'QFTI3'        shift, and enter state 46
	'QFTI4'        shift, and enter state 47
	'QFTI5'        shift, and enter state 48
	'S'            shift, and enter state 49
	'SWAP'         shift, and enter state 50
	'T'            shift, and enter state 51
	'TOFFOLI'      shift, and enter state 52
	'X'            shift, and enter state 53
	'Y'            shift, and enter state 54
	'Z'            shift, and enter state 55
	L_GateIdent    shift, and enter state 56

	GateIdent      goto state 21
	Gate           goto state 22

State 19


	L_FunVar       shift, and enter state 20


State 20

	FunVar -> L_FunVar .                                (rule 19)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'Bit'          reduce using rule 19
	'QBit'         reduce using rule 19
	'T'            reduce using rule 19


State 21

	Gate -> GateIdent .                                 (rule 94)

	'('            reduce using rule 94
	')'            reduce using rule 94
	'*'            reduce using rule 94
	','            reduce using rule 94
	'0'            reduce using rule 94
	'1'            reduce using rule 94
	'CCR'          reduce using rule 94
	'CCR2'         reduce using rule 94
	'CCR4'         reduce using rule 94
	'CCR8'         reduce using rule 94
	'CNOT'         reduce using rule 94
	'CR'           reduce using rule 94
	'CR2'          reduce using rule 94
	'CR2D'         reduce using rule 94
	'CR4'          reduce using rule 94
	'CR4D'         reduce using rule 94
	'CR8'          reduce using rule 94
	'CR8D'         reduce using rule 94
	'CRD'          reduce using rule 94
	'FREDKIN'      reduce using rule 94
	'H'            reduce using rule 94
	'I'            reduce using rule 94
	'QFT'          reduce using rule 94
	'QFT2'         reduce using rule 94
	'QFT3'         reduce using rule 94
	'QFT4'         reduce using rule 94
	'QFT5'         reduce using rule 94
	'QFTI'         reduce using rule 94
	'QFTI2'        reduce using rule 94
	'QFTI3'        reduce using rule 94
	'QFTI4'        reduce using rule 94
	'QFTI5'        reduce using rule 94
	'S'            reduce using rule 94
	'SWAP'         reduce using rule 94
	'T'            reduce using rule 94
	'TOFFOLI'      reduce using rule 94
	'X'            reduce using rule 94
	'Y'            reduce using rule 94
	'Z'            reduce using rule 94
	'else'         reduce using rule 94
	'in'           reduce using rule 94
	'then'         reduce using rule 94
	L_FunVar       reduce using rule 94
	L_Var          reduce using rule 94
	L_GateIdent    reduce using rule 94
	%eof           reduce using rule 94


State 22

	%start_pGate -> Gate .                              (rule 18)

	%eof           accept


State 23

	Gate -> 'CCR' .                                     (rule 90)

	'('            reduce using rule 90
	')'            reduce using rule 90
	'*'            reduce using rule 90
	','            reduce using rule 90
	'0'            reduce using rule 90
	'1'            reduce using rule 90
	'CCR'          reduce using rule 90
	'CCR2'         reduce using rule 90
	'CCR4'         reduce using rule 90
	'CCR8'         reduce using rule 90
	'CNOT'         reduce using rule 90
	'CR'           reduce using rule 90
	'CR2'          reduce using rule 90
	'CR2D'         reduce using rule 90
	'CR4'          reduce using rule 90
	'CR4D'         reduce using rule 90
	'CR8'          reduce using rule 90
	'CR8D'         reduce using rule 90
	'CRD'          reduce using rule 90
	'FREDKIN'      reduce using rule 90
	'H'            reduce using rule 90
	'I'            reduce using rule 90
	'QFT'          reduce using rule 90
	'QFT2'         reduce using rule 90
	'QFT3'         reduce using rule 90
	'QFT4'         reduce using rule 90
	'QFT5'         reduce using rule 90
	'QFTI'         reduce using rule 90
	'QFTI2'        reduce using rule 90
	'QFTI3'        reduce using rule 90
	'QFTI4'        reduce using rule 90
	'QFTI5'        reduce using rule 90
	'S'            reduce using rule 90
	'SWAP'         reduce using rule 90
	'T'            reduce using rule 90
	'TOFFOLI'      reduce using rule 90
	'X'            reduce using rule 90
	'Y'            reduce using rule 90
	'Z'            reduce using rule 90
	'else'         reduce using rule 90
	'in'           reduce using rule 90
	'then'         reduce using rule 90
	L_FunVar       reduce using rule 90
	L_Var          reduce using rule 90
	L_GateIdent    reduce using rule 90
	%eof           reduce using rule 90


State 24

	Gate -> 'CCR2' .                                    (rule 91)

	'('            reduce using rule 91
	')'            reduce using rule 91
	'*'            reduce using rule 91
	','            reduce using rule 91
	'0'            reduce using rule 91
	'1'            reduce using rule 91
	'CCR'          reduce using rule 91
	'CCR2'         reduce using rule 91
	'CCR4'         reduce using rule 91
	'CCR8'         reduce using rule 91
	'CNOT'         reduce using rule 91
	'CR'           reduce using rule 91
	'CR2'          reduce using rule 91
	'CR2D'         reduce using rule 91
	'CR4'          reduce using rule 91
	'CR4D'         reduce using rule 91
	'CR8'          reduce using rule 91
	'CR8D'         reduce using rule 91
	'CRD'          reduce using rule 91
	'FREDKIN'      reduce using rule 91
	'H'            reduce using rule 91
	'I'            reduce using rule 91
	'QFT'          reduce using rule 91
	'QFT2'         reduce using rule 91
	'QFT3'         reduce using rule 91
	'QFT4'         reduce using rule 91
	'QFT5'         reduce using rule 91
	'QFTI'         reduce using rule 91
	'QFTI2'        reduce using rule 91
	'QFTI3'        reduce using rule 91
	'QFTI4'        reduce using rule 91
	'QFTI5'        reduce using rule 91
	'S'            reduce using rule 91
	'SWAP'         reduce using rule 91
	'T'            reduce using rule 91
	'TOFFOLI'      reduce using rule 91
	'X'            reduce using rule 91
	'Y'            reduce using rule 91
	'Z'            reduce using rule 91
	'else'         reduce using rule 91
	'in'           reduce using rule 91
	'then'         reduce using rule 91
	L_FunVar       reduce using rule 91
	L_Var          reduce using rule 91
	L_GateIdent    reduce using rule 91
	%eof           reduce using rule 91


State 25

	Gate -> 'CCR4' .                                    (rule 92)

	'('            reduce using rule 92
	')'            reduce using rule 92
	'*'            reduce using rule 92
	','            reduce using rule 92
	'0'            reduce using rule 92
	'1'            reduce using rule 92
	'CCR'          reduce using rule 92
	'CCR2'         reduce using rule 92
	'CCR4'         reduce using rule 92
	'CCR8'         reduce using rule 92
	'CNOT'         reduce using rule 92
	'CR'           reduce using rule 92
	'CR2'          reduce using rule 92
	'CR2D'         reduce using rule 92
	'CR4'          reduce using rule 92
	'CR4D'         reduce using rule 92
	'CR8'          reduce using rule 92
	'CR8D'         reduce using rule 92
	'CRD'          reduce using rule 92
	'FREDKIN'      reduce using rule 92
	'H'            reduce using rule 92
	'I'            reduce using rule 92
	'QFT'          reduce using rule 92
	'QFT2'         reduce using rule 92
	'QFT3'         reduce using rule 92
	'QFT4'         reduce using rule 92
	'QFT5'         reduce using rule 92
	'QFTI'         reduce using rule 92
	'QFTI2'        reduce using rule 92
	'QFTI3'        reduce using rule 92
	'QFTI4'        reduce using rule 92
	'QFTI5'        reduce using rule 92
	'S'            reduce using rule 92
	'SWAP'         reduce using rule 92
	'T'            reduce using rule 92
	'TOFFOLI'      reduce using rule 92
	'X'            reduce using rule 92
	'Y'            reduce using rule 92
	'Z'            reduce using rule 92
	'else'         reduce using rule 92
	'in'           reduce using rule 92
	'then'         reduce using rule 92
	L_FunVar       reduce using rule 92
	L_Var          reduce using rule 92
	L_GateIdent    reduce using rule 92
	%eof           reduce using rule 92


State 26

	Gate -> 'CCR8' .                                    (rule 93)

	'('            reduce using rule 93
	')'            reduce using rule 93
	'*'            reduce using rule 93
	','            reduce using rule 93
	'0'            reduce using rule 93
	'1'            reduce using rule 93
	'CCR'          reduce using rule 93
	'CCR2'         reduce using rule 93
	'CCR4'         reduce using rule 93
	'CCR8'         reduce using rule 93
	'CNOT'         reduce using rule 93
	'CR'           reduce using rule 93
	'CR2'          reduce using rule 93
	'CR2D'         reduce using rule 93
	'CR4'          reduce using rule 93
	'CR4D'         reduce using rule 93
	'CR8'          reduce using rule 93
	'CR8D'         reduce using rule 93
	'CRD'          reduce using rule 93
	'FREDKIN'      reduce using rule 93
	'H'            reduce using rule 93
	'I'            reduce using rule 93
	'QFT'          reduce using rule 93
	'QFT2'         reduce using rule 93
	'QFT3'         reduce using rule 93
	'QFT4'         reduce using rule 93
	'QFT5'         reduce using rule 93
	'QFTI'         reduce using rule 93
	'QFTI2'        reduce using rule 93
	'QFTI3'        reduce using rule 93
	'QFTI4'        reduce using rule 93
	'QFTI5'        reduce using rule 93
	'S'            reduce using rule 93
	'SWAP'         reduce using rule 93
	'T'            reduce using rule 93
	'TOFFOLI'      reduce using rule 93
	'X'            reduce using rule 93
	'Y'            reduce using rule 93
	'Z'            reduce using rule 93
	'else'         reduce using rule 93
	'in'           reduce using rule 93
	'then'         reduce using rule 93
	L_FunVar       reduce using rule 93
	L_Var          reduce using rule 93
	L_GateIdent    reduce using rule 93
	%eof           reduce using rule 93


State 27

	Gate -> 'CNOT' .                                    (rule 68)

	'('            reduce using rule 68
	')'            reduce using rule 68
	'*'            reduce using rule 68
	','            reduce using rule 68
	'0'            reduce using rule 68
	'1'            reduce using rule 68
	'CCR'          reduce using rule 68
	'CCR2'         reduce using rule 68
	'CCR4'         reduce using rule 68
	'CCR8'         reduce using rule 68
	'CNOT'         reduce using rule 68
	'CR'           reduce using rule 68
	'CR2'          reduce using rule 68
	'CR2D'         reduce using rule 68
	'CR4'          reduce using rule 68
	'CR4D'         reduce using rule 68
	'CR8'          reduce using rule 68
	'CR8D'         reduce using rule 68
	'CRD'          reduce using rule 68
	'FREDKIN'      reduce using rule 68
	'H'            reduce using rule 68
	'I'            reduce using rule 68
	'QFT'          reduce using rule 68
	'QFT2'         reduce using rule 68
	'QFT3'         reduce using rule 68
	'QFT4'         reduce using rule 68
	'QFT5'         reduce using rule 68
	'QFTI'         reduce using rule 68
	'QFTI2'        reduce using rule 68
	'QFTI3'        reduce using rule 68
	'QFTI4'        reduce using rule 68
	'QFTI5'        reduce using rule 68
	'S'            reduce using rule 68
	'SWAP'         reduce using rule 68
	'T'            reduce using rule 68
	'TOFFOLI'      reduce using rule 68
	'X'            reduce using rule 68
	'Y'            reduce using rule 68
	'Z'            reduce using rule 68
	'else'         reduce using rule 68
	'in'           reduce using rule 68
	'then'         reduce using rule 68
	L_FunVar       reduce using rule 68
	L_Var          reduce using rule 68
	L_GateIdent    reduce using rule 68
	%eof           reduce using rule 68


State 28

	Gate -> 'CR' .                                      (rule 82)

	'('            reduce using rule 82
	')'            reduce using rule 82
	'*'            reduce using rule 82
	','            reduce using rule 82
	'0'            reduce using rule 82
	'1'            reduce using rule 82
	'CCR'          reduce using rule 82
	'CCR2'         reduce using rule 82
	'CCR4'         reduce using rule 82
	'CCR8'         reduce using rule 82
	'CNOT'         reduce using rule 82
	'CR'           reduce using rule 82
	'CR2'          reduce using rule 82
	'CR2D'         reduce using rule 82
	'CR4'          reduce using rule 82
	'CR4D'         reduce using rule 82
	'CR8'          reduce using rule 82
	'CR8D'         reduce using rule 82
	'CRD'          reduce using rule 82
	'FREDKIN'      reduce using rule 82
	'H'            reduce using rule 82
	'I'            reduce using rule 82
	'QFT'          reduce using rule 82
	'QFT2'         reduce using rule 82
	'QFT3'         reduce using rule 82
	'QFT4'         reduce using rule 82
	'QFT5'         reduce using rule 82
	'QFTI'         reduce using rule 82
	'QFTI2'        reduce using rule 82
	'QFTI3'        reduce using rule 82
	'QFTI4'        reduce using rule 82
	'QFTI5'        reduce using rule 82
	'S'            reduce using rule 82
	'SWAP'         reduce using rule 82
	'T'            reduce using rule 82
	'TOFFOLI'      reduce using rule 82
	'X'            reduce using rule 82
	'Y'            reduce using rule 82
	'Z'            reduce using rule 82
	'else'         reduce using rule 82
	'in'           reduce using rule 82
	'then'         reduce using rule 82
	L_FunVar       reduce using rule 82
	L_Var          reduce using rule 82
	L_GateIdent    reduce using rule 82
	%eof           reduce using rule 82


State 29

	Gate -> 'CR2' .                                     (rule 84)

	'('            reduce using rule 84
	')'            reduce using rule 84
	'*'            reduce using rule 84
	','            reduce using rule 84
	'0'            reduce using rule 84
	'1'            reduce using rule 84
	'CCR'          reduce using rule 84
	'CCR2'         reduce using rule 84
	'CCR4'         reduce using rule 84
	'CCR8'         reduce using rule 84
	'CNOT'         reduce using rule 84
	'CR'           reduce using rule 84
	'CR2'          reduce using rule 84
	'CR2D'         reduce using rule 84
	'CR4'          reduce using rule 84
	'CR4D'         reduce using rule 84
	'CR8'          reduce using rule 84
	'CR8D'         reduce using rule 84
	'CRD'          reduce using rule 84
	'FREDKIN'      reduce using rule 84
	'H'            reduce using rule 84
	'I'            reduce using rule 84
	'QFT'          reduce using rule 84
	'QFT2'         reduce using rule 84
	'QFT3'         reduce using rule 84
	'QFT4'         reduce using rule 84
	'QFT5'         reduce using rule 84
	'QFTI'         reduce using rule 84
	'QFTI2'        reduce using rule 84
	'QFTI3'        reduce using rule 84
	'QFTI4'        reduce using rule 84
	'QFTI5'        reduce using rule 84
	'S'            reduce using rule 84
	'SWAP'         reduce using rule 84
	'T'            reduce using rule 84
	'TOFFOLI'      reduce using rule 84
	'X'            reduce using rule 84
	'Y'            reduce using rule 84
	'Z'            reduce using rule 84
	'else'         reduce using rule 84
	'in'           reduce using rule 84
	'then'         reduce using rule 84
	L_FunVar       reduce using rule 84
	L_Var          reduce using rule 84
	L_GateIdent    reduce using rule 84
	%eof           reduce using rule 84


State 30

	Gate -> 'CR2D' .                                    (rule 85)

	'('            reduce using rule 85
	')'            reduce using rule 85
	'*'            reduce using rule 85
	','            reduce using rule 85
	'0'            reduce using rule 85
	'1'            reduce using rule 85
	'CCR'          reduce using rule 85
	'CCR2'         reduce using rule 85
	'CCR4'         reduce using rule 85
	'CCR8'         reduce using rule 85
	'CNOT'         reduce using rule 85
	'CR'           reduce using rule 85
	'CR2'          reduce using rule 85
	'CR2D'         reduce using rule 85
	'CR4'          reduce using rule 85
	'CR4D'         reduce using rule 85
	'CR8'          reduce using rule 85
	'CR8D'         reduce using rule 85
	'CRD'          reduce using rule 85
	'FREDKIN'      reduce using rule 85
	'H'            reduce using rule 85
	'I'            reduce using rule 85
	'QFT'          reduce using rule 85
	'QFT2'         reduce using rule 85
	'QFT3'         reduce using rule 85
	'QFT4'         reduce using rule 85
	'QFT5'         reduce using rule 85
	'QFTI'         reduce using rule 85
	'QFTI2'        reduce using rule 85
	'QFTI3'        reduce using rule 85
	'QFTI4'        reduce using rule 85
	'QFTI5'        reduce using rule 85
	'S'            reduce using rule 85
	'SWAP'         reduce using rule 85
	'T'            reduce using rule 85
	'TOFFOLI'      reduce using rule 85
	'X'            reduce using rule 85
	'Y'            reduce using rule 85
	'Z'            reduce using rule 85
	'else'         reduce using rule 85
	'in'           reduce using rule 85
	'then'         reduce using rule 85
	L_FunVar       reduce using rule 85
	L_Var          reduce using rule 85
	L_GateIdent    reduce using rule 85
	%eof           reduce using rule 85


State 31

	Gate -> 'CR4' .                                     (rule 86)

	'('            reduce using rule 86
	')'            reduce using rule 86
	'*'            reduce using rule 86
	','            reduce using rule 86
	'0'            reduce using rule 86
	'1'            reduce using rule 86
	'CCR'          reduce using rule 86
	'CCR2'         reduce using rule 86
	'CCR4'         reduce using rule 86
	'CCR8'         reduce using rule 86
	'CNOT'         reduce using rule 86
	'CR'           reduce using rule 86
	'CR2'          reduce using rule 86
	'CR2D'         reduce using rule 86
	'CR4'          reduce using rule 86
	'CR4D'         reduce using rule 86
	'CR8'          reduce using rule 86
	'CR8D'         reduce using rule 86
	'CRD'          reduce using rule 86
	'FREDKIN'      reduce using rule 86
	'H'            reduce using rule 86
	'I'            reduce using rule 86
	'QFT'          reduce using rule 86
	'QFT2'         reduce using rule 86
	'QFT3'         reduce using rule 86
	'QFT4'         reduce using rule 86
	'QFT5'         reduce using rule 86
	'QFTI'         reduce using rule 86
	'QFTI2'        reduce using rule 86
	'QFTI3'        reduce using rule 86
	'QFTI4'        reduce using rule 86
	'QFTI5'        reduce using rule 86
	'S'            reduce using rule 86
	'SWAP'         reduce using rule 86
	'T'            reduce using rule 86
	'TOFFOLI'      reduce using rule 86
	'X'            reduce using rule 86
	'Y'            reduce using rule 86
	'Z'            reduce using rule 86
	'else'         reduce using rule 86
	'in'           reduce using rule 86
	'then'         reduce using rule 86
	L_FunVar       reduce using rule 86
	L_Var          reduce using rule 86
	L_GateIdent    reduce using rule 86
	%eof           reduce using rule 86


State 32

	Gate -> 'CR4D' .                                    (rule 87)

	'('            reduce using rule 87
	')'            reduce using rule 87
	'*'            reduce using rule 87
	','            reduce using rule 87
	'0'            reduce using rule 87
	'1'            reduce using rule 87
	'CCR'          reduce using rule 87
	'CCR2'         reduce using rule 87
	'CCR4'         reduce using rule 87
	'CCR8'         reduce using rule 87
	'CNOT'         reduce using rule 87
	'CR'           reduce using rule 87
	'CR2'          reduce using rule 87
	'CR2D'         reduce using rule 87
	'CR4'          reduce using rule 87
	'CR4D'         reduce using rule 87
	'CR8'          reduce using rule 87
	'CR8D'         reduce using rule 87
	'CRD'          reduce using rule 87
	'FREDKIN'      reduce using rule 87
	'H'            reduce using rule 87
	'I'            reduce using rule 87
	'QFT'          reduce using rule 87
	'QFT2'         reduce using rule 87
	'QFT3'         reduce using rule 87
	'QFT4'         reduce using rule 87
	'QFT5'         reduce using rule 87
	'QFTI'         reduce using rule 87
	'QFTI2'        reduce using rule 87
	'QFTI3'        reduce using rule 87
	'QFTI4'        reduce using rule 87
	'QFTI5'        reduce using rule 87
	'S'            reduce using rule 87
	'SWAP'         reduce using rule 87
	'T'            reduce using rule 87
	'TOFFOLI'      reduce using rule 87
	'X'            reduce using rule 87
	'Y'            reduce using rule 87
	'Z'            reduce using rule 87
	'else'         reduce using rule 87
	'in'           reduce using rule 87
	'then'         reduce using rule 87
	L_FunVar       reduce using rule 87
	L_Var          reduce using rule 87
	L_GateIdent    reduce using rule 87
	%eof           reduce using rule 87


State 33

	Gate -> 'CR8' .                                     (rule 88)

	'('            reduce using rule 88
	')'            reduce using rule 88
	'*'            reduce using rule 88
	','            reduce using rule 88
	'0'            reduce using rule 88
	'1'            reduce using rule 88
	'CCR'          reduce using rule 88
	'CCR2'         reduce using rule 88
	'CCR4'         reduce using rule 88
	'CCR8'         reduce using rule 88
	'CNOT'         reduce using rule 88
	'CR'           reduce using rule 88
	'CR2'          reduce using rule 88
	'CR2D'         reduce using rule 88
	'CR4'          reduce using rule 88
	'CR4D'         reduce using rule 88
	'CR8'          reduce using rule 88
	'CR8D'         reduce using rule 88
	'CRD'          reduce using rule 88
	'FREDKIN'      reduce using rule 88
	'H'            reduce using rule 88
	'I'            reduce using rule 88
	'QFT'          reduce using rule 88
	'QFT2'         reduce using rule 88
	'QFT3'         reduce using rule 88
	'QFT4'         reduce using rule 88
	'QFT5'         reduce using rule 88
	'QFTI'         reduce using rule 88
	'QFTI2'        reduce using rule 88
	'QFTI3'        reduce using rule 88
	'QFTI4'        reduce using rule 88
	'QFTI5'        reduce using rule 88
	'S'            reduce using rule 88
	'SWAP'         reduce using rule 88
	'T'            reduce using rule 88
	'TOFFOLI'      reduce using rule 88
	'X'            reduce using rule 88
	'Y'            reduce using rule 88
	'Z'            reduce using rule 88
	'else'         reduce using rule 88
	'in'           reduce using rule 88
	'then'         reduce using rule 88
	L_FunVar       reduce using rule 88
	L_Var          reduce using rule 88
	L_GateIdent    reduce using rule 88
	%eof           reduce using rule 88


State 34

	Gate -> 'CR8D' .                                    (rule 89)

	'('            reduce using rule 89
	')'            reduce using rule 89
	'*'            reduce using rule 89
	','            reduce using rule 89
	'0'            reduce using rule 89
	'1'            reduce using rule 89
	'CCR'          reduce using rule 89
	'CCR2'         reduce using rule 89
	'CCR4'         reduce using rule 89
	'CCR8'         reduce using rule 89
	'CNOT'         reduce using rule 89
	'CR'           reduce using rule 89
	'CR2'          reduce using rule 89
	'CR2D'         reduce using rule 89
	'CR4'          reduce using rule 89
	'CR4D'         reduce using rule 89
	'CR8'          reduce using rule 89
	'CR8D'         reduce using rule 89
	'CRD'          reduce using rule 89
	'FREDKIN'      reduce using rule 89
	'H'            reduce using rule 89
	'I'            reduce using rule 89
	'QFT'          reduce using rule 89
	'QFT2'         reduce using rule 89
	'QFT3'         reduce using rule 89
	'QFT4'         reduce using rule 89
	'QFT5'         reduce using rule 89
	'QFTI'         reduce using rule 89
	'QFTI2'        reduce using rule 89
	'QFTI3'        reduce using rule 89
	'QFTI4'        reduce using rule 89
	'QFTI5'        reduce using rule 89
	'S'            reduce using rule 89
	'SWAP'         reduce using rule 89
	'T'            reduce using rule 89
	'TOFFOLI'      reduce using rule 89
	'X'            reduce using rule 89
	'Y'            reduce using rule 89
	'Z'            reduce using rule 89
	'else'         reduce using rule 89
	'in'           reduce using rule 89
	'then'         reduce using rule 89
	L_FunVar       reduce using rule 89
	L_Var          reduce using rule 89
	L_GateIdent    reduce using rule 89
	%eof           reduce using rule 89


State 35

	Gate -> 'CRD' .                                     (rule 83)

	'('            reduce using rule 83
	')'            reduce using rule 83
	'*'            reduce using rule 83
	','            reduce using rule 83
	'0'            reduce using rule 83
	'1'            reduce using rule 83
	'CCR'          reduce using rule 83
	'CCR2'         reduce using rule 83
	'CCR4'         reduce using rule 83
	'CCR8'         reduce using rule 83
	'CNOT'         reduce using rule 83
	'CR'           reduce using rule 83
	'CR2'          reduce using rule 83
	'CR2D'         reduce using rule 83
	'CR4'          reduce using rule 83
	'CR4D'         reduce using rule 83
	'CR8'          reduce using rule 83
	'CR8D'         reduce using rule 83
	'CRD'          reduce using rule 83
	'FREDKIN'      reduce using rule 83
	'H'            reduce using rule 83
	'I'            reduce using rule 83
	'QFT'          reduce using rule 83
	'QFT2'         reduce using rule 83
	'QFT3'         reduce using rule 83
	'QFT4'         reduce using rule 83
	'QFT5'         reduce using rule 83
	'QFTI'         reduce using rule 83
	'QFTI2'        reduce using rule 83
	'QFTI3'        reduce using rule 83
	'QFTI4'        reduce using rule 83
	'QFTI5'        reduce using rule 83
	'S'            reduce using rule 83
	'SWAP'         reduce using rule 83
	'T'            reduce using rule 83
	'TOFFOLI'      reduce using rule 83
	'X'            reduce using rule 83
	'Y'            reduce using rule 83
	'Z'            reduce using rule 83
	'else'         reduce using rule 83
	'in'           reduce using rule 83
	'then'         reduce using rule 83
	L_FunVar       reduce using rule 83
	L_Var          reduce using rule 83
	L_GateIdent    reduce using rule 83
	%eof           reduce using rule 83


State 36

	Gate -> 'FREDKIN' .                                 (rule 71)

	'('            reduce using rule 71
	')'            reduce using rule 71
	'*'            reduce using rule 71
	','            reduce using rule 71
	'0'            reduce using rule 71
	'1'            reduce using rule 71
	'CCR'          reduce using rule 71
	'CCR2'         reduce using rule 71
	'CCR4'         reduce using rule 71
	'CCR8'         reduce using rule 71
	'CNOT'         reduce using rule 71
	'CR'           reduce using rule 71
	'CR2'          reduce using rule 71
	'CR2D'         reduce using rule 71
	'CR4'          reduce using rule 71
	'CR4D'         reduce using rule 71
	'CR8'          reduce using rule 71
	'CR8D'         reduce using rule 71
	'CRD'          reduce using rule 71
	'FREDKIN'      reduce using rule 71
	'H'            reduce using rule 71
	'I'            reduce using rule 71
	'QFT'          reduce using rule 71
	'QFT2'         reduce using rule 71
	'QFT3'         reduce using rule 71
	'QFT4'         reduce using rule 71
	'QFT5'         reduce using rule 71
	'QFTI'         reduce using rule 71
	'QFTI2'        reduce using rule 71
	'QFTI3'        reduce using rule 71
	'QFTI4'        reduce using rule 71
	'QFTI5'        reduce using rule 71
	'S'            reduce using rule 71
	'SWAP'         reduce using rule 71
	'T'            reduce using rule 71
	'TOFFOLI'      reduce using rule 71
	'X'            reduce using rule 71
	'Y'            reduce using rule 71
	'Z'            reduce using rule 71
	'else'         reduce using rule 71
	'in'           reduce using rule 71
	'then'         reduce using rule 71
	L_FunVar       reduce using rule 71
	L_Var          reduce using rule 71
	L_GateIdent    reduce using rule 71
	%eof           reduce using rule 71


State 37

	Gate -> 'H' .                                       (rule 61)

	'('            reduce using rule 61
	')'            reduce using rule 61
	'*'            reduce using rule 61
	','            reduce using rule 61
	'0'            reduce using rule 61
	'1'            reduce using rule 61
	'CCR'          reduce using rule 61
	'CCR2'         reduce using rule 61
	'CCR4'         reduce using rule 61
	'CCR8'         reduce using rule 61
	'CNOT'         reduce using rule 61
	'CR'           reduce using rule 61
	'CR2'          reduce using rule 61
	'CR2D'         reduce using rule 61
	'CR4'          reduce using rule 61
	'CR4D'         reduce using rule 61
	'CR8'          reduce using rule 61
	'CR8D'         reduce using rule 61
	'CRD'          reduce using rule 61
	'FREDKIN'      reduce using rule 61
	'H'            reduce using rule 61
	'I'            reduce using rule 61
	'QFT'          reduce using rule 61
	'QFT2'         reduce using rule 61
	'QFT3'         reduce using rule 61
	'QFT4'         reduce using rule 61
	'QFT5'         reduce using rule 61
	'QFTI'         reduce using rule 61
	'QFTI2'        reduce using rule 61
	'QFTI3'        reduce using rule 61
	'QFTI4'        reduce using rule 61
	'QFTI5'        reduce using rule 61
	'S'            reduce using rule 61
	'SWAP'         reduce using rule 61
	'T'            reduce using rule 61
	'TOFFOLI'      reduce using rule 61
	'X'            reduce using rule 61
	'Y'            reduce using rule 61
	'Z'            reduce using rule 61
	'else'         reduce using rule 61
	'in'           reduce using rule 61
	'then'         reduce using rule 61
	L_FunVar       reduce using rule 61
	L_Var          reduce using rule 61
	L_GateIdent    reduce using rule 61
	%eof           reduce using rule 61


State 38

	Gate -> 'I' .                                       (rule 65)

	'('            reduce using rule 65
	')'            reduce using rule 65
	'*'            reduce using rule 65
	','            reduce using rule 65
	'0'            reduce using rule 65
	'1'            reduce using rule 65
	'CCR'          reduce using rule 65
	'CCR2'         reduce using rule 65
	'CCR4'         reduce using rule 65
	'CCR8'         reduce using rule 65
	'CNOT'         reduce using rule 65
	'CR'           reduce using rule 65
	'CR2'          reduce using rule 65
	'CR2D'         reduce using rule 65
	'CR4'          reduce using rule 65
	'CR4D'         reduce using rule 65
	'CR8'          reduce using rule 65
	'CR8D'         reduce using rule 65
	'CRD'          reduce using rule 65
	'FREDKIN'      reduce using rule 65
	'H'            reduce using rule 65
	'I'            reduce using rule 65
	'QFT'          reduce using rule 65
	'QFT2'         reduce using rule 65
	'QFT3'         reduce using rule 65
	'QFT4'         reduce using rule 65
	'QFT5'         reduce using rule 65
	'QFTI'         reduce using rule 65
	'QFTI2'        reduce using rule 65
	'QFTI3'        reduce using rule 65
	'QFTI4'        reduce using rule 65
	'QFTI5'        reduce using rule 65
	'S'            reduce using rule 65
	'SWAP'         reduce using rule 65
	'T'            reduce using rule 65
	'TOFFOLI'      reduce using rule 65
	'X'            reduce using rule 65
	'Y'            reduce using rule 65
	'Z'            reduce using rule 65
	'else'         reduce using rule 65
	'in'           reduce using rule 65
	'then'         reduce using rule 65
	L_FunVar       reduce using rule 65
	L_Var          reduce using rule 65
	L_GateIdent    reduce using rule 65
	%eof           reduce using rule 65


State 39

	Gate -> 'QFT' .                                     (rule 72)

	'('            reduce using rule 72
	')'            reduce using rule 72
	'*'            reduce using rule 72
	','            reduce using rule 72
	'0'            reduce using rule 72
	'1'            reduce using rule 72
	'CCR'          reduce using rule 72
	'CCR2'         reduce using rule 72
	'CCR4'         reduce using rule 72
	'CCR8'         reduce using rule 72
	'CNOT'         reduce using rule 72
	'CR'           reduce using rule 72
	'CR2'          reduce using rule 72
	'CR2D'         reduce using rule 72
	'CR4'          reduce using rule 72
	'CR4D'         reduce using rule 72
	'CR8'          reduce using rule 72
	'CR8D'         reduce using rule 72
	'CRD'          reduce using rule 72
	'FREDKIN'      reduce using rule 72
	'H'            reduce using rule 72
	'I'            reduce using rule 72
	'QFT'          reduce using rule 72
	'QFT2'         reduce using rule 72
	'QFT3'         reduce using rule 72
	'QFT4'         reduce using rule 72
	'QFT5'         reduce using rule 72
	'QFTI'         reduce using rule 72
	'QFTI2'        reduce using rule 72
	'QFTI3'        reduce using rule 72
	'QFTI4'        reduce using rule 72
	'QFTI5'        reduce using rule 72
	'S'            reduce using rule 72
	'SWAP'         reduce using rule 72
	'T'            reduce using rule 72
	'TOFFOLI'      reduce using rule 72
	'X'            reduce using rule 72
	'Y'            reduce using rule 72
	'Z'            reduce using rule 72
	'else'         reduce using rule 72
	'in'           reduce using rule 72
	'then'         reduce using rule 72
	L_FunVar       reduce using rule 72
	L_Var          reduce using rule 72
	L_GateIdent    reduce using rule 72
	%eof           reduce using rule 72


State 40

	Gate -> 'QFT2' .                                    (rule 74)

	'('            reduce using rule 74
	')'            reduce using rule 74
	'*'            reduce using rule 74
	','            reduce using rule 74
	'0'            reduce using rule 74
	'1'            reduce using rule 74
	'CCR'          reduce using rule 74
	'CCR2'         reduce using rule 74
	'CCR4'         reduce using rule 74
	'CCR8'         reduce using rule 74
	'CNOT'         reduce using rule 74
	'CR'           reduce using rule 74
	'CR2'          reduce using rule 74
	'CR2D'         reduce using rule 74
	'CR4'          reduce using rule 74
	'CR4D'         reduce using rule 74
	'CR8'          reduce using rule 74
	'CR8D'         reduce using rule 74
	'CRD'          reduce using rule 74
	'FREDKIN'      reduce using rule 74
	'H'            reduce using rule 74
	'I'            reduce using rule 74
	'QFT'          reduce using rule 74
	'QFT2'         reduce using rule 74
	'QFT3'         reduce using rule 74
	'QFT4'         reduce using rule 74
	'QFT5'         reduce using rule 74
	'QFTI'         reduce using rule 74
	'QFTI2'        reduce using rule 74
	'QFTI3'        reduce using rule 74
	'QFTI4'        reduce using rule 74
	'QFTI5'        reduce using rule 74
	'S'            reduce using rule 74
	'SWAP'         reduce using rule 74
	'T'            reduce using rule 74
	'TOFFOLI'      reduce using rule 74
	'X'            reduce using rule 74
	'Y'            reduce using rule 74
	'Z'            reduce using rule 74
	'else'         reduce using rule 74
	'in'           reduce using rule 74
	'then'         reduce using rule 74
	L_FunVar       reduce using rule 74
	L_Var          reduce using rule 74
	L_GateIdent    reduce using rule 74
	%eof           reduce using rule 74


State 41

	Gate -> 'QFT3' .                                    (rule 76)

	'('            reduce using rule 76
	')'            reduce using rule 76
	'*'            reduce using rule 76
	','            reduce using rule 76
	'0'            reduce using rule 76
	'1'            reduce using rule 76
	'CCR'          reduce using rule 76
	'CCR2'         reduce using rule 76
	'CCR4'         reduce using rule 76
	'CCR8'         reduce using rule 76
	'CNOT'         reduce using rule 76
	'CR'           reduce using rule 76
	'CR2'          reduce using rule 76
	'CR2D'         reduce using rule 76
	'CR4'          reduce using rule 76
	'CR4D'         reduce using rule 76
	'CR8'          reduce using rule 76
	'CR8D'         reduce using rule 76
	'CRD'          reduce using rule 76
	'FREDKIN'      reduce using rule 76
	'H'            reduce using rule 76
	'I'            reduce using rule 76
	'QFT'          reduce using rule 76
	'QFT2'         reduce using rule 76
	'QFT3'         reduce using rule 76
	'QFT4'         reduce using rule 76
	'QFT5'         reduce using rule 76
	'QFTI'         reduce using rule 76
	'QFTI2'        reduce using rule 76
	'QFTI3'        reduce using rule 76
	'QFTI4'        reduce using rule 76
	'QFTI5'        reduce using rule 76
	'S'            reduce using rule 76
	'SWAP'         reduce using rule 76
	'T'            reduce using rule 76
	'TOFFOLI'      reduce using rule 76
	'X'            reduce using rule 76
	'Y'            reduce using rule 76
	'Z'            reduce using rule 76
	'else'         reduce using rule 76
	'in'           reduce using rule 76
	'then'         reduce using rule 76
	L_FunVar       reduce using rule 76
	L_Var          reduce using rule 76
	L_GateIdent    reduce using rule 76
	%eof           reduce using rule 76


State 42

	Gate -> 'QFT4' .                                    (rule 78)

	'('            reduce using rule 78
	')'            reduce using rule 78
	'*'            reduce using rule 78
	','            reduce using rule 78
	'0'            reduce using rule 78
	'1'            reduce using rule 78
	'CCR'          reduce using rule 78
	'CCR2'         reduce using rule 78
	'CCR4'         reduce using rule 78
	'CCR8'         reduce using rule 78
	'CNOT'         reduce using rule 78
	'CR'           reduce using rule 78
	'CR2'          reduce using rule 78
	'CR2D'         reduce using rule 78
	'CR4'          reduce using rule 78
	'CR4D'         reduce using rule 78
	'CR8'          reduce using rule 78
	'CR8D'         reduce using rule 78
	'CRD'          reduce using rule 78
	'FREDKIN'      reduce using rule 78
	'H'            reduce using rule 78
	'I'            reduce using rule 78
	'QFT'          reduce using rule 78
	'QFT2'         reduce using rule 78
	'QFT3'         reduce using rule 78
	'QFT4'         reduce using rule 78
	'QFT5'         reduce using rule 78
	'QFTI'         reduce using rule 78
	'QFTI2'        reduce using rule 78
	'QFTI3'        reduce using rule 78
	'QFTI4'        reduce using rule 78
	'QFTI5'        reduce using rule 78
	'S'            reduce using rule 78
	'SWAP'         reduce using rule 78
	'T'            reduce using rule 78
	'TOFFOLI'      reduce using rule 78
	'X'            reduce using rule 78
	'Y'            reduce using rule 78
	'Z'            reduce using rule 78
	'else'         reduce using rule 78
	'in'           reduce using rule 78
	'then'         reduce using rule 78
	L_FunVar       reduce using rule 78
	L_Var          reduce using rule 78
	L_GateIdent    reduce using rule 78
	%eof           reduce using rule 78


State 43

	Gate -> 'QFT5' .                                    (rule 80)

	'('            reduce using rule 80
	')'            reduce using rule 80
	'*'            reduce using rule 80
	','            reduce using rule 80
	'0'            reduce using rule 80
	'1'            reduce using rule 80
	'CCR'          reduce using rule 80
	'CCR2'         reduce using rule 80
	'CCR4'         reduce using rule 80
	'CCR8'         reduce using rule 80
	'CNOT'         reduce using rule 80
	'CR'           reduce using rule 80
	'CR2'          reduce using rule 80
	'CR2D'         reduce using rule 80
	'CR4'          reduce using rule 80
	'CR4D'         reduce using rule 80
	'CR8'          reduce using rule 80
	'CR8D'         reduce using rule 80
	'CRD'          reduce using rule 80
	'FREDKIN'      reduce using rule 80
	'H'            reduce using rule 80
	'I'            reduce using rule 80
	'QFT'          reduce using rule 80
	'QFT2'         reduce using rule 80
	'QFT3'         reduce using rule 80
	'QFT4'         reduce using rule 80
	'QFT5'         reduce using rule 80
	'QFTI'         reduce using rule 80
	'QFTI2'        reduce using rule 80
	'QFTI3'        reduce using rule 80
	'QFTI4'        reduce using rule 80
	'QFTI5'        reduce using rule 80
	'S'            reduce using rule 80
	'SWAP'         reduce using rule 80
	'T'            reduce using rule 80
	'TOFFOLI'      reduce using rule 80
	'X'            reduce using rule 80
	'Y'            reduce using rule 80
	'Z'            reduce using rule 80
	'else'         reduce using rule 80
	'in'           reduce using rule 80
	'then'         reduce using rule 80
	L_FunVar       reduce using rule 80
	L_Var          reduce using rule 80
	L_GateIdent    reduce using rule 80
	%eof           reduce using rule 80


State 44

	Gate -> 'QFTI' .                                    (rule 73)

	'('            reduce using rule 73
	')'            reduce using rule 73
	'*'            reduce using rule 73
	','            reduce using rule 73
	'0'            reduce using rule 73
	'1'            reduce using rule 73
	'CCR'          reduce using rule 73
	'CCR2'         reduce using rule 73
	'CCR4'         reduce using rule 73
	'CCR8'         reduce using rule 73
	'CNOT'         reduce using rule 73
	'CR'           reduce using rule 73
	'CR2'          reduce using rule 73
	'CR2D'         reduce using rule 73
	'CR4'          reduce using rule 73
	'CR4D'         reduce using rule 73
	'CR8'          reduce using rule 73
	'CR8D'         reduce using rule 73
	'CRD'          reduce using rule 73
	'FREDKIN'      reduce using rule 73
	'H'            reduce using rule 73
	'I'            reduce using rule 73
	'QFT'          reduce using rule 73
	'QFT2'         reduce using rule 73
	'QFT3'         reduce using rule 73
	'QFT4'         reduce using rule 73
	'QFT5'         reduce using rule 73
	'QFTI'         reduce using rule 73
	'QFTI2'        reduce using rule 73
	'QFTI3'        reduce using rule 73
	'QFTI4'        reduce using rule 73
	'QFTI5'        reduce using rule 73
	'S'            reduce using rule 73
	'SWAP'         reduce using rule 73
	'T'            reduce using rule 73
	'TOFFOLI'      reduce using rule 73
	'X'            reduce using rule 73
	'Y'            reduce using rule 73
	'Z'            reduce using rule 73
	'else'         reduce using rule 73
	'in'           reduce using rule 73
	'then'         reduce using rule 73
	L_FunVar       reduce using rule 73
	L_Var          reduce using rule 73
	L_GateIdent    reduce using rule 73
	%eof           reduce using rule 73


State 45

	Gate -> 'QFTI2' .                                   (rule 75)

	'('            reduce using rule 75
	')'            reduce using rule 75
	'*'            reduce using rule 75
	','            reduce using rule 75
	'0'            reduce using rule 75
	'1'            reduce using rule 75
	'CCR'          reduce using rule 75
	'CCR2'         reduce using rule 75
	'CCR4'         reduce using rule 75
	'CCR8'         reduce using rule 75
	'CNOT'         reduce using rule 75
	'CR'           reduce using rule 75
	'CR2'          reduce using rule 75
	'CR2D'         reduce using rule 75
	'CR4'          reduce using rule 75
	'CR4D'         reduce using rule 75
	'CR8'          reduce using rule 75
	'CR8D'         reduce using rule 75
	'CRD'          reduce using rule 75
	'FREDKIN'      reduce using rule 75
	'H'            reduce using rule 75
	'I'            reduce using rule 75
	'QFT'          reduce using rule 75
	'QFT2'         reduce using rule 75
	'QFT3'         reduce using rule 75
	'QFT4'         reduce using rule 75
	'QFT5'         reduce using rule 75
	'QFTI'         reduce using rule 75
	'QFTI2'        reduce using rule 75
	'QFTI3'        reduce using rule 75
	'QFTI4'        reduce using rule 75
	'QFTI5'        reduce using rule 75
	'S'            reduce using rule 75
	'SWAP'         reduce using rule 75
	'T'            reduce using rule 75
	'TOFFOLI'      reduce using rule 75
	'X'            reduce using rule 75
	'Y'            reduce using rule 75
	'Z'            reduce using rule 75
	'else'         reduce using rule 75
	'in'           reduce using rule 75
	'then'         reduce using rule 75
	L_FunVar       reduce using rule 75
	L_Var          reduce using rule 75
	L_GateIdent    reduce using rule 75
	%eof           reduce using rule 75


State 46

	Gate -> 'QFTI3' .                                   (rule 77)

	'('            reduce using rule 77
	')'            reduce using rule 77
	'*'            reduce using rule 77
	','            reduce using rule 77
	'0'            reduce using rule 77
	'1'            reduce using rule 77
	'CCR'          reduce using rule 77
	'CCR2'         reduce using rule 77
	'CCR4'         reduce using rule 77
	'CCR8'         reduce using rule 77
	'CNOT'         reduce using rule 77
	'CR'           reduce using rule 77
	'CR2'          reduce using rule 77
	'CR2D'         reduce using rule 77
	'CR4'          reduce using rule 77
	'CR4D'         reduce using rule 77
	'CR8'          reduce using rule 77
	'CR8D'         reduce using rule 77
	'CRD'          reduce using rule 77
	'FREDKIN'      reduce using rule 77
	'H'            reduce using rule 77
	'I'            reduce using rule 77
	'QFT'          reduce using rule 77
	'QFT2'         reduce using rule 77
	'QFT3'         reduce using rule 77
	'QFT4'         reduce using rule 77
	'QFT5'         reduce using rule 77
	'QFTI'         reduce using rule 77
	'QFTI2'        reduce using rule 77
	'QFTI3'        reduce using rule 77
	'QFTI4'        reduce using rule 77
	'QFTI5'        reduce using rule 77
	'S'            reduce using rule 77
	'SWAP'         reduce using rule 77
	'T'            reduce using rule 77
	'TOFFOLI'      reduce using rule 77
	'X'            reduce using rule 77
	'Y'            reduce using rule 77
	'Z'            reduce using rule 77
	'else'         reduce using rule 77
	'in'           reduce using rule 77
	'then'         reduce using rule 77
	L_FunVar       reduce using rule 77
	L_Var          reduce using rule 77
	L_GateIdent    reduce using rule 77
	%eof           reduce using rule 77


State 47

	Gate -> 'QFTI4' .                                   (rule 79)

	'('            reduce using rule 79
	')'            reduce using rule 79
	'*'            reduce using rule 79
	','            reduce using rule 79
	'0'            reduce using rule 79
	'1'            reduce using rule 79
	'CCR'          reduce using rule 79
	'CCR2'         reduce using rule 79
	'CCR4'         reduce using rule 79
	'CCR8'         reduce using rule 79
	'CNOT'         reduce using rule 79
	'CR'           reduce using rule 79
	'CR2'          reduce using rule 79
	'CR2D'         reduce using rule 79
	'CR4'          reduce using rule 79
	'CR4D'         reduce using rule 79
	'CR8'          reduce using rule 79
	'CR8D'         reduce using rule 79
	'CRD'          reduce using rule 79
	'FREDKIN'      reduce using rule 79
	'H'            reduce using rule 79
	'I'            reduce using rule 79
	'QFT'          reduce using rule 79
	'QFT2'         reduce using rule 79
	'QFT3'         reduce using rule 79
	'QFT4'         reduce using rule 79
	'QFT5'         reduce using rule 79
	'QFTI'         reduce using rule 79
	'QFTI2'        reduce using rule 79
	'QFTI3'        reduce using rule 79
	'QFTI4'        reduce using rule 79
	'QFTI5'        reduce using rule 79
	'S'            reduce using rule 79
	'SWAP'         reduce using rule 79
	'T'            reduce using rule 79
	'TOFFOLI'      reduce using rule 79
	'X'            reduce using rule 79
	'Y'            reduce using rule 79
	'Z'            reduce using rule 79
	'else'         reduce using rule 79
	'in'           reduce using rule 79
	'then'         reduce using rule 79
	L_FunVar       reduce using rule 79
	L_Var          reduce using rule 79
	L_GateIdent    reduce using rule 79
	%eof           reduce using rule 79


State 48

	Gate -> 'QFTI5' .                                   (rule 81)

	'('            reduce using rule 81
	')'            reduce using rule 81
	'*'            reduce using rule 81
	','            reduce using rule 81
	'0'            reduce using rule 81
	'1'            reduce using rule 81
	'CCR'          reduce using rule 81
	'CCR2'         reduce using rule 81
	'CCR4'         reduce using rule 81
	'CCR8'         reduce using rule 81
	'CNOT'         reduce using rule 81
	'CR'           reduce using rule 81
	'CR2'          reduce using rule 81
	'CR2D'         reduce using rule 81
	'CR4'          reduce using rule 81
	'CR4D'         reduce using rule 81
	'CR8'          reduce using rule 81
	'CR8D'         reduce using rule 81
	'CRD'          reduce using rule 81
	'FREDKIN'      reduce using rule 81
	'H'            reduce using rule 81
	'I'            reduce using rule 81
	'QFT'          reduce using rule 81
	'QFT2'         reduce using rule 81
	'QFT3'         reduce using rule 81
	'QFT4'         reduce using rule 81
	'QFT5'         reduce using rule 81
	'QFTI'         reduce using rule 81
	'QFTI2'        reduce using rule 81
	'QFTI3'        reduce using rule 81
	'QFTI4'        reduce using rule 81
	'QFTI5'        reduce using rule 81
	'S'            reduce using rule 81
	'SWAP'         reduce using rule 81
	'T'            reduce using rule 81
	'TOFFOLI'      reduce using rule 81
	'X'            reduce using rule 81
	'Y'            reduce using rule 81
	'Z'            reduce using rule 81
	'else'         reduce using rule 81
	'in'           reduce using rule 81
	'then'         reduce using rule 81
	L_FunVar       reduce using rule 81
	L_Var          reduce using rule 81
	L_GateIdent    reduce using rule 81
	%eof           reduce using rule 81


State 49

	Gate -> 'S' .                                       (rule 66)

	'('            reduce using rule 66
	')'            reduce using rule 66
	'*'            reduce using rule 66
	','            reduce using rule 66
	'0'            reduce using rule 66
	'1'            reduce using rule 66
	'CCR'          reduce using rule 66
	'CCR2'         reduce using rule 66
	'CCR4'         reduce using rule 66
	'CCR8'         reduce using rule 66
	'CNOT'         reduce using rule 66
	'CR'           reduce using rule 66
	'CR2'          reduce using rule 66
	'CR2D'         reduce using rule 66
	'CR4'          reduce using rule 66
	'CR4D'         reduce using rule 66
	'CR8'          reduce using rule 66
	'CR8D'         reduce using rule 66
	'CRD'          reduce using rule 66
	'FREDKIN'      reduce using rule 66
	'H'            reduce using rule 66
	'I'            reduce using rule 66
	'QFT'          reduce using rule 66
	'QFT2'         reduce using rule 66
	'QFT3'         reduce using rule 66
	'QFT4'         reduce using rule 66
	'QFT5'         reduce using rule 66
	'QFTI'         reduce using rule 66
	'QFTI2'        reduce using rule 66
	'QFTI3'        reduce using rule 66
	'QFTI4'        reduce using rule 66
	'QFTI5'        reduce using rule 66
	'S'            reduce using rule 66
	'SWAP'         reduce using rule 66
	'T'            reduce using rule 66
	'TOFFOLI'      reduce using rule 66
	'X'            reduce using rule 66
	'Y'            reduce using rule 66
	'Z'            reduce using rule 66
	'else'         reduce using rule 66
	'in'           reduce using rule 66
	'then'         reduce using rule 66
	L_FunVar       reduce using rule 66
	L_Var          reduce using rule 66
	L_GateIdent    reduce using rule 66
	%eof           reduce using rule 66


State 50

	Gate -> 'SWAP' .                                    (rule 70)

	'('            reduce using rule 70
	')'            reduce using rule 70
	'*'            reduce using rule 70
	','            reduce using rule 70
	'0'            reduce using rule 70
	'1'            reduce using rule 70
	'CCR'          reduce using rule 70
	'CCR2'         reduce using rule 70
	'CCR4'         reduce using rule 70
	'CCR8'         reduce using rule 70
	'CNOT'         reduce using rule 70
	'CR'           reduce using rule 70
	'CR2'          reduce using rule 70
	'CR2D'         reduce using rule 70
	'CR4'          reduce using rule 70
	'CR4D'         reduce using rule 70
	'CR8'          reduce using rule 70
	'CR8D'         reduce using rule 70
	'CRD'          reduce using rule 70
	'FREDKIN'      reduce using rule 70
	'H'            reduce using rule 70
	'I'            reduce using rule 70
	'QFT'          reduce using rule 70
	'QFT2'         reduce using rule 70
	'QFT3'         reduce using rule 70
	'QFT4'         reduce using rule 70
	'QFT5'         reduce using rule 70
	'QFTI'         reduce using rule 70
	'QFTI2'        reduce using rule 70
	'QFTI3'        reduce using rule 70
	'QFTI4'        reduce using rule 70
	'QFTI5'        reduce using rule 70
	'S'            reduce using rule 70
	'SWAP'         reduce using rule 70
	'T'            reduce using rule 70
	'TOFFOLI'      reduce using rule 70
	'X'            reduce using rule 70
	'Y'            reduce using rule 70
	'Z'            reduce using rule 70
	'else'         reduce using rule 70
	'in'           reduce using rule 70
	'then'         reduce using rule 70
	L_FunVar       reduce using rule 70
	L_Var          reduce using rule 70
	L_GateIdent    reduce using rule 70
	%eof           reduce using rule 70


State 51

	Gate -> 'T' .                                       (rule 67)

	'('            reduce using rule 67
	')'            reduce using rule 67
	'*'            reduce using rule 67
	','            reduce using rule 67
	'0'            reduce using rule 67
	'1'            reduce using rule 67
	'CCR'          reduce using rule 67
	'CCR2'         reduce using rule 67
	'CCR4'         reduce using rule 67
	'CCR8'         reduce using rule 67
	'CNOT'         reduce using rule 67
	'CR'           reduce using rule 67
	'CR2'          reduce using rule 67
	'CR2D'         reduce using rule 67
	'CR4'          reduce using rule 67
	'CR4D'         reduce using rule 67
	'CR8'          reduce using rule 67
	'CR8D'         reduce using rule 67
	'CRD'          reduce using rule 67
	'FREDKIN'      reduce using rule 67
	'H'            reduce using rule 67
	'I'            reduce using rule 67
	'QFT'          reduce using rule 67
	'QFT2'         reduce using rule 67
	'QFT3'         reduce using rule 67
	'QFT4'         reduce using rule 67
	'QFT5'         reduce using rule 67
	'QFTI'         reduce using rule 67
	'QFTI2'        reduce using rule 67
	'QFTI3'        reduce using rule 67
	'QFTI4'        reduce using rule 67
	'QFTI5'        reduce using rule 67
	'S'            reduce using rule 67
	'SWAP'         reduce using rule 67
	'T'            reduce using rule 67
	'TOFFOLI'      reduce using rule 67
	'X'            reduce using rule 67
	'Y'            reduce using rule 67
	'Z'            reduce using rule 67
	'else'         reduce using rule 67
	'in'           reduce using rule 67
	'then'         reduce using rule 67
	L_FunVar       reduce using rule 67
	L_Var          reduce using rule 67
	L_GateIdent    reduce using rule 67
	%eof           reduce using rule 67


State 52

	Gate -> 'TOFFOLI' .                                 (rule 69)

	'('            reduce using rule 69
	')'            reduce using rule 69
	'*'            reduce using rule 69
	','            reduce using rule 69
	'0'            reduce using rule 69
	'1'            reduce using rule 69
	'CCR'          reduce using rule 69
	'CCR2'         reduce using rule 69
	'CCR4'         reduce using rule 69
	'CCR8'         reduce using rule 69
	'CNOT'         reduce using rule 69
	'CR'           reduce using rule 69
	'CR2'          reduce using rule 69
	'CR2D'         reduce using rule 69
	'CR4'          reduce using rule 69
	'CR4D'         reduce using rule 69
	'CR8'          reduce using rule 69
	'CR8D'         reduce using rule 69
	'CRD'          reduce using rule 69
	'FREDKIN'      reduce using rule 69
	'H'            reduce using rule 69
	'I'            reduce using rule 69
	'QFT'          reduce using rule 69
	'QFT2'         reduce using rule 69
	'QFT3'         reduce using rule 69
	'QFT4'         reduce using rule 69
	'QFT5'         reduce using rule 69
	'QFTI'         reduce using rule 69
	'QFTI2'        reduce using rule 69
	'QFTI3'        reduce using rule 69
	'QFTI4'        reduce using rule 69
	'QFTI5'        reduce using rule 69
	'S'            reduce using rule 69
	'SWAP'         reduce using rule 69
	'T'            reduce using rule 69
	'TOFFOLI'      reduce using rule 69
	'X'            reduce using rule 69
	'Y'            reduce using rule 69
	'Z'            reduce using rule 69
	'else'         reduce using rule 69
	'in'           reduce using rule 69
	'then'         reduce using rule 69
	L_FunVar       reduce using rule 69
	L_Var          reduce using rule 69
	L_GateIdent    reduce using rule 69
	%eof           reduce using rule 69


State 53

	Gate -> 'X' .                                       (rule 62)

	'('            reduce using rule 62
	')'            reduce using rule 62
	'*'            reduce using rule 62
	','            reduce using rule 62
	'0'            reduce using rule 62
	'1'            reduce using rule 62
	'CCR'          reduce using rule 62
	'CCR2'         reduce using rule 62
	'CCR4'         reduce using rule 62
	'CCR8'         reduce using rule 62
	'CNOT'         reduce using rule 62
	'CR'           reduce using rule 62
	'CR2'          reduce using rule 62
	'CR2D'         reduce using rule 62
	'CR4'          reduce using rule 62
	'CR4D'         reduce using rule 62
	'CR8'          reduce using rule 62
	'CR8D'         reduce using rule 62
	'CRD'          reduce using rule 62
	'FREDKIN'      reduce using rule 62
	'H'            reduce using rule 62
	'I'            reduce using rule 62
	'QFT'          reduce using rule 62
	'QFT2'         reduce using rule 62
	'QFT3'         reduce using rule 62
	'QFT4'         reduce using rule 62
	'QFT5'         reduce using rule 62
	'QFTI'         reduce using rule 62
	'QFTI2'        reduce using rule 62
	'QFTI3'        reduce using rule 62
	'QFTI4'        reduce using rule 62
	'QFTI5'        reduce using rule 62
	'S'            reduce using rule 62
	'SWAP'         reduce using rule 62
	'T'            reduce using rule 62
	'TOFFOLI'      reduce using rule 62
	'X'            reduce using rule 62
	'Y'            reduce using rule 62
	'Z'            reduce using rule 62
	'else'         reduce using rule 62
	'in'           reduce using rule 62
	'then'         reduce using rule 62
	L_FunVar       reduce using rule 62
	L_Var          reduce using rule 62
	L_GateIdent    reduce using rule 62
	%eof           reduce using rule 62


State 54

	Gate -> 'Y' .                                       (rule 63)

	'('            reduce using rule 63
	')'            reduce using rule 63
	'*'            reduce using rule 63
	','            reduce using rule 63
	'0'            reduce using rule 63
	'1'            reduce using rule 63
	'CCR'          reduce using rule 63
	'CCR2'         reduce using rule 63
	'CCR4'         reduce using rule 63
	'CCR8'         reduce using rule 63
	'CNOT'         reduce using rule 63
	'CR'           reduce using rule 63
	'CR2'          reduce using rule 63
	'CR2D'         reduce using rule 63
	'CR4'          reduce using rule 63
	'CR4D'         reduce using rule 63
	'CR8'          reduce using rule 63
	'CR8D'         reduce using rule 63
	'CRD'          reduce using rule 63
	'FREDKIN'      reduce using rule 63
	'H'            reduce using rule 63
	'I'            reduce using rule 63
	'QFT'          reduce using rule 63
	'QFT2'         reduce using rule 63
	'QFT3'         reduce using rule 63
	'QFT4'         reduce using rule 63
	'QFT5'         reduce using rule 63
	'QFTI'         reduce using rule 63
	'QFTI2'        reduce using rule 63
	'QFTI3'        reduce using rule 63
	'QFTI4'        reduce using rule 63
	'QFTI5'        reduce using rule 63
	'S'            reduce using rule 63
	'SWAP'         reduce using rule 63
	'T'            reduce using rule 63
	'TOFFOLI'      reduce using rule 63
	'X'            reduce using rule 63
	'Y'            reduce using rule 63
	'Z'            reduce using rule 63
	'else'         reduce using rule 63
	'in'           reduce using rule 63
	'then'         reduce using rule 63
	L_FunVar       reduce using rule 63
	L_Var          reduce using rule 63
	L_GateIdent    reduce using rule 63
	%eof           reduce using rule 63


State 55

	Gate -> 'Z' .                                       (rule 64)

	'('            reduce using rule 64
	')'            reduce using rule 64
	'*'            reduce using rule 64
	','            reduce using rule 64
	'0'            reduce using rule 64
	'1'            reduce using rule 64
	'CCR'          reduce using rule 64
	'CCR2'         reduce using rule 64
	'CCR4'         reduce using rule 64
	'CCR8'         reduce using rule 64
	'CNOT'         reduce using rule 64
	'CR'           reduce using rule 64
	'CR2'          reduce using rule 64
	'CR2D'         reduce using rule 64
	'CR4'          reduce using rule 64
	'CR4D'         reduce using rule 64
	'CR8'          reduce using rule 64
	'CR8D'         reduce using rule 64
	'CRD'          reduce using rule 64
	'FREDKIN'      reduce using rule 64
	'H'            reduce using rule 64
	'I'            reduce using rule 64
	'QFT'          reduce using rule 64
	'QFT2'         reduce using rule 64
	'QFT3'         reduce using rule 64
	'QFT4'         reduce using rule 64
	'QFT5'         reduce using rule 64
	'QFTI'         reduce using rule 64
	'QFTI2'        reduce using rule 64
	'QFTI3'        reduce using rule 64
	'QFTI4'        reduce using rule 64
	'QFTI5'        reduce using rule 64
	'S'            reduce using rule 64
	'SWAP'         reduce using rule 64
	'T'            reduce using rule 64
	'TOFFOLI'      reduce using rule 64
	'X'            reduce using rule 64
	'Y'            reduce using rule 64
	'Z'            reduce using rule 64
	'else'         reduce using rule 64
	'in'           reduce using rule 64
	'then'         reduce using rule 64
	L_FunVar       reduce using rule 64
	L_Var          reduce using rule 64
	L_GateIdent    reduce using rule 64
	%eof           reduce using rule 64


State 56

	GateIdent -> L_GateIdent .                          (rule 21)

	'('            reduce using rule 21
	')'            reduce using rule 21
	'*'            reduce using rule 21
	','            reduce using rule 21
	'0'            reduce using rule 21
	'1'            reduce using rule 21
	'CCR'          reduce using rule 21
	'CCR2'         reduce using rule 21
	'CCR4'         reduce using rule 21
	'CCR8'         reduce using rule 21
	'CNOT'         reduce using rule 21
	'CR'           reduce using rule 21
	'CR2'          reduce using rule 21
	'CR2D'         reduce using rule 21
	'CR4'          reduce using rule 21
	'CR4D'         reduce using rule 21
	'CR8'          reduce using rule 21
	'CR8D'         reduce using rule 21
	'CRD'          reduce using rule 21
	'FREDKIN'      reduce using rule 21
	'H'            reduce using rule 21
	'I'            reduce using rule 21
	'QFT'          reduce using rule 21
	'QFT2'         reduce using rule 21
	'QFT3'         reduce using rule 21
	'QFT4'         reduce using rule 21
	'QFT5'         reduce using rule 21
	'QFTI'         reduce using rule 21
	'QFTI2'        reduce using rule 21
	'QFTI3'        reduce using rule 21
	'QFTI4'        reduce using rule 21
	'QFTI5'        reduce using rule 21
	'S'            reduce using rule 21
	'SWAP'         reduce using rule 21
	'T'            reduce using rule 21
	'TOFFOLI'      reduce using rule 21
	'X'            reduce using rule 21
	'Y'            reduce using rule 21
	'Z'            reduce using rule 21
	'else'         reduce using rule 21
	'in'           reduce using rule 21
	'then'         reduce using rule 21
	L_FunVar       reduce using rule 21
	L_Var          reduce using rule 21
	L_GateIdent    reduce using rule 21
	%eof           reduce using rule 21


State 57

	Type1 -> Type2 . '><' Type1                         (rule 57)
	Type1 -> Type2 . '-o' Type1                         (rule 58)
	Type1 -> Type2 .                                    (rule 59)

	')'            reduce using rule 59
	'-o'           shift, and enter state 122
	'.'            reduce using rule 59
	'><'           shift, and enter state 123
	L_Var          reduce using rule 59
	%eof           reduce using rule 59


State 58

	Type -> Type1 .                                     (rule 60)

	')'            reduce using rule 60
	'.'            reduce using rule 60
	L_Var          reduce using rule 60
	%eof           reduce using rule 60


State 59

	%start_pType -> Type .                              (rule 17)

	%eof           accept


State 60

	Type2 -> '!' . Type2                                (rule 55)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'Bit'          shift, and enter state 62
	'QBit'         shift, and enter state 63
	'T'            shift, and enter state 64

	Type2          goto state 121

State 61

	Type2 -> '(' . Type ')'                             (rule 56)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'Bit'          shift, and enter state 62
	'QBit'         shift, and enter state 63
	'T'            shift, and enter state 64

	Type2          goto state 57
	Type1          goto state 58
	Type           goto state 120

State 62

	Type2 -> 'Bit' .                                    (rule 52)

	')'            reduce using rule 52
	'-o'           reduce using rule 52
	'.'            reduce using rule 52
	'><'           reduce using rule 52
	L_Var          reduce using rule 52
	%eof           reduce using rule 52


State 63

	Type2 -> 'QBit' .                                   (rule 53)

	')'            reduce using rule 53
	'-o'           reduce using rule 53
	'.'            reduce using rule 53
	'><'           reduce using rule 53
	L_Var          reduce using rule 53
	%eof           reduce using rule 53


State 64

	Type2 -> 'T' .                                      (rule 54)

	')'            reduce using rule 54
	'-o'           reduce using rule 54
	'.'            reduce using rule 54
	'><'           reduce using rule 54
	L_Var          reduce using rule 54
	%eof           reduce using rule 54


State 65

	%start_pType1 -> Type1 .                            (rule 16)

	%eof           accept


State 66

	%start_pType2 -> Type2 .                            (rule 15)

	%eof           accept


State 67

	Arg -> Var .                                        (rule 49)

	'='            reduce using rule 49
	L_Var          reduce using rule 49
	%eof           reduce using rule 49


State 68

	ListArg -> Arg . ListArg                            (rule 51)

	'='            reduce using rule 50
	L_Var          shift, and enter state 70
	%eof           reduce using rule 50

	Var            goto state 67
	Arg            goto state 68
	ListArg        goto state 119

State 69

	%start_pListArg -> ListArg .                        (rule 14)

	%eof           accept


State 70

	Var -> L_Var .                                      (rule 20)

	'('            reduce using rule 20
	')'            reduce using rule 20
	'*'            reduce using rule 20
	','            reduce using rule 20
	'0'            reduce using rule 20
	'1'            reduce using rule 20
	'='            reduce using rule 20
	'CCR'          reduce using rule 20
	'CCR2'         reduce using rule 20
	'CCR4'         reduce using rule 20
	'CCR8'         reduce using rule 20
	'CNOT'         reduce using rule 20
	'CR'           reduce using rule 20
	'CR2'          reduce using rule 20
	'CR2D'         reduce using rule 20
	'CR4'          reduce using rule 20
	'CR4D'         reduce using rule 20
	'CR8'          reduce using rule 20
	'CR8D'         reduce using rule 20
	'CRD'          reduce using rule 20
	'FREDKIN'      reduce using rule 20
	'H'            reduce using rule 20
	'I'            reduce using rule 20
	'QFT'          reduce using rule 20
	'QFT2'         reduce using rule 20
	'QFT3'         reduce using rule 20
	'QFT4'         reduce using rule 20
	'QFT5'         reduce using rule 20
	'QFTI'         reduce using rule 20
	'QFTI2'        reduce using rule 20
	'QFTI3'        reduce using rule 20
	'QFTI4'        reduce using rule 20
	'QFTI5'        reduce using rule 20
	'S'            reduce using rule 20
	'SWAP'         reduce using rule 20
	'T'            reduce using rule 20
	'TOFFOLI'      reduce using rule 20
	'X'            reduce using rule 20
	'Y'            reduce using rule 20
	'Z'            reduce using rule 20
	'else'         reduce using rule 20
	'in'           reduce using rule 20
	'then'         reduce using rule 20
	L_FunVar       reduce using rule 20
	L_Var          reduce using rule 20
	L_GateIdent    reduce using rule 20
	%eof           reduce using rule 20


State 71

	%start_pArg -> Arg .                                (rule 13)

	%eof           accept


State 72

	Function -> Var . ListArg '=' Term                  (rule 48)

	'='            reduce using rule 50
	L_Var          shift, and enter state 70

	Var            goto state 67
	Arg            goto state 68
	ListArg        goto state 118

State 73

	%start_pFunction -> Function .                      (rule 12)

	%eof           accept


State 74

	FunDec -> FunVar . Type Function                    (rule 45)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'Bit'          shift, and enter state 62
	'QBit'         shift, and enter state 63
	'T'            shift, and enter state 64

	Type2          goto state 57
	Type1          goto state 58
	Type           goto state 117

State 75

	ListFunDec -> FunDec . ListFunDec                   (rule 47)

	L_FunVar       shift, and enter state 20
	%eof           reduce using rule 46

	FunVar         goto state 74
	FunDec         goto state 75
	ListFunDec     goto state 116

State 76

	%start_pListFunDec -> ListFunDec .                  (rule 11)

	%eof           accept


State 77

	%start_pFunDec -> FunDec .                          (rule 10)

	%eof           accept


State 78

	%start_pBit -> Bit .                                (rule 9)

	%eof           accept


State 79

	Bit -> '0' .                                        (rule 43)

	'('            reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	','            reduce using rule 43
	'0'            reduce using rule 43
	'1'            reduce using rule 43
	'CCR'          reduce using rule 43
	'CCR2'         reduce using rule 43
	'CCR4'         reduce using rule 43
	'CCR8'         reduce using rule 43
	'CNOT'         reduce using rule 43
	'CR'           reduce using rule 43
	'CR2'          reduce using rule 43
	'CR2D'         reduce using rule 43
	'CR4'          reduce using rule 43
	'CR4D'         reduce using rule 43
	'CR8'          reduce using rule 43
	'CR8D'         reduce using rule 43
	'CRD'          reduce using rule 43
	'FREDKIN'      reduce using rule 43
	'H'            reduce using rule 43
	'I'            reduce using rule 43
	'QFT'          reduce using rule 43
	'QFT2'         reduce using rule 43
	'QFT3'         reduce using rule 43
	'QFT4'         reduce using rule 43
	'QFT5'         reduce using rule 43
	'QFTI'         reduce using rule 43
	'QFTI2'        reduce using rule 43
	'QFTI3'        reduce using rule 43
	'QFTI4'        reduce using rule 43
	'QFTI5'        reduce using rule 43
	'S'            reduce using rule 43
	'SWAP'         reduce using rule 43
	'T'            reduce using rule 43
	'TOFFOLI'      reduce using rule 43
	'X'            reduce using rule 43
	'Y'            reduce using rule 43
	'Z'            reduce using rule 43
	'else'         reduce using rule 43
	'in'           reduce using rule 43
	'then'         reduce using rule 43
	L_FunVar       reduce using rule 43
	L_Var          reduce using rule 43
	L_GateIdent    reduce using rule 43
	%eof           reduce using rule 43


State 80

	Bit -> '1' .                                        (rule 44)

	'('            reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	','            reduce using rule 44
	'0'            reduce using rule 44
	'1'            reduce using rule 44
	'CCR'          reduce using rule 44
	'CCR2'         reduce using rule 44
	'CCR4'         reduce using rule 44
	'CCR8'         reduce using rule 44
	'CNOT'         reduce using rule 44
	'CR'           reduce using rule 44
	'CR2'          reduce using rule 44
	'CR2D'         reduce using rule 44
	'CR4'          reduce using rule 44
	'CR4D'         reduce using rule 44
	'CR8'          reduce using rule 44
	'CR8D'         reduce using rule 44
	'CRD'          reduce using rule 44
	'FREDKIN'      reduce using rule 44
	'H'            reduce using rule 44
	'I'            reduce using rule 44
	'QFT'          reduce using rule 44
	'QFT2'         reduce using rule 44
	'QFT3'         reduce using rule 44
	'QFT4'         reduce using rule 44
	'QFT5'         reduce using rule 44
	'QFTI'         reduce using rule 44
	'QFTI2'        reduce using rule 44
	'QFTI3'        reduce using rule 44
	'QFTI4'        reduce using rule 44
	'QFTI5'        reduce using rule 44
	'S'            reduce using rule 44
	'SWAP'         reduce using rule 44
	'T'            reduce using rule 44
	'TOFFOLI'      reduce using rule 44
	'X'            reduce using rule 44
	'Y'            reduce using rule 44
	'Z'            reduce using rule 44
	'else'         reduce using rule 44
	'in'           reduce using rule 44
	'then'         reduce using rule 44
	L_FunVar       reduce using rule 44
	L_Var          reduce using rule 44
	L_GateIdent    reduce using rule 44
	%eof           reduce using rule 44


State 81

	Term3 -> Var .                                      (rule 24)

	'('            reduce using rule 24
	')'            reduce using rule 24
	'*'            reduce using rule 24
	','            reduce using rule 24
	'0'            reduce using rule 24
	'1'            reduce using rule 24
	'CCR'          reduce using rule 24
	'CCR2'         reduce using rule 24
	'CCR4'         reduce using rule 24
	'CCR8'         reduce using rule 24
	'CNOT'         reduce using rule 24
	'CR'           reduce using rule 24
	'CR2'          reduce using rule 24
	'CR2D'         reduce using rule 24
	'CR4'          reduce using rule 24
	'CR4D'         reduce using rule 24
	'CR8'          reduce using rule 24
	'CR8D'         reduce using rule 24
	'CRD'          reduce using rule 24
	'FREDKIN'      reduce using rule 24
	'H'            reduce using rule 24
	'I'            reduce using rule 24
	'QFT'          reduce using rule 24
	'QFT2'         reduce using rule 24
	'QFT3'         reduce using rule 24
	'QFT4'         reduce using rule 24
	'QFT5'         reduce using rule 24
	'QFTI'         reduce using rule 24
	'QFTI2'        reduce using rule 24
	'QFTI3'        reduce using rule 24
	'QFTI4'        reduce using rule 24
	'QFTI5'        reduce using rule 24
	'S'            reduce using rule 24
	'SWAP'         reduce using rule 24
	'T'            reduce using rule 24
	'TOFFOLI'      reduce using rule 24
	'X'            reduce using rule 24
	'Y'            reduce using rule 24
	'Z'            reduce using rule 24
	'else'         reduce using rule 24
	'in'           reduce using rule 24
	'then'         reduce using rule 24
	L_FunVar       reduce using rule 24
	L_Var          reduce using rule 24
	L_GateIdent    reduce using rule 24
	%eof           reduce using rule 24


State 82

	Term1 -> Lambda . FunVar Type '.' Term              (rule 34)

	L_FunVar       shift, and enter state 20

	FunVar         goto state 115

State 83

	Term2 -> Term3 .                                    (rule 31)

	'('            reduce using rule 31
	')'            reduce using rule 31
	'*'            reduce using rule 31
	','            reduce using rule 31
	'0'            reduce using rule 31
	'1'            reduce using rule 31
	'CCR'          reduce using rule 31
	'CCR2'         reduce using rule 31
	'CCR4'         reduce using rule 31
	'CCR8'         reduce using rule 31
	'CNOT'         reduce using rule 31
	'CR'           reduce using rule 31
	'CR2'          reduce using rule 31
	'CR2D'         reduce using rule 31
	'CR4'          reduce using rule 31
	'CR4D'         reduce using rule 31
	'CR8'          reduce using rule 31
	'CR8D'         reduce using rule 31
	'CRD'          reduce using rule 31
	'FREDKIN'      reduce using rule 31
	'H'            reduce using rule 31
	'I'            reduce using rule 31
	'QFT'          reduce using rule 31
	'QFT2'         reduce using rule 31
	'QFT3'         reduce using rule 31
	'QFT4'         reduce using rule 31
	'QFT5'         reduce using rule 31
	'QFTI'         reduce using rule 31
	'QFTI2'        reduce using rule 31
	'QFTI3'        reduce using rule 31
	'QFTI4'        reduce using rule 31
	'QFTI5'        reduce using rule 31
	'S'            reduce using rule 31
	'SWAP'         reduce using rule 31
	'T'            reduce using rule 31
	'TOFFOLI'      reduce using rule 31
	'X'            reduce using rule 31
	'Y'            reduce using rule 31
	'Z'            reduce using rule 31
	'else'         reduce using rule 31
	'in'           reduce using rule 31
	'then'         reduce using rule 31
	L_FunVar       reduce using rule 31
	L_Var          reduce using rule 31
	L_GateIdent    reduce using rule 31
	%eof           reduce using rule 31


State 84

	Term2 -> Term2 . Term3                              (rule 30)
	Term1 -> Term2 .                                    (rule 35)

	'('            shift, and enter state 91
	')'            reduce using rule 35
	'*'            shift, and enter state 92
	','            reduce using rule 35
	'0'            shift, and enter state 79
	'1'            shift, and enter state 80
	'CCR'          shift, and enter state 23
	'CCR2'         shift, and enter state 24
	'CCR4'         shift, and enter state 25
	'CCR8'         shift, and enter state 26
	'CNOT'         shift, and enter state 27
	'CR'           shift, and enter state 28
	'CR2'          shift, and enter state 29
	'CR2D'         shift, and enter state 30
	'CR4'          shift, and enter state 31
	'CR4D'         shift, and enter state 32
	'CR8'          shift, and enter state 33
	'CR8D'         shift, and enter state 34
	'CRD'          shift, and enter state 35
	'FREDKIN'      shift, and enter state 36
	'H'            shift, and enter state 37
	'I'            shift, and enter state 38
	'QFT'          shift, and enter state 39
	'QFT2'         shift, and enter state 40
	'QFT3'         shift, and enter state 41
	'QFT4'         shift, and enter state 42
	'QFT5'         shift, and enter state 43
	'QFTI'         shift, and enter state 44
	'QFTI2'        shift, and enter state 45
	'QFTI3'        shift, and enter state 46
	'QFTI4'        shift, and enter state 47
	'QFTI5'        shift, and enter state 48
	'S'            shift, and enter state 49
	'SWAP'         shift, and enter state 50
	'T'            shift, and enter state 51
	'TOFFOLI'      shift, and enter state 52
	'X'            shift, and enter state 53
	'Y'            shift, and enter state 54
	'Z'            shift, and enter state 55
	'else'         reduce using rule 35
	'in'           reduce using rule 35
	L_FunVar       reduce using rule 35
	L_Var          shift, and enter state 70
	L_GateIdent    shift, and enter state 56
	%eof           reduce using rule 35

	Var            goto state 81
	GateIdent      goto state 21
	Term3          goto state 108
	Tup            goto state 87
	Bit            goto state 89
	Gate           goto state 90

State 85

	Term -> Term1 .                                     (rule 36)

	')'            reduce using rule 36
	','            reduce using rule 36
	'else'         reduce using rule 36
	'in'           reduce using rule 36
	L_FunVar       reduce using rule 36
	%eof           reduce using rule 36


State 86

	ListTerm -> Term .                                  (rule 41)
	ListTerm -> Term . ',' ListTerm                     (rule 42)

	')'            reduce using rule 41
	','            shift, and enter state 114
	%eof           reduce using rule 41


State 87

	Term3 -> Tup .                                      (rule 27)

	'('            reduce using rule 27
	')'            reduce using rule 27
	'*'            reduce using rule 27
	','            reduce using rule 27
	'0'            reduce using rule 27
	'1'            reduce using rule 27
	'CCR'          reduce using rule 27
	'CCR2'         reduce using rule 27
	'CCR4'         reduce using rule 27
	'CCR8'         reduce using rule 27
	'CNOT'         reduce using rule 27
	'CR'           reduce using rule 27
	'CR2'          reduce using rule 27
	'CR2D'         reduce using rule 27
	'CR4'          reduce using rule 27
	'CR4D'         reduce using rule 27
	'CR8'          reduce using rule 27
	'CR8D'         reduce using rule 27
	'CRD'          reduce using rule 27
	'FREDKIN'      reduce using rule 27
	'H'            reduce using rule 27
	'I'            reduce using rule 27
	'QFT'          reduce using rule 27
	'QFT2'         reduce using rule 27
	'QFT3'         reduce using rule 27
	'QFT4'         reduce using rule 27
	'QFT5'         reduce using rule 27
	'QFTI'         reduce using rule 27
	'QFTI2'        reduce using rule 27
	'QFTI3'        reduce using rule 27
	'QFTI4'        reduce using rule 27
	'QFTI5'        reduce using rule 27
	'S'            reduce using rule 27
	'SWAP'         reduce using rule 27
	'T'            reduce using rule 27
	'TOFFOLI'      reduce using rule 27
	'X'            reduce using rule 27
	'Y'            reduce using rule 27
	'Z'            reduce using rule 27
	'else'         reduce using rule 27
	'in'           reduce using rule 27
	'then'         reduce using rule 27
	L_FunVar       reduce using rule 27
	L_Var          reduce using rule 27
	L_GateIdent    reduce using rule 27
	%eof           reduce using rule 27


State 88

	%start_pListTerm -> ListTerm .                      (rule 8)

	%eof           accept


State 89

	Term3 -> Bit .                                      (rule 25)

	'('            reduce using rule 25
	')'            reduce using rule 25
	'*'            reduce using rule 25
	','            reduce using rule 25
	'0'            reduce using rule 25
	'1'            reduce using rule 25
	'CCR'          reduce using rule 25
	'CCR2'         reduce using rule 25
	'CCR4'         reduce using rule 25
	'CCR8'         reduce using rule 25
	'CNOT'         reduce using rule 25
	'CR'           reduce using rule 25
	'CR2'          reduce using rule 25
	'CR2D'         reduce using rule 25
	'CR4'          reduce using rule 25
	'CR4D'         reduce using rule 25
	'CR8'          reduce using rule 25
	'CR8D'         reduce using rule 25
	'CRD'          reduce using rule 25
	'FREDKIN'      reduce using rule 25
	'H'            reduce using rule 25
	'I'            reduce using rule 25
	'QFT'          reduce using rule 25
	'QFT2'         reduce using rule 25
	'QFT3'         reduce using rule 25
	'QFT4'         reduce using rule 25
	'QFT5'         reduce using rule 25
	'QFTI'         reduce using rule 25
	'QFTI2'        reduce using rule 25
	'QFTI3'        reduce using rule 25
	'QFTI4'        reduce using rule 25
	'QFTI5'        reduce using rule 25
	'S'            reduce using rule 25
	'SWAP'         reduce using rule 25
	'T'            reduce using rule 25
	'TOFFOLI'      reduce using rule 25
	'X'            reduce using rule 25
	'Y'            reduce using rule 25
	'Z'            reduce using rule 25
	'else'         reduce using rule 25
	'in'           reduce using rule 25
	'then'         reduce using rule 25
	L_FunVar       reduce using rule 25
	L_Var          reduce using rule 25
	L_GateIdent    reduce using rule 25
	%eof           reduce using rule 25


State 90

	Term3 -> Gate .                                     (rule 26)

	'('            reduce using rule 26
	')'            reduce using rule 26
	'*'            reduce using rule 26
	','            reduce using rule 26
	'0'            reduce using rule 26
	'1'            reduce using rule 26
	'CCR'          reduce using rule 26
	'CCR2'         reduce using rule 26
	'CCR4'         reduce using rule 26
	'CCR8'         reduce using rule 26
	'CNOT'         reduce using rule 26
	'CR'           reduce using rule 26
	'CR2'          reduce using rule 26
	'CR2D'         reduce using rule 26
	'CR4'          reduce using rule 26
	'CR4D'         reduce using rule 26
	'CR8'          reduce using rule 26
	'CR8D'         reduce using rule 26
	'CRD'          reduce using rule 26
	'FREDKIN'      reduce using rule 26
	'H'            reduce using rule 26
	'I'            reduce using rule 26
	'QFT'          reduce using rule 26
	'QFT2'         reduce using rule 26
	'QFT3'         reduce using rule 26
	'QFT4'         reduce using rule 26
	'QFT5'         reduce using rule 26
	'QFTI'         reduce using rule 26
	'QFTI2'        reduce using rule 26
	'QFTI3'        reduce using rule 26
	'QFTI4'        reduce using rule 26
	'QFTI5'        reduce using rule 26
	'S'            reduce using rule 26
	'SWAP'         reduce using rule 26
	'T'            reduce using rule 26
	'TOFFOLI'      reduce using rule 26
	'X'            reduce using rule 26
	'Y'            reduce using rule 26
	'Z'            reduce using rule 26
	'else'         reduce using rule 26
	'in'           reduce using rule 26
	'then'         reduce using rule 26
	L_FunVar       reduce using rule 26
	L_Var          reduce using rule 26
	L_GateIdent    reduce using rule 26
	%eof           reduce using rule 26


State 91

	Term3 -> '(' . Term ')'                             (rule 29)
	Tup -> '(' . Term ',' ListTerm ')'                  (rule 40)

	'('            shift, and enter state 91
	'*'            shift, and enter state 92
	'0'            shift, and enter state 79
	'1'            shift, and enter state 80
	'CCR'          shift, and enter state 23
	'CCR2'         shift, and enter state 24
	'CCR4'         shift, and enter state 25
	'CCR8'         shift, and enter state 26
	'CNOT'         shift, and enter state 27
	'CR'           shift, and enter state 28
	'CR2'          shift, and enter state 29
	'CR2D'         shift, and enter state 30
	'CR4'          shift, and enter state 31
	'CR4D'         shift, and enter state 32
	'CR8'          shift, and enter state 33
	'CR8D'         shift, and enter state 34
	'CRD'          shift, and enter state 35
	'FREDKIN'      shift, and enter state 36
	'H'            shift, and enter state 37
	'I'            shift, and enter state 38
	'QFT'          shift, and enter state 39
	'QFT2'         shift, and enter state 40
	'QFT3'         shift, and enter state 41
	'QFT4'         shift, and enter state 42
	'QFT5'         shift, and enter state 43
	'QFTI'         shift, and enter state 44
	'QFTI2'        shift, and enter state 45
	'QFTI3'        shift, and enter state 46
	'QFTI4'        shift, and enter state 47
	'QFTI5'        shift, and enter state 48
	'S'            shift, and enter state 49
	'SWAP'         shift, and enter state 50
	'T'            shift, and enter state 51
	'TOFFOLI'      shift, and enter state 52
	'X'            shift, and enter state 53
	'Y'            shift, and enter state 54
	'Z'            shift, and enter state 55
	'if'           shift, and enter state 93
	'let'          shift, and enter state 94
	L_Var          shift, and enter state 70
	L_GateIdent    shift, and enter state 56
	L_Lambda       shift, and enter state 95

	Var            goto state 81
	GateIdent      goto state 21
	Lambda         goto state 82
	Term3          goto state 83
	Term2          goto state 84
	Term1          goto state 85
	Term           goto state 113
	Tup            goto state 87
	Bit            goto state 89
	Gate           goto state 90

State 92

	Term3 -> '*' .                                      (rule 28)

	'('            reduce using rule 28
	')'            reduce using rule 28
	'*'            reduce using rule 28
	','            reduce using rule 28
	'0'            reduce using rule 28
	'1'            reduce using rule 28
	'CCR'          reduce using rule 28
	'CCR2'         reduce using rule 28
	'CCR4'         reduce using rule 28
	'CCR8'         reduce using rule 28
	'CNOT'         reduce using rule 28
	'CR'           reduce using rule 28
	'CR2'          reduce using rule 28
	'CR2D'         reduce using rule 28
	'CR4'          reduce using rule 28
	'CR4D'         reduce using rule 28
	'CR8'          reduce using rule 28
	'CR8D'         reduce using rule 28
	'CRD'          reduce using rule 28
	'FREDKIN'      reduce using rule 28
	'H'            reduce using rule 28
	'I'            reduce using rule 28
	'QFT'          reduce using rule 28
	'QFT2'         reduce using rule 28
	'QFT3'         reduce using rule 28
	'QFT4'         reduce using rule 28
	'QFT5'         reduce using rule 28
	'QFTI'         reduce using rule 28
	'QFTI2'        reduce using rule 28
	'QFTI3'        reduce using rule 28
	'QFTI4'        reduce using rule 28
	'QFTI5'        reduce using rule 28
	'S'            reduce using rule 28
	'SWAP'         reduce using rule 28
	'T'            reduce using rule 28
	'TOFFOLI'      reduce using rule 28
	'X'            reduce using rule 28
	'Y'            reduce using rule 28
	'Z'            reduce using rule 28
	'else'         reduce using rule 28
	'in'           reduce using rule 28
	'then'         reduce using rule 28
	L_FunVar       reduce using rule 28
	L_Var          reduce using rule 28
	L_GateIdent    reduce using rule 28
	%eof           reduce using rule 28


State 93

	Term1 -> 'if' . Term2 'then' Term 'else' Term       (rule 32)

	'('            shift, and enter state 91
	'*'            shift, and enter state 92
	'0'            shift, and enter state 79
	'1'            shift, and enter state 80
	'CCR'          shift, and enter state 23
	'CCR2'         shift, and enter state 24
	'CCR4'         shift, and enter state 25
	'CCR8'         shift, and enter state 26
	'CNOT'         shift, and enter state 27
	'CR'           shift, and enter state 28
	'CR2'          shift, and enter state 29
	'CR2D'         shift, and enter state 30
	'CR4'          shift, and enter state 31
	'CR4D'         shift, and enter state 32
	'CR8'          shift, and enter state 33
	'CR8D'         shift, and enter state 34
	'CRD'          shift, and enter state 35
	'FREDKIN'      shift, and enter state 36
	'H'            shift, and enter state 37
	'I'            shift, and enter state 38
	'QFT'          shift, and enter state 39
	'QFT2'         shift, and enter state 40
	'QFT3'         shift, and enter state 41
	'QFT4'         shift, and enter state 42
	'QFT5'         shift, and enter state 43
	'QFTI'         shift, and enter state 44
	'QFTI2'        shift, and enter state 45
	'QFTI3'        shift, and enter state 46
	'QFTI4'        shift, and enter state 47
	'QFTI5'        shift, and enter state 48
	'S'            shift, and enter state 49
	'SWAP'         shift, and enter state 50
	'T'            shift, and enter state 51
	'TOFFOLI'      shift, and enter state 52
	'X'            shift, and enter state 53
	'Y'            shift, and enter state 54
	'Z'            shift, and enter state 55
	L_Var          shift, and enter state 70
	L_GateIdent    shift, and enter state 56

	Var            goto state 81
	GateIdent      goto state 21
	Term3          goto state 83
	Term2          goto state 112
	Tup            goto state 87
	Bit            goto state 89
	Gate           goto state 90

State 94

	Term1 -> 'let' . '(' LetVar ',' ListLetVar ')' '=' Term 'in' Term    (rule 33)

	'('            shift, and enter state 111


State 95

	Lambda -> L_Lambda .                                (rule 22)

	L_FunVar       reduce using rule 22


State 96

	%start_pTup -> Tup .                                (rule 7)

	%eof           accept


State 97

	Tup -> '(' . Term ',' ListTerm ')'                  (rule 40)

	'('            shift, and enter state 91
	'*'            shift, and enter state 92
	'0'            shift, and enter state 79
	'1'            shift, and enter state 80
	'CCR'          shift, and enter state 23
	'CCR2'         shift, and enter state 24
	'CCR4'         shift, and enter state 25
	'CCR8'         shift, and enter state 26
	'CNOT'         shift, and enter state 27
	'CR'           shift, and enter state 28
	'CR2'          shift, and enter state 29
	'CR2D'         shift, and enter state 30
	'CR4'          shift, and enter state 31
	'CR4D'         shift, and enter state 32
	'CR8'          shift, and enter state 33
	'CR8D'         shift, and enter state 34
	'CRD'          shift, and enter state 35
	'FREDKIN'      shift, and enter state 36
	'H'            shift, and enter state 37
	'I'            shift, and enter state 38
	'QFT'          shift, and enter state 39
	'QFT2'         shift, and enter state 40
	'QFT3'         shift, and enter state 41
	'QFT4'         shift, and enter state 42
	'QFT5'         shift, and enter state 43
	'QFTI'         shift, and enter state 44
	'QFTI2'        shift, and enter state 45
	'QFTI3'        shift, and enter state 46
	'QFTI4'        shift, and enter state 47
	'QFTI5'        shift, and enter state 48
	'S'            shift, and enter state 49
	'SWAP'         shift, and enter state 50
	'T'            shift, and enter state 51
	'TOFFOLI'      shift, and enter state 52
	'X'            shift, and enter state 53
	'Y'            shift, and enter state 54
	'Z'            shift, and enter state 55
	'if'           shift, and enter state 93
	'let'          shift, and enter state 94
	L_Var          shift, and enter state 70
	L_GateIdent    shift, and enter state 56
	L_Lambda       shift, and enter state 95

	Var            goto state 81
	GateIdent      goto state 21
	Lambda         goto state 82
	Term3          goto state 83
	Term2          goto state 84
	Term1          goto state 85
	Term           goto state 110
	Tup            goto state 87
	Bit            goto state 89
	Gate           goto state 90

State 98

	LetVar -> Var .                                     (rule 37)

	')'            reduce using rule 37
	','            reduce using rule 37
	%eof           reduce using rule 37


State 99

	ListLetVar -> LetVar .                              (rule 38)
	ListLetVar -> LetVar . ',' ListLetVar               (rule 39)

	')'            reduce using rule 38
	','            shift, and enter state 109
	%eof           reduce using rule 38


State 100

	%start_pListLetVar -> ListLetVar .                  (rule 6)

	%eof           accept


State 101

	%start_pLetVar -> LetVar .                          (rule 5)

	%eof           accept


State 102

	%start_pTerm -> Term .                              (rule 4)

	%eof           accept


State 103

	%start_pTerm1 -> Term1 .                            (rule 3)

	%eof           accept


State 104

	%start_pTerm2 -> Term2 .                            (rule 2)
	Term2 -> Term2 . Term3                              (rule 30)

	'('            shift, and enter state 91
	'*'            shift, and enter state 92
	'0'            shift, and enter state 79
	'1'            shift, and enter state 80
	'CCR'          shift, and enter state 23
	'CCR2'         shift, and enter state 24
	'CCR4'         shift, and enter state 25
	'CCR8'         shift, and enter state 26
	'CNOT'         shift, and enter state 27
	'CR'           shift, and enter state 28
	'CR2'          shift, and enter state 29
	'CR2D'         shift, and enter state 30
	'CR4'          shift, and enter state 31
	'CR4D'         shift, and enter state 32
	'CR8'          shift, and enter state 33
	'CR8D'         shift, and enter state 34
	'CRD'          shift, and enter state 35
	'FREDKIN'      shift, and enter state 36
	'H'            shift, and enter state 37
	'I'            shift, and enter state 38
	'QFT'          shift, and enter state 39
	'QFT2'         shift, and enter state 40
	'QFT3'         shift, and enter state 41
	'QFT4'         shift, and enter state 42
	'QFT5'         shift, and enter state 43
	'QFTI'         shift, and enter state 44
	'QFTI2'        shift, and enter state 45
	'QFTI3'        shift, and enter state 46
	'QFTI4'        shift, and enter state 47
	'QFTI5'        shift, and enter state 48
	'S'            shift, and enter state 49
	'SWAP'         shift, and enter state 50
	'T'            shift, and enter state 51
	'TOFFOLI'      shift, and enter state 52
	'X'            shift, and enter state 53
	'Y'            shift, and enter state 54
	'Z'            shift, and enter state 55
	L_Var          shift, and enter state 70
	L_GateIdent    shift, and enter state 56
	%eof           accept

	Var            goto state 81
	GateIdent      goto state 21
	Term3          goto state 108
	Tup            goto state 87
	Bit            goto state 89
	Gate           goto state 90

State 105

	%start_pTerm3 -> Term3 .                            (rule 1)

	%eof           accept


State 106

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 107

	Program -> ListFunDec .                             (rule 23)

	%eof           reduce using rule 23


State 108

	Term2 -> Term2 Term3 .                              (rule 30)

	'('            reduce using rule 30
	')'            reduce using rule 30
	'*'            reduce using rule 30
	','            reduce using rule 30
	'0'            reduce using rule 30
	'1'            reduce using rule 30
	'CCR'          reduce using rule 30
	'CCR2'         reduce using rule 30
	'CCR4'         reduce using rule 30
	'CCR8'         reduce using rule 30
	'CNOT'         reduce using rule 30
	'CR'           reduce using rule 30
	'CR2'          reduce using rule 30
	'CR2D'         reduce using rule 30
	'CR4'          reduce using rule 30
	'CR4D'         reduce using rule 30
	'CR8'          reduce using rule 30
	'CR8D'         reduce using rule 30
	'CRD'          reduce using rule 30
	'FREDKIN'      reduce using rule 30
	'H'            reduce using rule 30
	'I'            reduce using rule 30
	'QFT'          reduce using rule 30
	'QFT2'         reduce using rule 30
	'QFT3'         reduce using rule 30
	'QFT4'         reduce using rule 30
	'QFT5'         reduce using rule 30
	'QFTI'         reduce using rule 30
	'QFTI2'        reduce using rule 30
	'QFTI3'        reduce using rule 30
	'QFTI4'        reduce using rule 30
	'QFTI5'        reduce using rule 30
	'S'            reduce using rule 30
	'SWAP'         reduce using rule 30
	'T'            reduce using rule 30
	'TOFFOLI'      reduce using rule 30
	'X'            reduce using rule 30
	'Y'            reduce using rule 30
	'Z'            reduce using rule 30
	'else'         reduce using rule 30
	'in'           reduce using rule 30
	'then'         reduce using rule 30
	L_FunVar       reduce using rule 30
	L_Var          reduce using rule 30
	L_GateIdent    reduce using rule 30
	%eof           reduce using rule 30


State 109

	ListLetVar -> LetVar ',' . ListLetVar               (rule 39)

	L_Var          shift, and enter state 70

	Var            goto state 98
	LetVar         goto state 99
	ListLetVar     goto state 135

State 110

	Tup -> '(' Term . ',' ListTerm ')'                  (rule 40)

	','            shift, and enter state 132


State 111

	Term1 -> 'let' '(' . LetVar ',' ListLetVar ')' '=' Term 'in' Term    (rule 33)

	L_Var          shift, and enter state 70

	Var            goto state 98
	LetVar         goto state 134

State 112

	Term2 -> Term2 . Term3                              (rule 30)
	Term1 -> 'if' Term2 . 'then' Term 'else' Term       (rule 32)

	'('            shift, and enter state 91
	'*'            shift, and enter state 92
	'0'            shift, and enter state 79
	'1'            shift, and enter state 80
	'CCR'          shift, and enter state 23
	'CCR2'         shift, and enter state 24
	'CCR4'         shift, and enter state 25
	'CCR8'         shift, and enter state 26
	'CNOT'         shift, and enter state 27
	'CR'           shift, and enter state 28
	'CR2'          shift, and enter state 29
	'CR2D'         shift, and enter state 30
	'CR4'          shift, and enter state 31
	'CR4D'         shift, and enter state 32
	'CR8'          shift, and enter state 33
	'CR8D'         shift, and enter state 34
	'CRD'          shift, and enter state 35
	'FREDKIN'      shift, and enter state 36
	'H'            shift, and enter state 37
	'I'            shift, and enter state 38
	'QFT'          shift, and enter state 39
	'QFT2'         shift, and enter state 40
	'QFT3'         shift, and enter state 41
	'QFT4'         shift, and enter state 42
	'QFT5'         shift, and enter state 43
	'QFTI'         shift, and enter state 44
	'QFTI2'        shift, and enter state 45
	'QFTI3'        shift, and enter state 46
	'QFTI4'        shift, and enter state 47
	'QFTI5'        shift, and enter state 48
	'S'            shift, and enter state 49
	'SWAP'         shift, and enter state 50
	'T'            shift, and enter state 51
	'TOFFOLI'      shift, and enter state 52
	'X'            shift, and enter state 53
	'Y'            shift, and enter state 54
	'Z'            shift, and enter state 55
	'then'         shift, and enter state 133
	L_Var          shift, and enter state 70
	L_GateIdent    shift, and enter state 56

	Var            goto state 81
	GateIdent      goto state 21
	Term3          goto state 108
	Tup            goto state 87
	Bit            goto state 89
	Gate           goto state 90

State 113

	Term3 -> '(' Term . ')'                             (rule 29)
	Tup -> '(' Term . ',' ListTerm ')'                  (rule 40)

	')'            shift, and enter state 131
	','            shift, and enter state 132


State 114

	ListTerm -> Term ',' . ListTerm                     (rule 42)

	'('            shift, and enter state 91
	'*'            shift, and enter state 92
	'0'            shift, and enter state 79
	'1'            shift, and enter state 80
	'CCR'          shift, and enter state 23
	'CCR2'         shift, and enter state 24
	'CCR4'         shift, and enter state 25
	'CCR8'         shift, and enter state 26
	'CNOT'         shift, and enter state 27
	'CR'           shift, and enter state 28
	'CR2'          shift, and enter state 29
	'CR2D'         shift, and enter state 30
	'CR4'          shift, and enter state 31
	'CR4D'         shift, and enter state 32
	'CR8'          shift, and enter state 33
	'CR8D'         shift, and enter state 34
	'CRD'          shift, and enter state 35
	'FREDKIN'      shift, and enter state 36
	'H'            shift, and enter state 37
	'I'            shift, and enter state 38
	'QFT'          shift, and enter state 39
	'QFT2'         shift, and enter state 40
	'QFT3'         shift, and enter state 41
	'QFT4'         shift, and enter state 42
	'QFT5'         shift, and enter state 43
	'QFTI'         shift, and enter state 44
	'QFTI2'        shift, and enter state 45
	'QFTI3'        shift, and enter state 46
	'QFTI4'        shift, and enter state 47
	'QFTI5'        shift, and enter state 48
	'S'            shift, and enter state 49
	'SWAP'         shift, and enter state 50
	'T'            shift, and enter state 51
	'TOFFOLI'      shift, and enter state 52
	'X'            shift, and enter state 53
	'Y'            shift, and enter state 54
	'Z'            shift, and enter state 55
	'if'           shift, and enter state 93
	'let'          shift, and enter state 94
	L_Var          shift, and enter state 70
	L_GateIdent    shift, and enter state 56
	L_Lambda       shift, and enter state 95

	Var            goto state 81
	GateIdent      goto state 21
	Lambda         goto state 82
	Term3          goto state 83
	Term2          goto state 84
	Term1          goto state 85
	Term           goto state 86
	Tup            goto state 87
	ListTerm       goto state 130
	Bit            goto state 89
	Gate           goto state 90

State 115

	Term1 -> Lambda FunVar . Type '.' Term              (rule 34)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'Bit'          shift, and enter state 62
	'QBit'         shift, and enter state 63
	'T'            shift, and enter state 64

	Type2          goto state 57
	Type1          goto state 58
	Type           goto state 129

State 116

	ListFunDec -> FunDec ListFunDec .                   (rule 47)

	%eof           reduce using rule 47


State 117

	FunDec -> FunVar Type . Function                    (rule 45)

	L_Var          shift, and enter state 70

	Var            goto state 72
	Function       goto state 128

State 118

	Function -> Var ListArg . '=' Term                  (rule 48)

	'='            shift, and enter state 127


State 119

	ListArg -> Arg ListArg .                            (rule 51)

	'='            reduce using rule 51
	%eof           reduce using rule 51


State 120

	Type2 -> '(' Type . ')'                             (rule 56)

	')'            shift, and enter state 126


State 121

	Type2 -> '!' Type2 .                                (rule 55)

	')'            reduce using rule 55
	'-o'           reduce using rule 55
	'.'            reduce using rule 55
	'><'           reduce using rule 55
	L_Var          reduce using rule 55
	%eof           reduce using rule 55


State 122

	Type1 -> Type2 '-o' . Type1                         (rule 58)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'Bit'          shift, and enter state 62
	'QBit'         shift, and enter state 63
	'T'            shift, and enter state 64

	Type2          goto state 57
	Type1          goto state 125

State 123

	Type1 -> Type2 '><' . Type1                         (rule 57)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'Bit'          shift, and enter state 62
	'QBit'         shift, and enter state 63
	'T'            shift, and enter state 64

	Type2          goto state 57
	Type1          goto state 124

State 124

	Type1 -> Type2 '><' Type1 .                         (rule 57)

	')'            reduce using rule 57
	'.'            reduce using rule 57
	L_Var          reduce using rule 57
	%eof           reduce using rule 57


State 125

	Type1 -> Type2 '-o' Type1 .                         (rule 58)

	')'            reduce using rule 58
	'.'            reduce using rule 58
	L_Var          reduce using rule 58
	%eof           reduce using rule 58


State 126

	Type2 -> '(' Type ')' .                             (rule 56)

	')'            reduce using rule 56
	'-o'           reduce using rule 56
	'.'            reduce using rule 56
	'><'           reduce using rule 56
	L_Var          reduce using rule 56
	%eof           reduce using rule 56


State 127

	Function -> Var ListArg '=' . Term                  (rule 48)

	'('            shift, and enter state 91
	'*'            shift, and enter state 92
	'0'            shift, and enter state 79
	'1'            shift, and enter state 80
	'CCR'          shift, and enter state 23
	'CCR2'         shift, and enter state 24
	'CCR4'         shift, and enter state 25
	'CCR8'         shift, and enter state 26
	'CNOT'         shift, and enter state 27
	'CR'           shift, and enter state 28
	'CR2'          shift, and enter state 29
	'CR2D'         shift, and enter state 30
	'CR4'          shift, and enter state 31
	'CR4D'         shift, and enter state 32
	'CR8'          shift, and enter state 33
	'CR8D'         shift, and enter state 34
	'CRD'          shift, and enter state 35
	'FREDKIN'      shift, and enter state 36
	'H'            shift, and enter state 37
	'I'            shift, and enter state 38
	'QFT'          shift, and enter state 39
	'QFT2'         shift, and enter state 40
	'QFT3'         shift, and enter state 41
	'QFT4'         shift, and enter state 42
	'QFT5'         shift, and enter state 43
	'QFTI'         shift, and enter state 44
	'QFTI2'        shift, and enter state 45
	'QFTI3'        shift, and enter state 46
	'QFTI4'        shift, and enter state 47
	'QFTI5'        shift, and enter state 48
	'S'            shift, and enter state 49
	'SWAP'         shift, and enter state 50
	'T'            shift, and enter state 51
	'TOFFOLI'      shift, and enter state 52
	'X'            shift, and enter state 53
	'Y'            shift, and enter state 54
	'Z'            shift, and enter state 55
	'if'           shift, and enter state 93
	'let'          shift, and enter state 94
	L_Var          shift, and enter state 70
	L_GateIdent    shift, and enter state 56
	L_Lambda       shift, and enter state 95

	Var            goto state 81
	GateIdent      goto state 21
	Lambda         goto state 82
	Term3          goto state 83
	Term2          goto state 84
	Term1          goto state 85
	Term           goto state 140
	Tup            goto state 87
	Bit            goto state 89
	Gate           goto state 90

State 128

	FunDec -> FunVar Type Function .                    (rule 45)

	L_FunVar       reduce using rule 45
	%eof           reduce using rule 45


State 129

	Term1 -> Lambda FunVar Type . '.' Term              (rule 34)

	'.'            shift, and enter state 139


State 130

	ListTerm -> Term ',' ListTerm .                     (rule 42)

	')'            reduce using rule 42
	%eof           reduce using rule 42


State 131

	Term3 -> '(' Term ')' .                             (rule 29)

	'('            reduce using rule 29
	')'            reduce using rule 29
	'*'            reduce using rule 29
	','            reduce using rule 29
	'0'            reduce using rule 29
	'1'            reduce using rule 29
	'CCR'          reduce using rule 29
	'CCR2'         reduce using rule 29
	'CCR4'         reduce using rule 29
	'CCR8'         reduce using rule 29
	'CNOT'         reduce using rule 29
	'CR'           reduce using rule 29
	'CR2'          reduce using rule 29
	'CR2D'         reduce using rule 29
	'CR4'          reduce using rule 29
	'CR4D'         reduce using rule 29
	'CR8'          reduce using rule 29
	'CR8D'         reduce using rule 29
	'CRD'          reduce using rule 29
	'FREDKIN'      reduce using rule 29
	'H'            reduce using rule 29
	'I'            reduce using rule 29
	'QFT'          reduce using rule 29
	'QFT2'         reduce using rule 29
	'QFT3'         reduce using rule 29
	'QFT4'         reduce using rule 29
	'QFT5'         reduce using rule 29
	'QFTI'         reduce using rule 29
	'QFTI2'        reduce using rule 29
	'QFTI3'        reduce using rule 29
	'QFTI4'        reduce using rule 29
	'QFTI5'        reduce using rule 29
	'S'            reduce using rule 29
	'SWAP'         reduce using rule 29
	'T'            reduce using rule 29
	'TOFFOLI'      reduce using rule 29
	'X'            reduce using rule 29
	'Y'            reduce using rule 29
	'Z'            reduce using rule 29
	'else'         reduce using rule 29
	'in'           reduce using rule 29
	'then'         reduce using rule 29
	L_FunVar       reduce using rule 29
	L_Var          reduce using rule 29
	L_GateIdent    reduce using rule 29
	%eof           reduce using rule 29


State 132

	Tup -> '(' Term ',' . ListTerm ')'                  (rule 40)

	'('            shift, and enter state 91
	'*'            shift, and enter state 92
	'0'            shift, and enter state 79
	'1'            shift, and enter state 80
	'CCR'          shift, and enter state 23
	'CCR2'         shift, and enter state 24
	'CCR4'         shift, and enter state 25
	'CCR8'         shift, and enter state 26
	'CNOT'         shift, and enter state 27
	'CR'           shift, and enter state 28
	'CR2'          shift, and enter state 29
	'CR2D'         shift, and enter state 30
	'CR4'          shift, and enter state 31
	'CR4D'         shift, and enter state 32
	'CR8'          shift, and enter state 33
	'CR8D'         shift, and enter state 34
	'CRD'          shift, and enter state 35
	'FREDKIN'      shift, and enter state 36
	'H'            shift, and enter state 37
	'I'            shift, and enter state 38
	'QFT'          shift, and enter state 39
	'QFT2'         shift, and enter state 40
	'QFT3'         shift, and enter state 41
	'QFT4'         shift, and enter state 42
	'QFT5'         shift, and enter state 43
	'QFTI'         shift, and enter state 44
	'QFTI2'        shift, and enter state 45
	'QFTI3'        shift, and enter state 46
	'QFTI4'        shift, and enter state 47
	'QFTI5'        shift, and enter state 48
	'S'            shift, and enter state 49
	'SWAP'         shift, and enter state 50
	'T'            shift, and enter state 51
	'TOFFOLI'      shift, and enter state 52
	'X'            shift, and enter state 53
	'Y'            shift, and enter state 54
	'Z'            shift, and enter state 55
	'if'           shift, and enter state 93
	'let'          shift, and enter state 94
	L_Var          shift, and enter state 70
	L_GateIdent    shift, and enter state 56
	L_Lambda       shift, and enter state 95

	Var            goto state 81
	GateIdent      goto state 21
	Lambda         goto state 82
	Term3          goto state 83
	Term2          goto state 84
	Term1          goto state 85
	Term           goto state 86
	Tup            goto state 87
	ListTerm       goto state 138
	Bit            goto state 89
	Gate           goto state 90

State 133

	Term1 -> 'if' Term2 'then' . Term 'else' Term       (rule 32)

	'('            shift, and enter state 91
	'*'            shift, and enter state 92
	'0'            shift, and enter state 79
	'1'            shift, and enter state 80
	'CCR'          shift, and enter state 23
	'CCR2'         shift, and enter state 24
	'CCR4'         shift, and enter state 25
	'CCR8'         shift, and enter state 26
	'CNOT'         shift, and enter state 27
	'CR'           shift, and enter state 28
	'CR2'          shift, and enter state 29
	'CR2D'         shift, and enter state 30
	'CR4'          shift, and enter state 31
	'CR4D'         shift, and enter state 32
	'CR8'          shift, and enter state 33
	'CR8D'         shift, and enter state 34
	'CRD'          shift, and enter state 35
	'FREDKIN'      shift, and enter state 36
	'H'            shift, and enter state 37
	'I'            shift, and enter state 38
	'QFT'          shift, and enter state 39
	'QFT2'         shift, and enter state 40
	'QFT3'         shift, and enter state 41
	'QFT4'         shift, and enter state 42
	'QFT5'         shift, and enter state 43
	'QFTI'         shift, and enter state 44
	'QFTI2'        shift, and enter state 45
	'QFTI3'        shift, and enter state 46
	'QFTI4'        shift, and enter state 47
	'QFTI5'        shift, and enter state 48
	'S'            shift, and enter state 49
	'SWAP'         shift, and enter state 50
	'T'            shift, and enter state 51
	'TOFFOLI'      shift, and enter state 52
	'X'            shift, and enter state 53
	'Y'            shift, and enter state 54
	'Z'            shift, and enter state 55
	'if'           shift, and enter state 93
	'let'          shift, and enter state 94
	L_Var          shift, and enter state 70
	L_GateIdent    shift, and enter state 56
	L_Lambda       shift, and enter state 95

	Var            goto state 81
	GateIdent      goto state 21
	Lambda         goto state 82
	Term3          goto state 83
	Term2          goto state 84
	Term1          goto state 85
	Term           goto state 137
	Tup            goto state 87
	Bit            goto state 89
	Gate           goto state 90

State 134

	Term1 -> 'let' '(' LetVar . ',' ListLetVar ')' '=' Term 'in' Term    (rule 33)

	','            shift, and enter state 136


State 135

	ListLetVar -> LetVar ',' ListLetVar .               (rule 39)

	')'            reduce using rule 39
	%eof           reduce using rule 39


State 136

	Term1 -> 'let' '(' LetVar ',' . ListLetVar ')' '=' Term 'in' Term    (rule 33)

	L_Var          shift, and enter state 70

	Var            goto state 98
	LetVar         goto state 99
	ListLetVar     goto state 144

State 137

	Term1 -> 'if' Term2 'then' Term . 'else' Term       (rule 32)

	'else'         shift, and enter state 143


State 138

	Tup -> '(' Term ',' ListTerm . ')'                  (rule 40)

	')'            shift, and enter state 142


State 139

	Term1 -> Lambda FunVar Type '.' . Term              (rule 34)

	'('            shift, and enter state 91
	'*'            shift, and enter state 92
	'0'            shift, and enter state 79
	'1'            shift, and enter state 80
	'CCR'          shift, and enter state 23
	'CCR2'         shift, and enter state 24
	'CCR4'         shift, and enter state 25
	'CCR8'         shift, and enter state 26
	'CNOT'         shift, and enter state 27
	'CR'           shift, and enter state 28
	'CR2'          shift, and enter state 29
	'CR2D'         shift, and enter state 30
	'CR4'          shift, and enter state 31
	'CR4D'         shift, and enter state 32
	'CR8'          shift, and enter state 33
	'CR8D'         shift, and enter state 34
	'CRD'          shift, and enter state 35
	'FREDKIN'      shift, and enter state 36
	'H'            shift, and enter state 37
	'I'            shift, and enter state 38
	'QFT'          shift, and enter state 39
	'QFT2'         shift, and enter state 40
	'QFT3'         shift, and enter state 41
	'QFT4'         shift, and enter state 42
	'QFT5'         shift, and enter state 43
	'QFTI'         shift, and enter state 44
	'QFTI2'        shift, and enter state 45
	'QFTI3'        shift, and enter state 46
	'QFTI4'        shift, and enter state 47
	'QFTI5'        shift, and enter state 48
	'S'            shift, and enter state 49
	'SWAP'         shift, and enter state 50
	'T'            shift, and enter state 51
	'TOFFOLI'      shift, and enter state 52
	'X'            shift, and enter state 53
	'Y'            shift, and enter state 54
	'Z'            shift, and enter state 55
	'if'           shift, and enter state 93
	'let'          shift, and enter state 94
	L_Var          shift, and enter state 70
	L_GateIdent    shift, and enter state 56
	L_Lambda       shift, and enter state 95

	Var            goto state 81
	GateIdent      goto state 21
	Lambda         goto state 82
	Term3          goto state 83
	Term2          goto state 84
	Term1          goto state 85
	Term           goto state 141
	Tup            goto state 87
	Bit            goto state 89
	Gate           goto state 90

State 140

	Function -> Var ListArg '=' Term .                  (rule 48)

	L_FunVar       reduce using rule 48
	%eof           reduce using rule 48


State 141

	Term1 -> Lambda FunVar Type '.' Term .              (rule 34)

	')'            reduce using rule 34
	','            reduce using rule 34
	'else'         reduce using rule 34
	'in'           reduce using rule 34
	L_FunVar       reduce using rule 34
	%eof           reduce using rule 34


State 142

	Tup -> '(' Term ',' ListTerm ')' .                  (rule 40)

	'('            reduce using rule 40
	')'            reduce using rule 40
	'*'            reduce using rule 40
	','            reduce using rule 40
	'0'            reduce using rule 40
	'1'            reduce using rule 40
	'CCR'          reduce using rule 40
	'CCR2'         reduce using rule 40
	'CCR4'         reduce using rule 40
	'CCR8'         reduce using rule 40
	'CNOT'         reduce using rule 40
	'CR'           reduce using rule 40
	'CR2'          reduce using rule 40
	'CR2D'         reduce using rule 40
	'CR4'          reduce using rule 40
	'CR4D'         reduce using rule 40
	'CR8'          reduce using rule 40
	'CR8D'         reduce using rule 40
	'CRD'          reduce using rule 40
	'FREDKIN'      reduce using rule 40
	'H'            reduce using rule 40
	'I'            reduce using rule 40
	'QFT'          reduce using rule 40
	'QFT2'         reduce using rule 40
	'QFT3'         reduce using rule 40
	'QFT4'         reduce using rule 40
	'QFT5'         reduce using rule 40
	'QFTI'         reduce using rule 40
	'QFTI2'        reduce using rule 40
	'QFTI3'        reduce using rule 40
	'QFTI4'        reduce using rule 40
	'QFTI5'        reduce using rule 40
	'S'            reduce using rule 40
	'SWAP'         reduce using rule 40
	'T'            reduce using rule 40
	'TOFFOLI'      reduce using rule 40
	'X'            reduce using rule 40
	'Y'            reduce using rule 40
	'Z'            reduce using rule 40
	'else'         reduce using rule 40
	'in'           reduce using rule 40
	'then'         reduce using rule 40
	L_FunVar       reduce using rule 40
	L_Var          reduce using rule 40
	L_GateIdent    reduce using rule 40
	%eof           reduce using rule 40


State 143

	Term1 -> 'if' Term2 'then' Term 'else' . Term       (rule 32)

	'('            shift, and enter state 91
	'*'            shift, and enter state 92
	'0'            shift, and enter state 79
	'1'            shift, and enter state 80
	'CCR'          shift, and enter state 23
	'CCR2'         shift, and enter state 24
	'CCR4'         shift, and enter state 25
	'CCR8'         shift, and enter state 26
	'CNOT'         shift, and enter state 27
	'CR'           shift, and enter state 28
	'CR2'          shift, and enter state 29
	'CR2D'         shift, and enter state 30
	'CR4'          shift, and enter state 31
	'CR4D'         shift, and enter state 32
	'CR8'          shift, and enter state 33
	'CR8D'         shift, and enter state 34
	'CRD'          shift, and enter state 35
	'FREDKIN'      shift, and enter state 36
	'H'            shift, and enter state 37
	'I'            shift, and enter state 38
	'QFT'          shift, and enter state 39
	'QFT2'         shift, and enter state 40
	'QFT3'         shift, and enter state 41
	'QFT4'         shift, and enter state 42
	'QFT5'         shift, and enter state 43
	'QFTI'         shift, and enter state 44
	'QFTI2'        shift, and enter state 45
	'QFTI3'        shift, and enter state 46
	'QFTI4'        shift, and enter state 47
	'QFTI5'        shift, and enter state 48
	'S'            shift, and enter state 49
	'SWAP'         shift, and enter state 50
	'T'            shift, and enter state 51
	'TOFFOLI'      shift, and enter state 52
	'X'            shift, and enter state 53
	'Y'            shift, and enter state 54
	'Z'            shift, and enter state 55
	'if'           shift, and enter state 93
	'let'          shift, and enter state 94
	L_Var          shift, and enter state 70
	L_GateIdent    shift, and enter state 56
	L_Lambda       shift, and enter state 95

	Var            goto state 81
	GateIdent      goto state 21
	Lambda         goto state 82
	Term3          goto state 83
	Term2          goto state 84
	Term1          goto state 85
	Term           goto state 146
	Tup            goto state 87
	Bit            goto state 89
	Gate           goto state 90

State 144

	Term1 -> 'let' '(' LetVar ',' ListLetVar . ')' '=' Term 'in' Term    (rule 33)

	')'            shift, and enter state 145


State 145

	Term1 -> 'let' '(' LetVar ',' ListLetVar ')' . '=' Term 'in' Term    (rule 33)

	'='            shift, and enter state 147


State 146

	Term1 -> 'if' Term2 'then' Term 'else' Term .       (rule 32)

	')'            reduce using rule 32
	','            reduce using rule 32
	'else'         reduce using rule 32
	'in'           reduce using rule 32
	L_FunVar       reduce using rule 32
	%eof           reduce using rule 32


State 147

	Term1 -> 'let' '(' LetVar ',' ListLetVar ')' '=' . Term 'in' Term    (rule 33)

	'('            shift, and enter state 91
	'*'            shift, and enter state 92
	'0'            shift, and enter state 79
	'1'            shift, and enter state 80
	'CCR'          shift, and enter state 23
	'CCR2'         shift, and enter state 24
	'CCR4'         shift, and enter state 25
	'CCR8'         shift, and enter state 26
	'CNOT'         shift, and enter state 27
	'CR'           shift, and enter state 28
	'CR2'          shift, and enter state 29
	'CR2D'         shift, and enter state 30
	'CR4'          shift, and enter state 31
	'CR4D'         shift, and enter state 32
	'CR8'          shift, and enter state 33
	'CR8D'         shift, and enter state 34
	'CRD'          shift, and enter state 35
	'FREDKIN'      shift, and enter state 36
	'H'            shift, and enter state 37
	'I'            shift, and enter state 38
	'QFT'          shift, and enter state 39
	'QFT2'         shift, and enter state 40
	'QFT3'         shift, and enter state 41
	'QFT4'         shift, and enter state 42
	'QFT5'         shift, and enter state 43
	'QFTI'         shift, and enter state 44
	'QFTI2'        shift, and enter state 45
	'QFTI3'        shift, and enter state 46
	'QFTI4'        shift, and enter state 47
	'QFTI5'        shift, and enter state 48
	'S'            shift, and enter state 49
	'SWAP'         shift, and enter state 50
	'T'            shift, and enter state 51
	'TOFFOLI'      shift, and enter state 52
	'X'            shift, and enter state 53
	'Y'            shift, and enter state 54
	'Z'            shift, and enter state 55
	'if'           shift, and enter state 93
	'let'          shift, and enter state 94
	L_Var          shift, and enter state 70
	L_GateIdent    shift, and enter state 56
	L_Lambda       shift, and enter state 95

	Var            goto state 81
	GateIdent      goto state 21
	Lambda         goto state 82
	Term3          goto state 83
	Term2          goto state 84
	Term1          goto state 85
	Term           goto state 148
	Tup            goto state 87
	Bit            goto state 89
	Gate           goto state 90

State 148

	Term1 -> 'let' '(' LetVar ',' ListLetVar ')' '=' Term . 'in' Term    (rule 33)

	'in'           shift, and enter state 149


State 149

	Term1 -> 'let' '(' LetVar ',' ListLetVar ')' '=' Term 'in' . Term    (rule 33)

	'('            shift, and enter state 91
	'*'            shift, and enter state 92
	'0'            shift, and enter state 79
	'1'            shift, and enter state 80
	'CCR'          shift, and enter state 23
	'CCR2'         shift, and enter state 24
	'CCR4'         shift, and enter state 25
	'CCR8'         shift, and enter state 26
	'CNOT'         shift, and enter state 27
	'CR'           shift, and enter state 28
	'CR2'          shift, and enter state 29
	'CR2D'         shift, and enter state 30
	'CR4'          shift, and enter state 31
	'CR4D'         shift, and enter state 32
	'CR8'          shift, and enter state 33
	'CR8D'         shift, and enter state 34
	'CRD'          shift, and enter state 35
	'FREDKIN'      shift, and enter state 36
	'H'            shift, and enter state 37
	'I'            shift, and enter state 38
	'QFT'          shift, and enter state 39
	'QFT2'         shift, and enter state 40
	'QFT3'         shift, and enter state 41
	'QFT4'         shift, and enter state 42
	'QFT5'         shift, and enter state 43
	'QFTI'         shift, and enter state 44
	'QFTI2'        shift, and enter state 45
	'QFTI3'        shift, and enter state 46
	'QFTI4'        shift, and enter state 47
	'QFTI5'        shift, and enter state 48
	'S'            shift, and enter state 49
	'SWAP'         shift, and enter state 50
	'T'            shift, and enter state 51
	'TOFFOLI'      shift, and enter state 52
	'X'            shift, and enter state 53
	'Y'            shift, and enter state 54
	'Z'            shift, and enter state 55
	'if'           shift, and enter state 93
	'let'          shift, and enter state 94
	L_Var          shift, and enter state 70
	L_GateIdent    shift, and enter state 56
	L_Lambda       shift, and enter state 95

	Var            goto state 81
	GateIdent      goto state 21
	Lambda         goto state 82
	Term3          goto state 83
	Term2          goto state 84
	Term1          goto state 85
	Term           goto state 150
	Tup            goto state 87
	Bit            goto state 89
	Gate           goto state 90

State 150

	Term1 -> 'let' '(' LetVar ',' ListLetVar ')' '=' Term 'in' Term .    (rule 33)

	')'            reduce using rule 33
	','            reduce using rule 33
	'else'         reduce using rule 33
	'in'           reduce using rule 33
	L_FunVar       reduce using rule 33
	%eof           reduce using rule 33


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 95
Number of terminals: 55
Number of non-terminals: 42
Number of states: 151
