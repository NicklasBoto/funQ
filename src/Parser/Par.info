-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.12 from Parser/Par.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	%start_pTerm3 -> Term3                             (1)
	%start_pTerm2 -> Term2                             (2)
	%start_pTerm1 -> Term1                             (3)
	%start_pTerm -> Term                               (4)
	%start_pLetVar -> LetVar                           (5)
	%start_pListLetVar -> ListLetVar                   (6)
	%start_pTup -> Tup                                 (7)
	%start_pListTerm -> ListTerm                       (8)
	%start_pBit -> Bit                                 (9)
	%start_pFunDec -> FunDec                           (10)
	%start_pListFunDec -> ListFunDec                   (11)
	%start_pFunction -> Function                       (12)
	%start_pArg -> Arg                                 (13)
	%start_pListArg -> ListArg                         (14)
	%start_pType2 -> Type2                             (15)
	%start_pType1 -> Type1                             (16)
	%start_pType -> Type                               (17)
	%start_pGate -> Gate                               (18)
	FunVar -> L_FunVar                                 (19)
	Var -> L_Var                                       (20)
	GateIdent -> L_GateIdent                           (21)
	Lambda -> L_Lambda                                 (22)
	Program -> ListFunDec                              (23)
	Term3 -> Var                                       (24)
	Term3 -> Bit                                       (25)
	Term3 -> Gate                                      (26)
	Term3 -> Tup                                       (27)
	Term3 -> '*'                                       (28)
	Term3 -> '(' Term ')'                              (29)
	Term2 -> Term2 Term3                               (30)
	Term2 -> Term3                                     (31)
	Term1 -> 'if' Term2 'then' Term 'else' Term        (32)
	Term1 -> 'let' '(' LetVar ',' ListLetVar ')' '=' Term 'in' Term   (33)
	Term1 -> Lambda Var '.' Term                       (34)
	Term1 -> Term2                                     (35)
	Term -> Term1                                      (36)
	LetVar -> Var                                      (37)
	ListLetVar -> LetVar                               (38)
	ListLetVar -> LetVar ',' ListLetVar                (39)
	Tup -> '(' Term ',' ListTerm ')'                   (40)
	ListTerm -> Term                                   (41)
	ListTerm -> Term ',' ListTerm                      (42)
	Bit -> '0'                                         (43)
	Bit -> '1'                                         (44)
	FunDec -> FunVar Type Function                     (45)
	ListFunDec ->                                      (46)
	ListFunDec -> FunDec ListFunDec                    (47)
	Function -> Var ListArg '=' Term                   (48)
	Arg -> Var                                         (49)
	ListArg ->                                         (50)
	ListArg -> Arg ListArg                             (51)
	Type2 -> Var                                       (52)
	Type2 -> 'Bit'                                     (53)
	Type2 -> 'QBit'                                    (54)
	Type2 -> 'T'                                       (55)
	Type2 -> '!' Type2                                 (56)
	Type2 -> '(' Type ')'                              (57)
	Type1 -> Type2 '><' Type1                          (58)
	Type1 -> Type2 '-o' Type1                          (59)
	Type1 -> Type2                                     (60)
	Type -> Type1                                      (61)
	Gate -> 'H'                                        (62)
	Gate -> 'X'                                        (63)
	Gate -> 'Y'                                        (64)
	Gate -> 'Z'                                        (65)
	Gate -> 'I'                                        (66)
	Gate -> 'S'                                        (67)
	Gate -> 'T'                                        (68)
	Gate -> 'CNOT'                                     (69)
	Gate -> 'TOFFOLI'                                  (70)
	Gate -> 'SWAP'                                     (71)
	Gate -> 'FREDKIN'                                  (72)
	Gate -> 'QFT'                                      (73)
	Gate -> 'QFTI'                                     (74)
	Gate -> 'CT'                                       (75)
	Gate -> 'CR2'                                      (76)
	Gate -> 'CR2D'                                     (77)
	Gate -> 'CR3'                                      (78)
	Gate -> 'CR3D'                                     (79)
	Gate -> 'CR4'                                      (80)
	Gate -> 'CR4D'                                     (81)
	Gate -> 'CR5'                                      (82)
	Gate -> 'CR5D'                                     (83)
	Gate -> 'CR8'                                      (84)
	Gate -> 'CR8D'                                     (85)
	Gate -> GateIdent                                  (86)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'('            { PT _ (TS _ 2) }
	')'            { PT _ (TS _ 3) }
	'*'            { PT _ (TS _ 4) }
	','            { PT _ (TS _ 5) }
	'-o'           { PT _ (TS _ 6) }
	'.'            { PT _ (TS _ 7) }
	'0'            { PT _ (TS _ 8) }
	'1'            { PT _ (TS _ 9) }
	'='            { PT _ (TS _ 10) }
	'><'           { PT _ (TS _ 11) }
	'Bit'          { PT _ (TS _ 12) }
	'CNOT'         { PT _ (TS _ 13) }
	'CR2'          { PT _ (TS _ 14) }
	'CR2D'         { PT _ (TS _ 15) }
	'CR3'          { PT _ (TS _ 16) }
	'CR3D'         { PT _ (TS _ 17) }
	'CR4'          { PT _ (TS _ 18) }
	'CR4D'         { PT _ (TS _ 19) }
	'CR5'          { PT _ (TS _ 20) }
	'CR5D'         { PT _ (TS _ 21) }
	'CR8'          { PT _ (TS _ 22) }
	'CR8D'         { PT _ (TS _ 23) }
	'CT'           { PT _ (TS _ 24) }
	'FREDKIN'      { PT _ (TS _ 25) }
	'H'            { PT _ (TS _ 26) }
	'I'            { PT _ (TS _ 27) }
	'QBit'         { PT _ (TS _ 28) }
	'QFT'          { PT _ (TS _ 29) }
	'QFTI'         { PT _ (TS _ 30) }
	'S'            { PT _ (TS _ 31) }
	'SWAP'         { PT _ (TS _ 32) }
	'T'            { PT _ (TS _ 33) }
	'TOFFOLI'      { PT _ (TS _ 34) }
	'X'            { PT _ (TS _ 35) }
	'Y'            { PT _ (TS _ 36) }
	'Z'            { PT _ (TS _ 37) }
	'else'         { PT _ (TS _ 38) }
	'if'           { PT _ (TS _ 39) }
	'in'           { PT _ (TS _ 40) }
	'let'          { PT _ (TS _ 41) }
	'then'         { PT _ (TS _ 42) }
	L_FunVar       { PT _ (T_FunVar $$) }
	L_Var          { PT _ (T_Var $$) }
	L_GateIdent    { PT _ (T_GateIdent $$) }
	L_Lambda       { PT _ (T_Lambda $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	%start_pTerm3   rule  1
	%start_pTerm2   rule  2
	%start_pTerm1   rule  3
	%start_pTerm    rule  4
	%start_pLetVar  rule  5
	%start_pListLetVar rule  6
	%start_pTup     rule  7
	%start_pListTerm rule  8
	%start_pBit     rule  9
	%start_pFunDec  rule  10
	%start_pListFunDec rule  11
	%start_pFunction rule  12
	%start_pArg     rule  13
	%start_pListArg rule  14
	%start_pType2   rule  15
	%start_pType1   rule  16
	%start_pType    rule  17
	%start_pGate    rule  18
	FunVar          rule  19
	Var             rule  20
	GateIdent       rule  21
	Lambda          rule  22
	Program         rule  23
	Term3           rules 24, 25, 26, 27, 28, 29
	Term2           rules 30, 31
	Term1           rules 32, 33, 34, 35
	Term            rule  36
	LetVar          rule  37
	ListLetVar      rules 38, 39
	Tup             rule  40
	ListTerm        rules 41, 42
	Bit             rules 43, 44
	FunDec          rule  45
	ListFunDec      rules 46, 47
	Function        rule  48
	Arg             rule  49
	ListArg         rules 50, 51
	Type2           rules 52, 53, 54, 55, 56, 57
	Type1           rules 58, 59, 60
	Type            rule  61
	Gate            rules 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	L_FunVar       shift, and enter state 20
	%eof           reduce using rule 46

	FunVar         goto state 66
	Program        goto state 98
	FunDec         goto state 67
	ListFunDec     goto state 99

State 1


	'('            shift, and enter state 83
	'*'            shift, and enter state 84
	'0'            shift, and enter state 71
	'1'            shift, and enter state 72
	'CNOT'         shift, and enter state 23
	'CR2'          shift, and enter state 24
	'CR2D'         shift, and enter state 25
	'CR3'          shift, and enter state 26
	'CR3D'         shift, and enter state 27
	'CR4'          shift, and enter state 28
	'CR4D'         shift, and enter state 29
	'CR5'          shift, and enter state 30
	'CR5D'         shift, and enter state 31
	'CR8'          shift, and enter state 32
	'CR8D'         shift, and enter state 33
	'CT'           shift, and enter state 34
	'FREDKIN'      shift, and enter state 35
	'H'            shift, and enter state 36
	'I'            shift, and enter state 37
	'QFT'          shift, and enter state 38
	'QFTI'         shift, and enter state 39
	'S'            shift, and enter state 40
	'SWAP'         shift, and enter state 41
	'T'            shift, and enter state 42
	'TOFFOLI'      shift, and enter state 43
	'X'            shift, and enter state 44
	'Y'            shift, and enter state 45
	'Z'            shift, and enter state 46
	L_Var          shift, and enter state 57
	L_GateIdent    shift, and enter state 47

	Var            goto state 73
	GateIdent      goto state 21
	Term3          goto state 97
	Tup            goto state 79
	Bit            goto state 81
	Gate           goto state 82

State 2


	'('            shift, and enter state 83
	'*'            shift, and enter state 84
	'0'            shift, and enter state 71
	'1'            shift, and enter state 72
	'CNOT'         shift, and enter state 23
	'CR2'          shift, and enter state 24
	'CR2D'         shift, and enter state 25
	'CR3'          shift, and enter state 26
	'CR3D'         shift, and enter state 27
	'CR4'          shift, and enter state 28
	'CR4D'         shift, and enter state 29
	'CR5'          shift, and enter state 30
	'CR5D'         shift, and enter state 31
	'CR8'          shift, and enter state 32
	'CR8D'         shift, and enter state 33
	'CT'           shift, and enter state 34
	'FREDKIN'      shift, and enter state 35
	'H'            shift, and enter state 36
	'I'            shift, and enter state 37
	'QFT'          shift, and enter state 38
	'QFTI'         shift, and enter state 39
	'S'            shift, and enter state 40
	'SWAP'         shift, and enter state 41
	'T'            shift, and enter state 42
	'TOFFOLI'      shift, and enter state 43
	'X'            shift, and enter state 44
	'Y'            shift, and enter state 45
	'Z'            shift, and enter state 46
	L_Var          shift, and enter state 57
	L_GateIdent    shift, and enter state 47

	Var            goto state 73
	GateIdent      goto state 21
	Term3          goto state 75
	Term2          goto state 96
	Tup            goto state 79
	Bit            goto state 81
	Gate           goto state 82

State 3


	'('            shift, and enter state 83
	'*'            shift, and enter state 84
	'0'            shift, and enter state 71
	'1'            shift, and enter state 72
	'CNOT'         shift, and enter state 23
	'CR2'          shift, and enter state 24
	'CR2D'         shift, and enter state 25
	'CR3'          shift, and enter state 26
	'CR3D'         shift, and enter state 27
	'CR4'          shift, and enter state 28
	'CR4D'         shift, and enter state 29
	'CR5'          shift, and enter state 30
	'CR5D'         shift, and enter state 31
	'CR8'          shift, and enter state 32
	'CR8D'         shift, and enter state 33
	'CT'           shift, and enter state 34
	'FREDKIN'      shift, and enter state 35
	'H'            shift, and enter state 36
	'I'            shift, and enter state 37
	'QFT'          shift, and enter state 38
	'QFTI'         shift, and enter state 39
	'S'            shift, and enter state 40
	'SWAP'         shift, and enter state 41
	'T'            shift, and enter state 42
	'TOFFOLI'      shift, and enter state 43
	'X'            shift, and enter state 44
	'Y'            shift, and enter state 45
	'Z'            shift, and enter state 46
	'if'           shift, and enter state 85
	'let'          shift, and enter state 86
	L_Var          shift, and enter state 57
	L_GateIdent    shift, and enter state 47
	L_Lambda       shift, and enter state 87

	Var            goto state 73
	GateIdent      goto state 21
	Lambda         goto state 74
	Term3          goto state 75
	Term2          goto state 76
	Term1          goto state 95
	Tup            goto state 79
	Bit            goto state 81
	Gate           goto state 82

State 4


	'('            shift, and enter state 83
	'*'            shift, and enter state 84
	'0'            shift, and enter state 71
	'1'            shift, and enter state 72
	'CNOT'         shift, and enter state 23
	'CR2'          shift, and enter state 24
	'CR2D'         shift, and enter state 25
	'CR3'          shift, and enter state 26
	'CR3D'         shift, and enter state 27
	'CR4'          shift, and enter state 28
	'CR4D'         shift, and enter state 29
	'CR5'          shift, and enter state 30
	'CR5D'         shift, and enter state 31
	'CR8'          shift, and enter state 32
	'CR8D'         shift, and enter state 33
	'CT'           shift, and enter state 34
	'FREDKIN'      shift, and enter state 35
	'H'            shift, and enter state 36
	'I'            shift, and enter state 37
	'QFT'          shift, and enter state 38
	'QFTI'         shift, and enter state 39
	'S'            shift, and enter state 40
	'SWAP'         shift, and enter state 41
	'T'            shift, and enter state 42
	'TOFFOLI'      shift, and enter state 43
	'X'            shift, and enter state 44
	'Y'            shift, and enter state 45
	'Z'            shift, and enter state 46
	'if'           shift, and enter state 85
	'let'          shift, and enter state 86
	L_Var          shift, and enter state 57
	L_GateIdent    shift, and enter state 47
	L_Lambda       shift, and enter state 87

	Var            goto state 73
	GateIdent      goto state 21
	Lambda         goto state 74
	Term3          goto state 75
	Term2          goto state 76
	Term1          goto state 77
	Term           goto state 94
	Tup            goto state 79
	Bit            goto state 81
	Gate           goto state 82

State 5


	L_Var          shift, and enter state 57

	Var            goto state 90
	LetVar         goto state 93

State 6


	L_Var          shift, and enter state 57

	Var            goto state 90
	LetVar         goto state 91
	ListLetVar     goto state 92

	L_Var          shift, and enter state 59


	'('            shift, and enter state 89

	Tup            goto state 88

	'('            shift, and enter state 86


	'('            shift, and enter state 83
	'*'            shift, and enter state 84
	'0'            shift, and enter state 71
	'1'            shift, and enter state 72
	'CNOT'         shift, and enter state 23
	'CR2'          shift, and enter state 24
	'CR2D'         shift, and enter state 25
	'CR3'          shift, and enter state 26
	'CR3D'         shift, and enter state 27
	'CR4'          shift, and enter state 28
	'CR4D'         shift, and enter state 29
	'CR5'          shift, and enter state 30
	'CR5D'         shift, and enter state 31
	'CR8'          shift, and enter state 32
	'CR8D'         shift, and enter state 33
	'CT'           shift, and enter state 34
	'FREDKIN'      shift, and enter state 35
	'H'            shift, and enter state 36
	'I'            shift, and enter state 37
	'QFT'          shift, and enter state 38
	'QFTI'         shift, and enter state 39
	'S'            shift, and enter state 40
	'SWAP'         shift, and enter state 41
	'T'            shift, and enter state 42
	'TOFFOLI'      shift, and enter state 43
	'X'            shift, and enter state 44
	'Y'            shift, and enter state 45
	'Z'            shift, and enter state 46
	'if'           shift, and enter state 85
	'let'          shift, and enter state 86
	L_Var          shift, and enter state 57
	L_GateIdent    shift, and enter state 47
	L_Lambda       shift, and enter state 87

	Var            goto state 73
	GateIdent      goto state 21
	Lambda         goto state 74
	Term3          goto state 75
	Term2          goto state 76
	Term1          goto state 77
	Term           goto state 78
	Tup            goto state 79
	ListTerm       goto state 80
	Bit            goto state 81
	Gate           goto state 82

State 9


	'0'            shift, and enter state 71
	'1'            shift, and enter state 72

	Bit            goto state 70

State 10


	L_FunVar       shift, and enter state 20

	FunVar         goto state 66
	FunDec         goto state 69

State 11


	L_FunVar       shift, and enter state 20
	%eof           reduce using rule 46

	FunVar         goto state 66
	FunDec         goto state 67
	ListFunDec     goto state 68

State 12


	L_Var          shift, and enter state 57

	Var            goto state 64
	Function       goto state 65

State 13


	L_Var          shift, and enter state 57

	Var            goto state 60
	Arg            goto state 63

State 14


	L_Var          shift, and enter state 57
	%eof           reduce using rule 50

	Var            goto state 60
	Arg            goto state 61
	ListArg        goto state 62

State 15


	'!'            shift, and enter state 52
	'('            shift, and enter state 53
	'Bit'          shift, and enter state 54
	'QBit'         shift, and enter state 55
	'T'            shift, and enter state 56
	L_Var          shift, and enter state 57

	Var            goto state 48
	Type2          goto state 59

State 16


	'!'            shift, and enter state 52
	'('            shift, and enter state 53
	'Bit'          shift, and enter state 54
	'QBit'         shift, and enter state 55
	'T'            shift, and enter state 56
	L_Var          shift, and enter state 57

	Var            goto state 48
	Type2          goto state 49
	Type1          goto state 58

State 17


	'!'            shift, and enter state 52
	'('            shift, and enter state 53
	'Bit'          shift, and enter state 54
	'QBit'         shift, and enter state 55
	'T'            shift, and enter state 56
	L_Var          shift, and enter state 57

	Var            goto state 48
	Type2          goto state 49
	Type1          goto state 50
	Type           goto state 51

State 18


	'CNOT'         shift, and enter state 23
	'CR2'          shift, and enter state 24
	'CR2D'         shift, and enter state 25
	'CR3'          shift, and enter state 26
	'CR3D'         shift, and enter state 27
	'CR4'          shift, and enter state 28
	'CR4D'         shift, and enter state 29
	'CR5'          shift, and enter state 30
	'CR5D'         shift, and enter state 31
	'CR8'          shift, and enter state 32
	'CR8D'         shift, and enter state 33
	'CT'           shift, and enter state 34
	'FREDKIN'      shift, and enter state 35
	'H'            shift, and enter state 36
	'I'            shift, and enter state 37
	'QFT'          shift, and enter state 38
	'QFTI'         shift, and enter state 39
	'S'            shift, and enter state 40
	'SWAP'         shift, and enter state 41
	'T'            shift, and enter state 42
	'TOFFOLI'      shift, and enter state 43
	'X'            shift, and enter state 44
	'Y'            shift, and enter state 45
	'Z'            shift, and enter state 46
	L_GateIdent    shift, and enter state 47

	GateIdent      goto state 21
	Gate           goto state 22

	L_FunVar       shift, and enter state 20


State 20

	FunVar -> L_FunVar .                                (rule 19)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'Bit'          reduce using rule 19
	'QBit'         reduce using rule 19
	'T'            reduce using rule 19


State 21

	Gate -> GateIdent .                                 (rule 83)

	'('            reduce using rule 83
	')'            reduce using rule 83
	'*'            reduce using rule 83
	','            reduce using rule 83
	'0'            reduce using rule 83
	'1'            reduce using rule 83
	'CNOT'         reduce using rule 83
	'CR2'          reduce using rule 83
	'CR2D'         reduce using rule 83
	'CR3'          reduce using rule 83
	'CR3D'         reduce using rule 83
	'CR4'          reduce using rule 83
	'CR4D'         reduce using rule 83
	'CR8'          reduce using rule 83
	'CR8D'         reduce using rule 83
	'CT'           reduce using rule 83
	'FREDKIN'      reduce using rule 83
	'H'            reduce using rule 83
	'I'            reduce using rule 83
	'QFT'          reduce using rule 83
	'QFTI'         reduce using rule 83
	'S'            reduce using rule 83
	'SWAP'         reduce using rule 83
	'T'            reduce using rule 83
	'TOFFOLI'      reduce using rule 83
	'X'            reduce using rule 83
	'Y'            reduce using rule 83
	'Z'            reduce using rule 83
	'else'         reduce using rule 83
	'in'           reduce using rule 83
	'then'         reduce using rule 83
	L_FunVar       reduce using rule 83
	L_Var          reduce using rule 83
	L_GateIdent    reduce using rule 83
	%eof           reduce using rule 83


State 22

	%start_pGate -> Gate .                              (rule 18)

	%eof           accept


State 23


	L_FunVar       shift, and enter state 20


State 24

	FunVar -> L_FunVar .                                (rule 19)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'Bit'          reduce using rule 19
	'QBit'         reduce using rule 19
	'T'            reduce using rule 19
	L_Var          reduce using rule 19

State 25

	Gate -> 'CR2D' .                                    (rule 76)

	'('            reduce using rule 76
	')'            reduce using rule 76
	'*'            reduce using rule 76
	','            reduce using rule 76
	'0'            reduce using rule 76
	'1'            reduce using rule 76
	'CNOT'         reduce using rule 76
	'CR2'          reduce using rule 76
	'CR2D'         reduce using rule 76
	'CR3'          reduce using rule 76
	'CR3D'         reduce using rule 76
	'CR4'          reduce using rule 76
	'CR4D'         reduce using rule 76
	'CR8'          reduce using rule 76
	'CR8D'         reduce using rule 76
	'CT'           reduce using rule 76
	'FREDKIN'      reduce using rule 76
	'H'            reduce using rule 76
	'I'            reduce using rule 76
	'QFT'          reduce using rule 76
	'QFTI'         reduce using rule 76
	'S'            reduce using rule 76
	'SWAP'         reduce using rule 76
	'T'            reduce using rule 76
	'TOFFOLI'      reduce using rule 76
	'X'            reduce using rule 76
	'Y'            reduce using rule 76
	'Z'            reduce using rule 76
	'else'         reduce using rule 76
	'in'           reduce using rule 76
	'then'         reduce using rule 76
	L_FunVar       reduce using rule 76
	L_Var          reduce using rule 76
	L_GateIdent    reduce using rule 76
	%eof           reduce using rule 76

	Gate -> GateIdent .                                 (rule 86)

	'('            reduce using rule 86
	')'            reduce using rule 86
	'*'            reduce using rule 86
	','            reduce using rule 86
	'0'            reduce using rule 86
	'1'            reduce using rule 86
	'CNOT'         reduce using rule 86
	'CR2'          reduce using rule 86
	'CR2D'         reduce using rule 86
	'CR3'          reduce using rule 86
	'CR3D'         reduce using rule 86
	'CR4'          reduce using rule 86
	'CR4D'         reduce using rule 86
	'CR5'          reduce using rule 86
	'CR5D'         reduce using rule 86
	'CR8'          reduce using rule 86
	'CR8D'         reduce using rule 86
	'CT'           reduce using rule 86
	'FREDKIN'      reduce using rule 86
	'H'            reduce using rule 86
	'I'            reduce using rule 86
	'QFT'          reduce using rule 86
	'QFTI'         reduce using rule 86
	'S'            reduce using rule 86
	'SWAP'         reduce using rule 86
	'T'            reduce using rule 86
	'TOFFOLI'      reduce using rule 86
	'X'            reduce using rule 86
	'Y'            reduce using rule 86
	'Z'            reduce using rule 86
	'else'         reduce using rule 86
	'in'           reduce using rule 86
	'then'         reduce using rule 86
	L_FunVar       reduce using rule 86
	L_Var          reduce using rule 86
	L_GateIdent    reduce using rule 86
	%eof           reduce using rule 86

	Gate -> 'CR3' .                                     (rule 77)

	'('            reduce using rule 77
	')'            reduce using rule 77
	'*'            reduce using rule 77
	','            reduce using rule 77
	'0'            reduce using rule 77
	'1'            reduce using rule 77
	'CNOT'         reduce using rule 77
	'CR2'          reduce using rule 77
	'CR2D'         reduce using rule 77
	'CR3'          reduce using rule 77
	'CR3D'         reduce using rule 77
	'CR4'          reduce using rule 77
	'CR4D'         reduce using rule 77
	'CR8'          reduce using rule 77
	'CR8D'         reduce using rule 77
	'CT'           reduce using rule 77
	'FREDKIN'      reduce using rule 77
	'H'            reduce using rule 77
	'I'            reduce using rule 77
	'QFT'          reduce using rule 77
	'QFTI'         reduce using rule 77
	'S'            reduce using rule 77
	'SWAP'         reduce using rule 77
	'T'            reduce using rule 77
	'TOFFOLI'      reduce using rule 77
	'X'            reduce using rule 77
	'Y'            reduce using rule 77
	'Z'            reduce using rule 77
	'else'         reduce using rule 77
	'in'           reduce using rule 77
	'then'         reduce using rule 77
	L_FunVar       reduce using rule 77
	L_Var          reduce using rule 77
	L_GateIdent    reduce using rule 77
	%eof           reduce using rule 77


	%start_pGate -> Gate .                              (rule 18)

	%eof           accept


State 28

	Gate -> 'CNOT' .                                    (rule 69)

	'('            reduce using rule 69
	')'            reduce using rule 69
	'*'            reduce using rule 69
	','            reduce using rule 69
	'0'            reduce using rule 69
	'1'            reduce using rule 69
	'CNOT'         reduce using rule 69
	'CR2'          reduce using rule 69
	'CR2D'         reduce using rule 69
	'CR3'          reduce using rule 69
	'CR3D'         reduce using rule 69
	'CR4'          reduce using rule 69
	'CR4D'         reduce using rule 69
	'CR5'          reduce using rule 69
	'CR5D'         reduce using rule 69
	'CR8'          reduce using rule 69
	'CR8D'         reduce using rule 69
	'CT'           reduce using rule 69
	'FREDKIN'      reduce using rule 69
	'H'            reduce using rule 69
	'I'            reduce using rule 69
	'QFT'          reduce using rule 69
	'QFTI'         reduce using rule 69
	'S'            reduce using rule 69
	'SWAP'         reduce using rule 69
	'T'            reduce using rule 69
	'TOFFOLI'      reduce using rule 69
	'X'            reduce using rule 69
	'Y'            reduce using rule 69
	'Z'            reduce using rule 69
	'else'         reduce using rule 69
	'in'           reduce using rule 69
	'then'         reduce using rule 69
	L_FunVar       reduce using rule 69
	L_Var          reduce using rule 69
	L_GateIdent    reduce using rule 69
	%eof           reduce using rule 69

State 29

	Gate -> 'CR4D' .                                    (rule 80)

	'('            reduce using rule 80
	')'            reduce using rule 80
	'*'            reduce using rule 80
	','            reduce using rule 80
	'0'            reduce using rule 80
	'1'            reduce using rule 80
	'CNOT'         reduce using rule 80
	'CR2'          reduce using rule 80
	'CR2D'         reduce using rule 80
	'CR3'          reduce using rule 80
	'CR3D'         reduce using rule 80
	'CR4'          reduce using rule 80
	'CR4D'         reduce using rule 80
	'CR8'          reduce using rule 80
	'CR8D'         reduce using rule 80
	'CT'           reduce using rule 80
	'FREDKIN'      reduce using rule 80
	'H'            reduce using rule 80
	'I'            reduce using rule 80
	'QFT'          reduce using rule 80
	'QFTI'         reduce using rule 80
	'S'            reduce using rule 80
	'SWAP'         reduce using rule 80
	'T'            reduce using rule 80
	'TOFFOLI'      reduce using rule 80
	'X'            reduce using rule 80
	'Y'            reduce using rule 80
	'Z'            reduce using rule 80
	'else'         reduce using rule 80
	'in'           reduce using rule 80
	'then'         reduce using rule 80
	L_FunVar       reduce using rule 80
	L_Var          reduce using rule 80
	L_GateIdent    reduce using rule 80
	%eof           reduce using rule 80


State 30

	Gate -> 'CR8' .                                     (rule 81)

	'('            reduce using rule 81
	')'            reduce using rule 81
	'*'            reduce using rule 81
	','            reduce using rule 81
	'0'            reduce using rule 81
	'1'            reduce using rule 81
	'CNOT'         reduce using rule 81
	'CR2'          reduce using rule 81
	'CR2D'         reduce using rule 81
	'CR3'          reduce using rule 81
	'CR3D'         reduce using rule 81
	'CR4'          reduce using rule 81
	'CR4D'         reduce using rule 81
	'CR8'          reduce using rule 81
	'CR8D'         reduce using rule 81
	'CT'           reduce using rule 81
	'FREDKIN'      reduce using rule 81
	'H'            reduce using rule 81
	'I'            reduce using rule 81
	'QFT'          reduce using rule 81
	'QFTI'         reduce using rule 81
	'S'            reduce using rule 81
	'SWAP'         reduce using rule 81
	'T'            reduce using rule 81
	'TOFFOLI'      reduce using rule 81
	'X'            reduce using rule 81
	'Y'            reduce using rule 81
	'Z'            reduce using rule 81
	'else'         reduce using rule 81
	'in'           reduce using rule 81
	'then'         reduce using rule 81
	L_FunVar       reduce using rule 81
	L_Var          reduce using rule 81
	L_GateIdent    reduce using rule 81
	%eof           reduce using rule 81


State 31

	Gate -> 'CR8D' .                                    (rule 82)

	'('            reduce using rule 82
	')'            reduce using rule 82
	'*'            reduce using rule 82
	','            reduce using rule 82
	'0'            reduce using rule 82
	'1'            reduce using rule 82
	'CNOT'         reduce using rule 82
	'CR2'          reduce using rule 82
	'CR2D'         reduce using rule 82
	'CR3'          reduce using rule 82
	'CR3D'         reduce using rule 82
	'CR4'          reduce using rule 82
	'CR4D'         reduce using rule 82
	'CR8'          reduce using rule 82
	'CR8D'         reduce using rule 82
	'CT'           reduce using rule 82
	'FREDKIN'      reduce using rule 82
	'H'            reduce using rule 82
	'I'            reduce using rule 82
	'QFT'          reduce using rule 82
	'QFTI'         reduce using rule 82
	'S'            reduce using rule 82
	'SWAP'         reduce using rule 82
	'T'            reduce using rule 82
	'TOFFOLI'      reduce using rule 82
	'X'            reduce using rule 82
	'Y'            reduce using rule 82
	'Z'            reduce using rule 82
	'else'         reduce using rule 82
	'in'           reduce using rule 82
	'then'         reduce using rule 82
	L_FunVar       reduce using rule 82
	L_Var          reduce using rule 82
	L_GateIdent    reduce using rule 82
	%eof           reduce using rule 82


State 32

	Gate -> 'CT' .                                      (rule 74)

	'('            reduce using rule 74
	')'            reduce using rule 74
	'*'            reduce using rule 74
	','            reduce using rule 74
	'0'            reduce using rule 74
	'1'            reduce using rule 74
	'CNOT'         reduce using rule 74
	'CR2'          reduce using rule 74
	'CR2D'         reduce using rule 74
	'CR3'          reduce using rule 74
	'CR3D'         reduce using rule 74
	'CR4'          reduce using rule 74
	'CR4D'         reduce using rule 74
	'CR8'          reduce using rule 74
	'CR8D'         reduce using rule 74
	'CT'           reduce using rule 74
	'FREDKIN'      reduce using rule 74
	'H'            reduce using rule 74
	'I'            reduce using rule 74
	'QFT'          reduce using rule 74
	'QFTI'         reduce using rule 74
	'S'            reduce using rule 74
	'SWAP'         reduce using rule 74
	'T'            reduce using rule 74
	'TOFFOLI'      reduce using rule 74
	'X'            reduce using rule 74
	'Y'            reduce using rule 74
	'Z'            reduce using rule 74
	'else'         reduce using rule 74
	'in'           reduce using rule 74
	'then'         reduce using rule 74
	L_FunVar       reduce using rule 74
	L_Var          reduce using rule 74
	L_GateIdent    reduce using rule 74
	%eof           reduce using rule 74


	Gate -> 'CR2' .                                     (rule 76)

	'('            reduce using rule 76
	')'            reduce using rule 76
	'*'            reduce using rule 76
	','            reduce using rule 76
	'0'            reduce using rule 76
	'1'            reduce using rule 76
	'CNOT'         reduce using rule 76
	'CR2'          reduce using rule 76
	'CR2D'         reduce using rule 76
	'CR3'          reduce using rule 76
	'CR3D'         reduce using rule 76
	'CR4'          reduce using rule 76
	'CR4D'         reduce using rule 76
	'CR5'          reduce using rule 76
	'CR5D'         reduce using rule 76
	'CR8'          reduce using rule 76
	'CR8D'         reduce using rule 76
	'CT'           reduce using rule 76
	'FREDKIN'      reduce using rule 76
	'H'            reduce using rule 76
	'I'            reduce using rule 76
	'QFT'          reduce using rule 76
	'QFTI'         reduce using rule 76
	'S'            reduce using rule 76
	'SWAP'         reduce using rule 76
	'T'            reduce using rule 76
	'TOFFOLI'      reduce using rule 76
	'X'            reduce using rule 76
	'Y'            reduce using rule 76
	'Z'            reduce using rule 76
	'else'         reduce using rule 76
	'in'           reduce using rule 76
	'then'         reduce using rule 76
	L_FunVar       reduce using rule 76
	L_Var          reduce using rule 76
	L_GateIdent    reduce using rule 76
	%eof           reduce using rule 76


State 35

	Gate -> 'CR2D' .                                    (rule 77)

	'('            reduce using rule 77
	')'            reduce using rule 77
	'*'            reduce using rule 77
	','            reduce using rule 77
	'0'            reduce using rule 77
	'1'            reduce using rule 77
	'CNOT'         reduce using rule 77
	'CR2'          reduce using rule 77
	'CR2D'         reduce using rule 77
	'CR3'          reduce using rule 77
	'CR3D'         reduce using rule 77
	'CR4'          reduce using rule 77
	'CR4D'         reduce using rule 77
	'CR5'          reduce using rule 77
	'CR5D'         reduce using rule 77
	'CR8'          reduce using rule 77
	'CR8D'         reduce using rule 77
	'CT'           reduce using rule 77
	'FREDKIN'      reduce using rule 77
	'H'            reduce using rule 77
	'I'            reduce using rule 77
	'QFT'          reduce using rule 77
	'QFTI'         reduce using rule 77
	'S'            reduce using rule 77
	'SWAP'         reduce using rule 77
	'T'            reduce using rule 77
	'TOFFOLI'      reduce using rule 77
	'X'            reduce using rule 77
	'Y'            reduce using rule 77
	'Z'            reduce using rule 77
	'else'         reduce using rule 77
	'in'           reduce using rule 77
	'then'         reduce using rule 77
	L_FunVar       reduce using rule 77
	L_Var          reduce using rule 77
	L_GateIdent    reduce using rule 77
	%eof           reduce using rule 77


State 26

	Gate -> 'CR3' .                                     (rule 78)

	'('            reduce using rule 78
	')'            reduce using rule 78
	'*'            reduce using rule 78
	','            reduce using rule 78
	'0'            reduce using rule 78
	'1'            reduce using rule 78
	'CNOT'         reduce using rule 78
	'CR2'          reduce using rule 78
	'CR2D'         reduce using rule 78
	'CR3'          reduce using rule 78
	'CR3D'         reduce using rule 78
	'CR4'          reduce using rule 78
	'CR4D'         reduce using rule 78
	'CR5'          reduce using rule 78
	'CR5D'         reduce using rule 78
	'CR8'          reduce using rule 78
	'CR8D'         reduce using rule 78
	'CT'           reduce using rule 78
	'FREDKIN'      reduce using rule 78
	'H'            reduce using rule 78
	'I'            reduce using rule 78
	'QFT'          reduce using rule 78
	'QFTI'         reduce using rule 78
	'S'            reduce using rule 78
	'SWAP'         reduce using rule 78
	'T'            reduce using rule 78
	'TOFFOLI'      reduce using rule 78
	'X'            reduce using rule 78
	'Y'            reduce using rule 78
	'Z'            reduce using rule 78
	'else'         reduce using rule 78
	'in'           reduce using rule 78
	'then'         reduce using rule 78
	L_FunVar       reduce using rule 78
	L_Var          reduce using rule 78
	L_GateIdent    reduce using rule 78
	%eof           reduce using rule 78


State 27

	Gate -> 'CR3D' .                                    (rule 79)

	'('            reduce using rule 79
	')'            reduce using rule 79
	'*'            reduce using rule 79
	','            reduce using rule 79
	'0'            reduce using rule 79
	'1'            reduce using rule 79
	'CNOT'         reduce using rule 79
	'CR2'          reduce using rule 79
	'CR2D'         reduce using rule 79
	'CR3'          reduce using rule 79
	'CR3D'         reduce using rule 79
	'CR4'          reduce using rule 79
	'CR4D'         reduce using rule 79
	'CR5'          reduce using rule 79
	'CR5D'         reduce using rule 79
	'CR8'          reduce using rule 79
	'CR8D'         reduce using rule 79
	'CT'           reduce using rule 79
	'FREDKIN'      reduce using rule 79
	'H'            reduce using rule 79
	'I'            reduce using rule 79
	'QFT'          reduce using rule 79
	'QFTI'         reduce using rule 79
	'S'            reduce using rule 79
	'SWAP'         reduce using rule 79
	'T'            reduce using rule 79
	'TOFFOLI'      reduce using rule 79
	'X'            reduce using rule 79
	'Y'            reduce using rule 79
	'Z'            reduce using rule 79
	'else'         reduce using rule 79
	'in'           reduce using rule 79
	'then'         reduce using rule 79
	L_FunVar       reduce using rule 79
	L_Var          reduce using rule 79
	L_GateIdent    reduce using rule 79
	%eof           reduce using rule 79


State 28

	Gate -> 'CR4' .                                     (rule 80)

	'('            reduce using rule 80
	')'            reduce using rule 80
	'*'            reduce using rule 80
	','            reduce using rule 80
	'0'            reduce using rule 80
	'1'            reduce using rule 80
	'CNOT'         reduce using rule 80
	'CR2'          reduce using rule 80
	'CR2D'         reduce using rule 80
	'CR3'          reduce using rule 80
	'CR3D'         reduce using rule 80
	'CR4'          reduce using rule 80
	'CR4D'         reduce using rule 80
	'CR5'          reduce using rule 80
	'CR5D'         reduce using rule 80
	'CR8'          reduce using rule 80
	'CR8D'         reduce using rule 80
	'CT'           reduce using rule 80
	'FREDKIN'      reduce using rule 80
	'H'            reduce using rule 80
	'I'            reduce using rule 80
	'QFT'          reduce using rule 80
	'QFTI'         reduce using rule 80
	'S'            reduce using rule 80
	'SWAP'         reduce using rule 80
	'T'            reduce using rule 80
	'TOFFOLI'      reduce using rule 80
	'X'            reduce using rule 80
	'Y'            reduce using rule 80
	'Z'            reduce using rule 80
	'else'         reduce using rule 80
	'in'           reduce using rule 80
	'then'         reduce using rule 80
	L_FunVar       reduce using rule 80
	L_Var          reduce using rule 80
	L_GateIdent    reduce using rule 80
	%eof           reduce using rule 80


State 29

	Gate -> 'CR4D' .                                    (rule 81)

	'('            reduce using rule 81
	')'            reduce using rule 81
	'*'            reduce using rule 81
	','            reduce using rule 81
	'0'            reduce using rule 81
	'1'            reduce using rule 81
	'CNOT'         reduce using rule 81
	'CR2'          reduce using rule 81
	'CR2D'         reduce using rule 81
	'CR3'          reduce using rule 81
	'CR3D'         reduce using rule 81
	'CR4'          reduce using rule 81
	'CR4D'         reduce using rule 81
	'CR5'          reduce using rule 81
	'CR5D'         reduce using rule 81
	'CR8'          reduce using rule 81
	'CR8D'         reduce using rule 81
	'CT'           reduce using rule 81
	'FREDKIN'      reduce using rule 81
	'H'            reduce using rule 81
	'I'            reduce using rule 81
	'QFT'          reduce using rule 81
	'QFTI'         reduce using rule 81
	'S'            reduce using rule 81
	'SWAP'         reduce using rule 81
	'T'            reduce using rule 81
	'TOFFOLI'      reduce using rule 81
	'X'            reduce using rule 81
	'Y'            reduce using rule 81
	'Z'            reduce using rule 81
	'else'         reduce using rule 81
	'in'           reduce using rule 81
	'then'         reduce using rule 81
	L_FunVar       reduce using rule 81
	L_Var          reduce using rule 81
	L_GateIdent    reduce using rule 81
	%eof           reduce using rule 81


State 30

	Gate -> 'CR5' .                                     (rule 82)

	'('            reduce using rule 82
	')'            reduce using rule 82
	'*'            reduce using rule 82
	','            reduce using rule 82
	'0'            reduce using rule 82
	'1'            reduce using rule 82
	'CNOT'         reduce using rule 82
	'CR2'          reduce using rule 82
	'CR2D'         reduce using rule 82
	'CR3'          reduce using rule 82
	'CR3D'         reduce using rule 82
	'CR4'          reduce using rule 82
	'CR4D'         reduce using rule 82
	'CR5'          reduce using rule 82
	'CR5D'         reduce using rule 82
	'CR8'          reduce using rule 82
	'CR8D'         reduce using rule 82
	'CT'           reduce using rule 82
	'FREDKIN'      reduce using rule 82
	'H'            reduce using rule 82
	'I'            reduce using rule 82
	'QFT'          reduce using rule 82
	'QFTI'         reduce using rule 82
	'S'            reduce using rule 82
	'SWAP'         reduce using rule 82
	'T'            reduce using rule 82
	'TOFFOLI'      reduce using rule 82
	'X'            reduce using rule 82
	'Y'            reduce using rule 82
	'Z'            reduce using rule 82
	'else'         reduce using rule 82
	'in'           reduce using rule 82
	'then'         reduce using rule 82
	L_FunVar       reduce using rule 82
	L_Var          reduce using rule 82
	L_GateIdent    reduce using rule 82
	%eof           reduce using rule 82


State 31

	Gate -> 'CR5D' .                                    (rule 83)

	'('            reduce using rule 83
	')'            reduce using rule 83
	'*'            reduce using rule 83
	','            reduce using rule 83
	'0'            reduce using rule 83
	'1'            reduce using rule 83
	'CNOT'         reduce using rule 83
	'CR2'          reduce using rule 83
	'CR2D'         reduce using rule 83
	'CR3'          reduce using rule 83
	'CR3D'         reduce using rule 83
	'CR4'          reduce using rule 83
	'CR4D'         reduce using rule 83
	'CR5'          reduce using rule 83
	'CR5D'         reduce using rule 83
	'CR8'          reduce using rule 83
	'CR8D'         reduce using rule 83
	'CT'           reduce using rule 83
	'FREDKIN'      reduce using rule 83
	'H'            reduce using rule 83
	'I'            reduce using rule 83
	'QFT'          reduce using rule 83
	'QFTI'         reduce using rule 83
	'S'            reduce using rule 83
	'SWAP'         reduce using rule 83
	'T'            reduce using rule 83
	'TOFFOLI'      reduce using rule 83
	'X'            reduce using rule 83
	'Y'            reduce using rule 83
	'Z'            reduce using rule 83
	'else'         reduce using rule 83
	'in'           reduce using rule 83
	'then'         reduce using rule 83
	L_FunVar       reduce using rule 83
	L_Var          reduce using rule 83
	L_GateIdent    reduce using rule 83
	%eof           reduce using rule 83


State 32

	Gate -> 'CR8' .                                     (rule 84)

	'('            reduce using rule 84
	')'            reduce using rule 84
	'*'            reduce using rule 84
	','            reduce using rule 84
	'0'            reduce using rule 84
	'1'            reduce using rule 84
	'CNOT'         reduce using rule 84
	'CR2'          reduce using rule 84
	'CR2D'         reduce using rule 84
	'CR3'          reduce using rule 84
	'CR3D'         reduce using rule 84
	'CR4'          reduce using rule 84
	'CR4D'         reduce using rule 84
	'CR5'          reduce using rule 84
	'CR5D'         reduce using rule 84
	'CR8'          reduce using rule 84
	'CR8D'         reduce using rule 84
	'CT'           reduce using rule 84
	'FREDKIN'      reduce using rule 84
	'H'            reduce using rule 84
	'I'            reduce using rule 84
	'QFT'          reduce using rule 84
	'QFTI'         reduce using rule 84
	'S'            reduce using rule 84
	'SWAP'         reduce using rule 84
	'T'            reduce using rule 84
	'TOFFOLI'      reduce using rule 84
	'X'            reduce using rule 84
	'Y'            reduce using rule 84
	'Z'            reduce using rule 84
	'else'         reduce using rule 84
	'in'           reduce using rule 84
	'then'         reduce using rule 84
	L_FunVar       reduce using rule 84
	L_Var          reduce using rule 84
	L_GateIdent    reduce using rule 84
	%eof           reduce using rule 84


State 33

	Gate -> 'CR8D' .                                    (rule 85)

	'('            reduce using rule 85
	')'            reduce using rule 85
	'*'            reduce using rule 85
	','            reduce using rule 85
	'0'            reduce using rule 85
	'1'            reduce using rule 85
	'CNOT'         reduce using rule 85
	'CR2'          reduce using rule 85
	'CR2D'         reduce using rule 85
	'CR3'          reduce using rule 85
	'CR3D'         reduce using rule 85
	'CR4'          reduce using rule 85
	'CR4D'         reduce using rule 85
	'CR5'          reduce using rule 85
	'CR5D'         reduce using rule 85
	'CR8'          reduce using rule 85
	'CR8D'         reduce using rule 85
	'CT'           reduce using rule 85
	'FREDKIN'      reduce using rule 85
	'H'            reduce using rule 85
	'I'            reduce using rule 85
	'QFT'          reduce using rule 85
	'QFTI'         reduce using rule 85
	'S'            reduce using rule 85
	'SWAP'         reduce using rule 85
	'T'            reduce using rule 85
	'TOFFOLI'      reduce using rule 85
	'X'            reduce using rule 85
	'Y'            reduce using rule 85
	'Z'            reduce using rule 85
	'else'         reduce using rule 85
	'in'           reduce using rule 85
	'then'         reduce using rule 85
	L_FunVar       reduce using rule 85
	L_Var          reduce using rule 85
	L_GateIdent    reduce using rule 85
	%eof           reduce using rule 85


State 34

	Gate -> 'CT' .                                      (rule 75)

	'('            reduce using rule 75
	')'            reduce using rule 75
	'*'            reduce using rule 75
	','            reduce using rule 75
	'0'            reduce using rule 75
	'1'            reduce using rule 75
	'CNOT'         reduce using rule 75
	'CR2'          reduce using rule 75
	'CR2D'         reduce using rule 75
	'CR3'          reduce using rule 75
	'CR3D'         reduce using rule 75
	'CR4'          reduce using rule 75
	'CR4D'         reduce using rule 75
	'CR5'          reduce using rule 75
	'CR5D'         reduce using rule 75
	'CR8'          reduce using rule 75
	'CR8D'         reduce using rule 75
	'CT'           reduce using rule 75
	'FREDKIN'      reduce using rule 75
	'H'            reduce using rule 75
	'I'            reduce using rule 75
	'QFT'          reduce using rule 75
	'QFTI'         reduce using rule 75
	'S'            reduce using rule 75
	'SWAP'         reduce using rule 75
	'T'            reduce using rule 75
	'TOFFOLI'      reduce using rule 75
	'X'            reduce using rule 75
	'Y'            reduce using rule 75
	'Z'            reduce using rule 75
	'else'         reduce using rule 75
	'in'           reduce using rule 75
	'then'         reduce using rule 75
	L_FunVar       reduce using rule 75
	L_Var          reduce using rule 75
	L_GateIdent    reduce using rule 75
	%eof           reduce using rule 75


State 35

	Gate -> 'FREDKIN' .                                 (rule 72)

	'('            reduce using rule 72
	')'            reduce using rule 72
	'*'            reduce using rule 72
	','            reduce using rule 72
	'0'            reduce using rule 72
	'1'            reduce using rule 72
	'CNOT'         reduce using rule 72
	'CR2'          reduce using rule 72
	'CR2D'         reduce using rule 72
	'CR3'          reduce using rule 72
	'CR3D'         reduce using rule 72
	'CR4'          reduce using rule 72
	'CR4D'         reduce using rule 72
	'CR5'          reduce using rule 72
	'CR5D'         reduce using rule 72
	'CR8'          reduce using rule 72
	'CR8D'         reduce using rule 72
	'CT'           reduce using rule 72
	'FREDKIN'      reduce using rule 72
	'H'            reduce using rule 72
	'I'            reduce using rule 72
	'QFT'          reduce using rule 72
	'QFTI'         reduce using rule 72
	'S'            reduce using rule 72
	'SWAP'         reduce using rule 72
	'T'            reduce using rule 72
	'TOFFOLI'      reduce using rule 72
	'X'            reduce using rule 72
	'Y'            reduce using rule 72
	'Z'            reduce using rule 72
	'else'         reduce using rule 72
	'in'           reduce using rule 72
	'then'         reduce using rule 72
	L_FunVar       reduce using rule 72
	L_Var          reduce using rule 72
	L_GateIdent    reduce using rule 72
	%eof           reduce using rule 72


State 36

	Gate -> 'H' .                                       (rule 62)

	'('            reduce using rule 62
	')'            reduce using rule 62
	'*'            reduce using rule 62
	','            reduce using rule 62
	'0'            reduce using rule 62
	'1'            reduce using rule 62
	'CNOT'         reduce using rule 62
	'CR2'          reduce using rule 62
	'CR2D'         reduce using rule 62
	'CR3'          reduce using rule 62
	'CR3D'         reduce using rule 62
	'CR4'          reduce using rule 62
	'CR4D'         reduce using rule 62
	'CR5'          reduce using rule 62
	'CR5D'         reduce using rule 62
	'CR8'          reduce using rule 62
	'CR8D'         reduce using rule 62
	'CT'           reduce using rule 62
	'FREDKIN'      reduce using rule 62
	'H'            reduce using rule 62
	'I'            reduce using rule 62
	'QFT'          reduce using rule 62
	'QFTI'         reduce using rule 62
	'S'            reduce using rule 62
	'SWAP'         reduce using rule 62
	'T'            reduce using rule 62
	'TOFFOLI'      reduce using rule 62
	'X'            reduce using rule 62
	'Y'            reduce using rule 62
	'Z'            reduce using rule 62
	'else'         reduce using rule 62
	'in'           reduce using rule 62
	'then'         reduce using rule 62
	L_FunVar       reduce using rule 62
	L_Var          reduce using rule 62
	L_GateIdent    reduce using rule 62
	%eof           reduce using rule 62


State 37

	Gate -> 'I' .                                       (rule 66)

	'('            reduce using rule 66
	')'            reduce using rule 66
	'*'            reduce using rule 66
	','            reduce using rule 66
	'0'            reduce using rule 66
	'1'            reduce using rule 66
	'CNOT'         reduce using rule 66
	'CR2'          reduce using rule 66
	'CR2D'         reduce using rule 66
	'CR3'          reduce using rule 66
	'CR3D'         reduce using rule 66
	'CR4'          reduce using rule 66
	'CR4D'         reduce using rule 66
	'CR5'          reduce using rule 66
	'CR5D'         reduce using rule 66
	'CR8'          reduce using rule 66
	'CR8D'         reduce using rule 66
	'CT'           reduce using rule 66
	'FREDKIN'      reduce using rule 66
	'H'            reduce using rule 66
	'I'            reduce using rule 66
	'QFT'          reduce using rule 66
	'QFTI'         reduce using rule 66
	'S'            reduce using rule 66
	'SWAP'         reduce using rule 66
	'T'            reduce using rule 66
	'TOFFOLI'      reduce using rule 66
	'X'            reduce using rule 66
	'Y'            reduce using rule 66
	'Z'            reduce using rule 66
	'else'         reduce using rule 66
	'in'           reduce using rule 66
	'then'         reduce using rule 66
	L_FunVar       reduce using rule 66
	L_Var          reduce using rule 66
	L_GateIdent    reduce using rule 66
	%eof           reduce using rule 66


State 38

	Gate -> 'QFT' .                                     (rule 73)

	'('            reduce using rule 73
	')'            reduce using rule 73
	'*'            reduce using rule 73
	','            reduce using rule 73
	'0'            reduce using rule 73
	'1'            reduce using rule 73
	'CNOT'         reduce using rule 73
	'CR2'          reduce using rule 73
	'CR2D'         reduce using rule 73
	'CR3'          reduce using rule 73
	'CR3D'         reduce using rule 73
	'CR4'          reduce using rule 73
	'CR4D'         reduce using rule 73
	'CR5'          reduce using rule 73
	'CR5D'         reduce using rule 73
	'CR8'          reduce using rule 73
	'CR8D'         reduce using rule 73
	'CT'           reduce using rule 73
	'FREDKIN'      reduce using rule 73
	'H'            reduce using rule 73
	'I'            reduce using rule 73
	'QFT'          reduce using rule 73
	'QFTI'         reduce using rule 73
	'S'            reduce using rule 73
	'SWAP'         reduce using rule 73
	'T'            reduce using rule 73
	'TOFFOLI'      reduce using rule 73
	'X'            reduce using rule 73
	'Y'            reduce using rule 73
	'Z'            reduce using rule 73
	'else'         reduce using rule 73
	'in'           reduce using rule 73
	'then'         reduce using rule 73
	L_FunVar       reduce using rule 73
	L_Var          reduce using rule 73
	L_GateIdent    reduce using rule 73
	%eof           reduce using rule 73


State 39

	Gate -> 'QFTI' .                                    (rule 74)

	'('            reduce using rule 74
	')'            reduce using rule 74
	'*'            reduce using rule 74
	','            reduce using rule 74
	'0'            reduce using rule 74
	'1'            reduce using rule 74
	'CNOT'         reduce using rule 74
	'CR2'          reduce using rule 74
	'CR2D'         reduce using rule 74
	'CR3'          reduce using rule 74
	'CR3D'         reduce using rule 74
	'CR4'          reduce using rule 74
	'CR4D'         reduce using rule 74
	'CR5'          reduce using rule 74
	'CR5D'         reduce using rule 74
	'CR8'          reduce using rule 74
	'CR8D'         reduce using rule 74
	'CT'           reduce using rule 74
	'FREDKIN'      reduce using rule 74
	'H'            reduce using rule 74
	'I'            reduce using rule 74
	'QFT'          reduce using rule 74
	'QFTI'         reduce using rule 74
	'S'            reduce using rule 74
	'SWAP'         reduce using rule 74
	'T'            reduce using rule 74
	'TOFFOLI'      reduce using rule 74
	'X'            reduce using rule 74
	'Y'            reduce using rule 74
	'Z'            reduce using rule 74
	'else'         reduce using rule 74
	'in'           reduce using rule 74
	'then'         reduce using rule 74
	L_FunVar       reduce using rule 74
	L_Var          reduce using rule 74
	L_GateIdent    reduce using rule 74
	%eof           reduce using rule 74


State 40

	Gate -> 'S' .                                       (rule 67)

	'('            reduce using rule 67
	')'            reduce using rule 67
	'*'            reduce using rule 67
	','            reduce using rule 67
	'0'            reduce using rule 67
	'1'            reduce using rule 67
	'CNOT'         reduce using rule 67
	'CR2'          reduce using rule 67
	'CR2D'         reduce using rule 67
	'CR3'          reduce using rule 67
	'CR3D'         reduce using rule 67
	'CR4'          reduce using rule 67
	'CR4D'         reduce using rule 67
	'CR5'          reduce using rule 67
	'CR5D'         reduce using rule 67
	'CR8'          reduce using rule 67
	'CR8D'         reduce using rule 67
	'CT'           reduce using rule 67
	'FREDKIN'      reduce using rule 67
	'H'            reduce using rule 67
	'I'            reduce using rule 67
	'QFT'          reduce using rule 67
	'QFTI'         reduce using rule 67
	'S'            reduce using rule 67
	'SWAP'         reduce using rule 67
	'T'            reduce using rule 67
	'TOFFOLI'      reduce using rule 67
	'X'            reduce using rule 67
	'Y'            reduce using rule 67
	'Z'            reduce using rule 67
	'else'         reduce using rule 67
	'in'           reduce using rule 67
	'then'         reduce using rule 67
	L_FunVar       reduce using rule 67
	L_Var          reduce using rule 67
	L_GateIdent    reduce using rule 67
	%eof           reduce using rule 67


State 41

	Gate -> 'SWAP' .                                    (rule 71)

	'('            reduce using rule 71
	')'            reduce using rule 71
	'*'            reduce using rule 71
	','            reduce using rule 71
	'0'            reduce using rule 71
	'1'            reduce using rule 71
	'CNOT'         reduce using rule 71
	'CR2'          reduce using rule 71
	'CR2D'         reduce using rule 71
	'CR3'          reduce using rule 71
	'CR3D'         reduce using rule 71
	'CR4'          reduce using rule 71
	'CR4D'         reduce using rule 71
	'CR5'          reduce using rule 71
	'CR5D'         reduce using rule 71
	'CR8'          reduce using rule 71
	'CR8D'         reduce using rule 71
	'CT'           reduce using rule 71
	'FREDKIN'      reduce using rule 71
	'H'            reduce using rule 71
	'I'            reduce using rule 71
	'QFT'          reduce using rule 71
	'QFTI'         reduce using rule 71
	'S'            reduce using rule 71
	'SWAP'         reduce using rule 71
	'T'            reduce using rule 71
	'TOFFOLI'      reduce using rule 71
	'X'            reduce using rule 71
	'Y'            reduce using rule 71
	'Z'            reduce using rule 71
	'else'         reduce using rule 71
	'in'           reduce using rule 71
	'then'         reduce using rule 71
	L_FunVar       reduce using rule 71
	L_Var          reduce using rule 71
	L_GateIdent    reduce using rule 71
	%eof           reduce using rule 71


State 42

	Gate -> 'T' .                                       (rule 68)

	'('            reduce using rule 68
	')'            reduce using rule 68
	'*'            reduce using rule 68
	','            reduce using rule 68
	'0'            reduce using rule 68
	'1'            reduce using rule 68
	'CNOT'         reduce using rule 68
	'CR2'          reduce using rule 68
	'CR2D'         reduce using rule 68
	'CR3'          reduce using rule 68
	'CR3D'         reduce using rule 68
	'CR4'          reduce using rule 68
	'CR4D'         reduce using rule 68
	'CR5'          reduce using rule 68
	'CR5D'         reduce using rule 68
	'CR8'          reduce using rule 68
	'CR8D'         reduce using rule 68
	'CT'           reduce using rule 68
	'FREDKIN'      reduce using rule 68
	'H'            reduce using rule 68
	'I'            reduce using rule 68
	'QFT'          reduce using rule 68
	'QFTI'         reduce using rule 68
	'S'            reduce using rule 68
	'SWAP'         reduce using rule 68
	'T'            reduce using rule 68
	'TOFFOLI'      reduce using rule 68
	'X'            reduce using rule 68
	'Y'            reduce using rule 68
	'Z'            reduce using rule 68
	'else'         reduce using rule 68
	'in'           reduce using rule 68
	'then'         reduce using rule 68
	L_FunVar       reduce using rule 68
	L_Var          reduce using rule 68
	L_GateIdent    reduce using rule 68
	%eof           reduce using rule 68


State 43

	Gate -> 'TOFFOLI' .                                 (rule 70)

	'('            reduce using rule 70
	')'            reduce using rule 70
	'*'            reduce using rule 70
	','            reduce using rule 70
	'0'            reduce using rule 70
	'1'            reduce using rule 70
	'CNOT'         reduce using rule 70
	'CR2'          reduce using rule 70
	'CR2D'         reduce using rule 70
	'CR3'          reduce using rule 70
	'CR3D'         reduce using rule 70
	'CR4'          reduce using rule 70
	'CR4D'         reduce using rule 70
	'CR5'          reduce using rule 70
	'CR5D'         reduce using rule 70
	'CR8'          reduce using rule 70
	'CR8D'         reduce using rule 70
	'CT'           reduce using rule 70
	'FREDKIN'      reduce using rule 70
	'H'            reduce using rule 70
	'I'            reduce using rule 70
	'QFT'          reduce using rule 70
	'QFTI'         reduce using rule 70
	'S'            reduce using rule 70
	'SWAP'         reduce using rule 70
	'T'            reduce using rule 70
	'TOFFOLI'      reduce using rule 70
	'X'            reduce using rule 70
	'Y'            reduce using rule 70
	'Z'            reduce using rule 70
	'else'         reduce using rule 70
	'in'           reduce using rule 70
	'then'         reduce using rule 70
	L_FunVar       reduce using rule 70
	L_Var          reduce using rule 70
	L_GateIdent    reduce using rule 70
	%eof           reduce using rule 70


State 44

	Gate -> 'X' .                                       (rule 63)

	'('            reduce using rule 63
	')'            reduce using rule 63
	'*'            reduce using rule 63
	','            reduce using rule 63
	'0'            reduce using rule 63
	'1'            reduce using rule 63
	'CNOT'         reduce using rule 63
	'CR2'          reduce using rule 63
	'CR2D'         reduce using rule 63
	'CR3'          reduce using rule 63
	'CR3D'         reduce using rule 63
	'CR4'          reduce using rule 63
	'CR4D'         reduce using rule 63
	'CR5'          reduce using rule 63
	'CR5D'         reduce using rule 63
	'CR8'          reduce using rule 63
	'CR8D'         reduce using rule 63
	'CT'           reduce using rule 63
	'FREDKIN'      reduce using rule 63
	'H'            reduce using rule 63
	'I'            reduce using rule 63
	'QFT'          reduce using rule 63
	'QFTI'         reduce using rule 63
	'S'            reduce using rule 63
	'SWAP'         reduce using rule 63
	'T'            reduce using rule 63
	'TOFFOLI'      reduce using rule 63
	'X'            reduce using rule 63
	'Y'            reduce using rule 63
	'Z'            reduce using rule 63
	'else'         reduce using rule 63
	'in'           reduce using rule 63
	'then'         reduce using rule 63
	L_FunVar       reduce using rule 63
	L_Var          reduce using rule 63
	L_GateIdent    reduce using rule 63
	%eof           reduce using rule 63


State 45

	Gate -> 'Y' .                                       (rule 64)

	'('            reduce using rule 64
	')'            reduce using rule 64
	'*'            reduce using rule 64
	','            reduce using rule 64
	'0'            reduce using rule 64
	'1'            reduce using rule 64
	'CNOT'         reduce using rule 64
	'CR2'          reduce using rule 64
	'CR2D'         reduce using rule 64
	'CR3'          reduce using rule 64
	'CR3D'         reduce using rule 64
	'CR4'          reduce using rule 64
	'CR4D'         reduce using rule 64
	'CR5'          reduce using rule 64
	'CR5D'         reduce using rule 64
	'CR8'          reduce using rule 64
	'CR8D'         reduce using rule 64
	'CT'           reduce using rule 64
	'FREDKIN'      reduce using rule 64
	'H'            reduce using rule 64
	'I'            reduce using rule 64
	'QFT'          reduce using rule 64
	'QFTI'         reduce using rule 64
	'S'            reduce using rule 64
	'SWAP'         reduce using rule 64
	'T'            reduce using rule 64
	'TOFFOLI'      reduce using rule 64
	'X'            reduce using rule 64
	'Y'            reduce using rule 64
	'Z'            reduce using rule 64
	'else'         reduce using rule 64
	'in'           reduce using rule 64
	'then'         reduce using rule 64
	L_FunVar       reduce using rule 64
	L_Var          reduce using rule 64
	L_GateIdent    reduce using rule 64
	%eof           reduce using rule 64


State 46

	Gate -> 'Z' .                                       (rule 65)

	'('            reduce using rule 65
	')'            reduce using rule 65
	'*'            reduce using rule 65
	','            reduce using rule 65
	'0'            reduce using rule 65
	'1'            reduce using rule 65
	'CNOT'         reduce using rule 65
	'CR2'          reduce using rule 65
	'CR2D'         reduce using rule 65
	'CR3'          reduce using rule 65
	'CR3D'         reduce using rule 65
	'CR4'          reduce using rule 65
	'CR4D'         reduce using rule 65
	'CR5'          reduce using rule 65
	'CR5D'         reduce using rule 65
	'CR8'          reduce using rule 65
	'CR8D'         reduce using rule 65
	'CT'           reduce using rule 65
	'FREDKIN'      reduce using rule 65
	'H'            reduce using rule 65
	'I'            reduce using rule 65
	'QFT'          reduce using rule 65
	'QFTI'         reduce using rule 65
	'S'            reduce using rule 65
	'SWAP'         reduce using rule 65
	'T'            reduce using rule 65
	'TOFFOLI'      reduce using rule 65
	'X'            reduce using rule 65
	'Y'            reduce using rule 65
	'Z'            reduce using rule 65
	'else'         reduce using rule 65
	'in'           reduce using rule 65
	'then'         reduce using rule 65
	L_FunVar       reduce using rule 65
	L_Var          reduce using rule 65
	L_GateIdent    reduce using rule 65
	%eof           reduce using rule 65


State 47

	GateIdent -> L_GateIdent .                          (rule 21)

	'('            reduce using rule 21
	')'            reduce using rule 21
	'*'            reduce using rule 21
	','            reduce using rule 21
	'0'            reduce using rule 21
	'1'            reduce using rule 21
	'CNOT'         reduce using rule 21
	'CR2'          reduce using rule 21
	'CR2D'         reduce using rule 21
	'CR3'          reduce using rule 21
	'CR3D'         reduce using rule 21
	'CR4'          reduce using rule 21
	'CR4D'         reduce using rule 21
	'CR5'          reduce using rule 21
	'CR5D'         reduce using rule 21
	'CR8'          reduce using rule 21
	'CR8D'         reduce using rule 21
	'CT'           reduce using rule 21
	'FREDKIN'      reduce using rule 21
	'H'            reduce using rule 21
	'I'            reduce using rule 21
	'QFT'          reduce using rule 21
	'QFTI'         reduce using rule 21
	'S'            reduce using rule 21
	'SWAP'         reduce using rule 21
	'T'            reduce using rule 21
	'TOFFOLI'      reduce using rule 21
	'X'            reduce using rule 21
	'Y'            reduce using rule 21
	'Z'            reduce using rule 21
	'else'         reduce using rule 21
	'in'           reduce using rule 21
	'then'         reduce using rule 21
	L_FunVar       reduce using rule 21
	L_Var          reduce using rule 21
	L_GateIdent    reduce using rule 21
	%eof           reduce using rule 21


State 48

	Type2 -> Var .                                      (rule 52)

	')'            reduce using rule 52
	'-o'           reduce using rule 52
	'><'           reduce using rule 52
	L_Var          reduce using rule 52
	%eof           reduce using rule 52


State 49

	Type1 -> Type2 . '><' Type1                         (rule 58)
	Type1 -> Type2 . '-o' Type1                         (rule 59)
	Type1 -> Type2 .                                    (rule 60)

	')'            reduce using rule 60
	'-o'           shift, and enter state 114
	'><'           shift, and enter state 115
	L_Var          reduce using rule 60
	%eof           reduce using rule 60


State 50

	Type -> Type1 .                                     (rule 61)

	')'            reduce using rule 61
	L_Var          reduce using rule 61
	%eof           reduce using rule 61


State 51

	%start_pType -> Type .                              (rule 17)

	%eof           accept


State 52

	Type2 -> '!' . Type2                                (rule 56)

	'!'            shift, and enter state 52
	'('            shift, and enter state 53
	'Bit'          shift, and enter state 54
	'QBit'         shift, and enter state 55
	'T'            shift, and enter state 56
	L_Var          shift, and enter state 57

	Var            goto state 48
	Type2          goto state 113

State 53

	Type2 -> '(' . Type ')'                             (rule 57)

	'!'            shift, and enter state 52
	'('            shift, and enter state 53
	'Bit'          shift, and enter state 54
	'QBit'         shift, and enter state 55
	'T'            shift, and enter state 56
	L_Var          shift, and enter state 57

	Var            goto state 48
	Type2          goto state 49
	Type1          goto state 50
	Type           goto state 112

State 54

	Type2 -> 'Bit' .                                    (rule 53)

	')'            reduce using rule 53
	'-o'           reduce using rule 53
	'><'           reduce using rule 53
	L_Var          reduce using rule 53
	%eof           reduce using rule 53


State 55

	Type2 -> 'QBit' .                                   (rule 54)

	')'            reduce using rule 54
	'-o'           reduce using rule 54
	'><'           reduce using rule 54
	L_Var          reduce using rule 54
	%eof           reduce using rule 54


State 56

	Type2 -> 'T' .                                      (rule 55)

	')'            reduce using rule 55
	'-o'           reduce using rule 55
	'><'           reduce using rule 55
	L_Var          reduce using rule 55
	%eof           reduce using rule 55


State 57

	Var -> L_Var .                                      (rule 20)

	'('            reduce using rule 20
	')'            reduce using rule 20
	'*'            reduce using rule 20
	','            reduce using rule 20
	'-o'           reduce using rule 20
	'.'            reduce using rule 20
	'0'            reduce using rule 20
	'1'            reduce using rule 20
	'='            reduce using rule 20
	'><'           reduce using rule 20
	'CNOT'         reduce using rule 20
	'CR2'          reduce using rule 20
	'CR2D'         reduce using rule 20
	'CR3'          reduce using rule 20
	'CR3D'         reduce using rule 20
	'CR4'          reduce using rule 20
	'CR4D'         reduce using rule 20
	'CR5'          reduce using rule 20
	'CR5D'         reduce using rule 20
	'CR8'          reduce using rule 20
	'CR8D'         reduce using rule 20
	'CT'           reduce using rule 20
	'FREDKIN'      reduce using rule 20
	'H'            reduce using rule 20
	'I'            reduce using rule 20
	'QFT'          reduce using rule 20
	'QFTI'         reduce using rule 20
	'S'            reduce using rule 20
	'SWAP'         reduce using rule 20
	'T'            reduce using rule 20
	'TOFFOLI'      reduce using rule 20
	'X'            reduce using rule 20
	'Y'            reduce using rule 20
	'Z'            reduce using rule 20
	'else'         reduce using rule 20
	'in'           reduce using rule 20
	'then'         reduce using rule 20
	L_FunVar       reduce using rule 20
	L_Var          reduce using rule 20
	L_GateIdent    reduce using rule 20
	%eof           reduce using rule 20


State 58

	%start_pType1 -> Type1 .                            (rule 16)

	%eof           accept


State 59

	%start_pType2 -> Type2 .                            (rule 15)

	%eof           accept


State 60

	Arg -> Var .                                        (rule 49)

	'='            reduce using rule 49
	L_Var          reduce using rule 49
	%eof           reduce using rule 49


State 61

	ListArg -> Arg . ListArg                            (rule 51)

	'='            reduce using rule 50
	L_Var          shift, and enter state 57
	%eof           reduce using rule 50

	Var            goto state 60
	Arg            goto state 61
	ListArg        goto state 111

State 62

	%start_pListArg -> ListArg .                        (rule 14)

	%eof           accept


State 63

	%start_pArg -> Arg .                                (rule 13)

	%eof           accept


State 64

	Function -> Var . ListArg '=' Term                  (rule 48)

	'='            reduce using rule 50
	L_Var          shift, and enter state 57

	Var            goto state 60
	Arg            goto state 61
	ListArg        goto state 110

State 65

	%start_pFunction -> Function .                      (rule 12)

	'!'            shift, and enter state 49
	'('            shift, and enter state 50
	'Bit'          shift, and enter state 51
	'QBit'         shift, and enter state 52
	'T'            shift, and enter state 53

	Type2          goto state 46
	Type1          goto state 47
	Type           goto state 109

State 66

	FunDec -> FunVar . Type Function                    (rule 45)

	'!'            shift, and enter state 52
	'('            shift, and enter state 53
	'Bit'          shift, and enter state 54
	'QBit'         shift, and enter state 55
	'T'            shift, and enter state 56
	L_Var          shift, and enter state 57

	Var            goto state 48
	Type2          goto state 49
	Type1          goto state 50
	Type           goto state 109

State 67

	ListFunDec -> FunDec . ListFunDec                   (rule 47)

	L_FunVar       shift, and enter state 20
	%eof           reduce using rule 46

	FunVar         goto state 66
	FunDec         goto state 67
	ListFunDec     goto state 108

State 68

	%start_pListFunDec -> ListFunDec .                  (rule 11)

	')'            reduce using rule 54
	'-o'           reduce using rule 54
	'.'            reduce using rule 54
	'><'           reduce using rule 54
	L_Var          reduce using rule 54
	%eof           reduce using rule 54


State 69

	%start_pFunDec -> FunDec .                          (rule 10)

	%eof           accept


State 70

	%start_pBit -> Bit .                                (rule 9)

	%eof           accept


State 71

	Bit -> '0' .                                        (rule 43)

	'('            reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	','            reduce using rule 43
	'0'            reduce using rule 43
	'1'            reduce using rule 43
	'CNOT'         reduce using rule 43
	'CR2'          reduce using rule 43
	'CR2D'         reduce using rule 43
	'CR3'          reduce using rule 43
	'CR3D'         reduce using rule 43
	'CR4'          reduce using rule 43
	'CR4D'         reduce using rule 43
	'CR5'          reduce using rule 43
	'CR5D'         reduce using rule 43
	'CR8'          reduce using rule 43
	'CR8D'         reduce using rule 43
	'CT'           reduce using rule 43
	'FREDKIN'      reduce using rule 43
	'H'            reduce using rule 43
	'I'            reduce using rule 43
	'QFT'          reduce using rule 43
	'QFTI'         reduce using rule 43
	'S'            reduce using rule 43
	'SWAP'         reduce using rule 43
	'T'            reduce using rule 43
	'TOFFOLI'      reduce using rule 43
	'X'            reduce using rule 43
	'Y'            reduce using rule 43
	'Z'            reduce using rule 43
	'else'         reduce using rule 43
	'in'           reduce using rule 43
	'then'         reduce using rule 43
	L_FunVar       reduce using rule 43
	L_Var          reduce using rule 43
	L_GateIdent    reduce using rule 43
	%eof           reduce using rule 43


State 72

	Bit -> '1' .                                        (rule 44)

	'('            reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	','            reduce using rule 44
	'0'            reduce using rule 44
	'1'            reduce using rule 44
	'CNOT'         reduce using rule 44
	'CR2'          reduce using rule 44
	'CR2D'         reduce using rule 44
	'CR3'          reduce using rule 44
	'CR3D'         reduce using rule 44
	'CR4'          reduce using rule 44
	'CR4D'         reduce using rule 44
	'CR5'          reduce using rule 44
	'CR5D'         reduce using rule 44
	'CR8'          reduce using rule 44
	'CR8D'         reduce using rule 44
	'CT'           reduce using rule 44
	'FREDKIN'      reduce using rule 44
	'H'            reduce using rule 44
	'I'            reduce using rule 44
	'QFT'          reduce using rule 44
	'QFTI'         reduce using rule 44
	'S'            reduce using rule 44
	'SWAP'         reduce using rule 44
	'T'            reduce using rule 44
	'TOFFOLI'      reduce using rule 44
	'X'            reduce using rule 44
	'Y'            reduce using rule 44
	'Z'            reduce using rule 44
	'else'         reduce using rule 44
	'in'           reduce using rule 44
	'then'         reduce using rule 44
	L_FunVar       reduce using rule 44
	L_Var          reduce using rule 44
	L_GateIdent    reduce using rule 44
	%eof           reduce using rule 44


State 73

	Term3 -> Var .                                      (rule 24)

	'('            reduce using rule 24
	')'            reduce using rule 24
	'*'            reduce using rule 24
	','            reduce using rule 24
	'0'            reduce using rule 24
	'1'            reduce using rule 24
	'CNOT'         reduce using rule 24
	'CR2'          reduce using rule 24
	'CR2D'         reduce using rule 24
	'CR3'          reduce using rule 24
	'CR3D'         reduce using rule 24
	'CR4'          reduce using rule 24
	'CR4D'         reduce using rule 24
	'CR5'          reduce using rule 24
	'CR5D'         reduce using rule 24
	'CR8'          reduce using rule 24
	'CR8D'         reduce using rule 24
	'CT'           reduce using rule 24
	'FREDKIN'      reduce using rule 24
	'H'            reduce using rule 24
	'I'            reduce using rule 24
	'QFT'          reduce using rule 24
	'QFTI'         reduce using rule 24
	'S'            reduce using rule 24
	'SWAP'         reduce using rule 24
	'T'            reduce using rule 24
	'TOFFOLI'      reduce using rule 24
	'X'            reduce using rule 24
	'Y'            reduce using rule 24
	'Z'            reduce using rule 24
	'else'         reduce using rule 24
	'in'           reduce using rule 24
	'then'         reduce using rule 24
	L_FunVar       reduce using rule 24
	L_Var          reduce using rule 24
	L_GateIdent    reduce using rule 24
	%eof           reduce using rule 24


State 74

	Term1 -> Lambda . Var '.' Term                      (rule 34)

	L_Var          shift, and enter state 57

	Var            goto state 107

State 75

	Term2 -> Term3 .                                    (rule 31)

	'('            reduce using rule 31
	')'            reduce using rule 31
	'*'            reduce using rule 31
	','            reduce using rule 31
	'0'            reduce using rule 31
	'1'            reduce using rule 31
	'CNOT'         reduce using rule 31
	'CR2'          reduce using rule 31
	'CR2D'         reduce using rule 31
	'CR3'          reduce using rule 31
	'CR3D'         reduce using rule 31
	'CR4'          reduce using rule 31
	'CR4D'         reduce using rule 31
	'CR5'          reduce using rule 31
	'CR5D'         reduce using rule 31
	'CR8'          reduce using rule 31
	'CR8D'         reduce using rule 31
	'CT'           reduce using rule 31
	'FREDKIN'      reduce using rule 31
	'H'            reduce using rule 31
	'I'            reduce using rule 31
	'QFT'          reduce using rule 31
	'QFTI'         reduce using rule 31
	'S'            reduce using rule 31
	'SWAP'         reduce using rule 31
	'T'            reduce using rule 31
	'TOFFOLI'      reduce using rule 31
	'X'            reduce using rule 31
	'Y'            reduce using rule 31
	'Z'            reduce using rule 31
	'else'         reduce using rule 31
	'in'           reduce using rule 31
	'then'         reduce using rule 31
	L_FunVar       reduce using rule 31
	L_Var          reduce using rule 31
	L_GateIdent    reduce using rule 31
	%eof           reduce using rule 31


State 76

	Term2 -> Term2 . Term3                              (rule 30)
	Term1 -> Term2 .                                    (rule 35)

	'('            shift, and enter state 83
	')'            reduce using rule 35
	'*'            shift, and enter state 84
	','            reduce using rule 35
	'0'            shift, and enter state 71
	'1'            shift, and enter state 72
	'CNOT'         shift, and enter state 23
	'CR2'          shift, and enter state 24
	'CR2D'         shift, and enter state 25
	'CR3'          shift, and enter state 26
	'CR3D'         shift, and enter state 27
	'CR4'          shift, and enter state 28
	'CR4D'         shift, and enter state 29
	'CR5'          shift, and enter state 30
	'CR5D'         shift, and enter state 31
	'CR8'          shift, and enter state 32
	'CR8D'         shift, and enter state 33
	'CT'           shift, and enter state 34
	'FREDKIN'      shift, and enter state 35
	'H'            shift, and enter state 36
	'I'            shift, and enter state 37
	'QFT'          shift, and enter state 38
	'QFTI'         shift, and enter state 39
	'S'            shift, and enter state 40
	'SWAP'         shift, and enter state 41
	'T'            shift, and enter state 42
	'TOFFOLI'      shift, and enter state 43
	'X'            shift, and enter state 44
	'Y'            shift, and enter state 45
	'Z'            shift, and enter state 46
	'else'         reduce using rule 35
	'in'           reduce using rule 35
	L_FunVar       reduce using rule 35
	L_Var          shift, and enter state 57
	L_GateIdent    shift, and enter state 47
	%eof           reduce using rule 35

	Var            goto state 73
	GateIdent      goto state 21
	Term3          goto state 100
	Tup            goto state 79
	Bit            goto state 81
	Gate           goto state 82

State 77

	Term -> Term1 .                                     (rule 36)

	')'            reduce using rule 36
	','            reduce using rule 36
	'else'         reduce using rule 36
	'in'           reduce using rule 36
	L_FunVar       reduce using rule 36
	%eof           reduce using rule 36


State 78

	ListTerm -> Term .                                  (rule 41)
	ListTerm -> Term . ',' ListTerm                     (rule 42)

	')'            reduce using rule 41
	','            shift, and enter state 106
	%eof           reduce using rule 41


State 79

	Term3 -> Tup .                                      (rule 27)

	'('            reduce using rule 27
	')'            reduce using rule 27
	'*'            reduce using rule 27
	','            reduce using rule 27
	'0'            reduce using rule 27
	'1'            reduce using rule 27
	'CNOT'         reduce using rule 27
	'CR2'          reduce using rule 27
	'CR2D'         reduce using rule 27
	'CR3'          reduce using rule 27
	'CR3D'         reduce using rule 27
	'CR4'          reduce using rule 27
	'CR4D'         reduce using rule 27
	'CR5'          reduce using rule 27
	'CR5D'         reduce using rule 27
	'CR8'          reduce using rule 27
	'CR8D'         reduce using rule 27
	'CT'           reduce using rule 27
	'FREDKIN'      reduce using rule 27
	'H'            reduce using rule 27
	'I'            reduce using rule 27
	'QFT'          reduce using rule 27
	'QFTI'         reduce using rule 27
	'S'            reduce using rule 27
	'SWAP'         reduce using rule 27
	'T'            reduce using rule 27
	'TOFFOLI'      reduce using rule 27
	'X'            reduce using rule 27
	'Y'            reduce using rule 27
	'Z'            reduce using rule 27
	'else'         reduce using rule 27
	'in'           reduce using rule 27
	'then'         reduce using rule 27
	L_FunVar       reduce using rule 27
	L_Var          reduce using rule 27
	L_GateIdent    reduce using rule 27
	%eof           reduce using rule 27


State 80

	%start_pListTerm -> ListTerm .                      (rule 8)

	%eof           accept


State 81

	Term3 -> Bit .                                      (rule 25)

	'('            reduce using rule 25
	')'            reduce using rule 25
	'*'            reduce using rule 25
	','            reduce using rule 25
	'0'            reduce using rule 25
	'1'            reduce using rule 25
	'CNOT'         reduce using rule 25
	'CR2'          reduce using rule 25
	'CR2D'         reduce using rule 25
	'CR3'          reduce using rule 25
	'CR3D'         reduce using rule 25
	'CR4'          reduce using rule 25
	'CR4D'         reduce using rule 25
	'CR5'          reduce using rule 25
	'CR5D'         reduce using rule 25
	'CR8'          reduce using rule 25
	'CR8D'         reduce using rule 25
	'CT'           reduce using rule 25
	'FREDKIN'      reduce using rule 25
	'H'            reduce using rule 25
	'I'            reduce using rule 25
	'QFT'          reduce using rule 25
	'QFTI'         reduce using rule 25
	'S'            reduce using rule 25
	'SWAP'         reduce using rule 25
	'T'            reduce using rule 25
	'TOFFOLI'      reduce using rule 25
	'X'            reduce using rule 25
	'Y'            reduce using rule 25
	'Z'            reduce using rule 25
	'else'         reduce using rule 25
	'in'           reduce using rule 25
	'then'         reduce using rule 25
	L_FunVar       reduce using rule 25
	L_Var          reduce using rule 25
	L_GateIdent    reduce using rule 25
	%eof           reduce using rule 25


State 82

	Term3 -> Gate .                                     (rule 26)

	'('            reduce using rule 26
	')'            reduce using rule 26
	'*'            reduce using rule 26
	','            reduce using rule 26
	'0'            reduce using rule 26
	'1'            reduce using rule 26
	'CNOT'         reduce using rule 26
	'CR2'          reduce using rule 26
	'CR2D'         reduce using rule 26
	'CR3'          reduce using rule 26
	'CR3D'         reduce using rule 26
	'CR4'          reduce using rule 26
	'CR4D'         reduce using rule 26
	'CR5'          reduce using rule 26
	'CR5D'         reduce using rule 26
	'CR8'          reduce using rule 26
	'CR8D'         reduce using rule 26
	'CT'           reduce using rule 26
	'FREDKIN'      reduce using rule 26
	'H'            reduce using rule 26
	'I'            reduce using rule 26
	'QFT'          reduce using rule 26
	'QFTI'         reduce using rule 26
	'S'            reduce using rule 26
	'SWAP'         reduce using rule 26
	'T'            reduce using rule 26
	'TOFFOLI'      reduce using rule 26
	'X'            reduce using rule 26
	'Y'            reduce using rule 26
	'Z'            reduce using rule 26
	'else'         reduce using rule 26
	'in'           reduce using rule 26
	'then'         reduce using rule 26
	L_FunVar       reduce using rule 26
	L_Var          reduce using rule 26
	L_GateIdent    reduce using rule 26
	%eof           reduce using rule 26


State 83

	Term3 -> '(' . Term ')'                             (rule 29)
	Tup -> '(' . Term ',' ListTerm ')'                  (rule 40)

	'('            shift, and enter state 83
	'*'            shift, and enter state 84
	'0'            shift, and enter state 71
	'1'            shift, and enter state 72
	'CNOT'         shift, and enter state 23
	'CR2'          shift, and enter state 24
	'CR2D'         shift, and enter state 25
	'CR3'          shift, and enter state 26
	'CR3D'         shift, and enter state 27
	'CR4'          shift, and enter state 28
	'CR4D'         shift, and enter state 29
	'CR5'          shift, and enter state 30
	'CR5D'         shift, and enter state 31
	'CR8'          shift, and enter state 32
	'CR8D'         shift, and enter state 33
	'CT'           shift, and enter state 34
	'FREDKIN'      shift, and enter state 35
	'H'            shift, and enter state 36
	'I'            shift, and enter state 37
	'QFT'          shift, and enter state 38
	'QFTI'         shift, and enter state 39
	'S'            shift, and enter state 40
	'SWAP'         shift, and enter state 41
	'T'            shift, and enter state 42
	'TOFFOLI'      shift, and enter state 43
	'X'            shift, and enter state 44
	'Y'            shift, and enter state 45
	'Z'            shift, and enter state 46
	'if'           shift, and enter state 85
	'let'          shift, and enter state 86
	L_Var          shift, and enter state 57
	L_GateIdent    shift, and enter state 47
	L_Lambda       shift, and enter state 87

	Var            goto state 73
	GateIdent      goto state 21
	Lambda         goto state 74
	Term3          goto state 75
	Term2          goto state 76
	Term1          goto state 77
	Term           goto state 105
	Tup            goto state 79
	Bit            goto state 81
	Gate           goto state 82

State 84

	Term3 -> '*' .                                      (rule 28)

	'('            reduce using rule 28
	')'            reduce using rule 28
	'*'            reduce using rule 28
	','            reduce using rule 28
	'0'            reduce using rule 28
	'1'            reduce using rule 28
	'CNOT'         reduce using rule 28
	'CR2'          reduce using rule 28
	'CR2D'         reduce using rule 28
	'CR3'          reduce using rule 28
	'CR3D'         reduce using rule 28
	'CR4'          reduce using rule 28
	'CR4D'         reduce using rule 28
	'CR5'          reduce using rule 28
	'CR5D'         reduce using rule 28
	'CR8'          reduce using rule 28
	'CR8D'         reduce using rule 28
	'CT'           reduce using rule 28
	'FREDKIN'      reduce using rule 28
	'H'            reduce using rule 28
	'I'            reduce using rule 28
	'QFT'          reduce using rule 28
	'QFTI'         reduce using rule 28
	'S'            reduce using rule 28
	'SWAP'         reduce using rule 28
	'T'            reduce using rule 28
	'TOFFOLI'      reduce using rule 28
	'X'            reduce using rule 28
	'Y'            reduce using rule 28
	'Z'            reduce using rule 28
	'else'         reduce using rule 28
	'in'           reduce using rule 28
	'then'         reduce using rule 28
	L_FunVar       reduce using rule 28
	L_Var          reduce using rule 28
	L_GateIdent    reduce using rule 28
	%eof           reduce using rule 28


State 85

	Term1 -> 'if' . Term2 'then' Term 'else' Term       (rule 32)

	'('            shift, and enter state 83
	'*'            shift, and enter state 84
	'0'            shift, and enter state 71
	'1'            shift, and enter state 72
	'CNOT'         shift, and enter state 23
	'CR2'          shift, and enter state 24
	'CR2D'         shift, and enter state 25
	'CR3'          shift, and enter state 26
	'CR3D'         shift, and enter state 27
	'CR4'          shift, and enter state 28
	'CR4D'         shift, and enter state 29
	'CR5'          shift, and enter state 30
	'CR5D'         shift, and enter state 31
	'CR8'          shift, and enter state 32
	'CR8D'         shift, and enter state 33
	'CT'           shift, and enter state 34
	'FREDKIN'      shift, and enter state 35
	'H'            shift, and enter state 36
	'I'            shift, and enter state 37
	'QFT'          shift, and enter state 38
	'QFTI'         shift, and enter state 39
	'S'            shift, and enter state 40
	'SWAP'         shift, and enter state 41
	'T'            shift, and enter state 42
	'TOFFOLI'      shift, and enter state 43
	'X'            shift, and enter state 44
	'Y'            shift, and enter state 45
	'Z'            shift, and enter state 46
	L_Var          shift, and enter state 57
	L_GateIdent    shift, and enter state 47

	Var            goto state 73
	GateIdent      goto state 21
	Term3          goto state 75
	Term2          goto state 104
	Tup            goto state 79
	Bit            goto state 81
	Gate           goto state 82

State 86

	Term1 -> 'let' . '(' LetVar ',' ListLetVar ')' '=' Term 'in' Term    (rule 33)

	'('            shift, and enter state 103


State 87

	Lambda -> L_Lambda .                                (rule 22)

	L_Var          reduce using rule 22


State 88

	%start_pTup -> Tup .                                (rule 7)

	%eof           accept


State 89

	Tup -> '(' . Term ',' ListTerm ')'                  (rule 40)

	'('            shift, and enter state 83
	'*'            shift, and enter state 84
	'0'            shift, and enter state 71
	'1'            shift, and enter state 72
	'CNOT'         shift, and enter state 23
	'CR2'          shift, and enter state 24
	'CR2D'         shift, and enter state 25
	'CR3'          shift, and enter state 26
	'CR3D'         shift, and enter state 27
	'CR4'          shift, and enter state 28
	'CR4D'         shift, and enter state 29
	'CR5'          shift, and enter state 30
	'CR5D'         shift, and enter state 31
	'CR8'          shift, and enter state 32
	'CR8D'         shift, and enter state 33
	'CT'           shift, and enter state 34
	'FREDKIN'      shift, and enter state 35
	'H'            shift, and enter state 36
	'I'            shift, and enter state 37
	'QFT'          shift, and enter state 38
	'QFTI'         shift, and enter state 39
	'S'            shift, and enter state 40
	'SWAP'         shift, and enter state 41
	'T'            shift, and enter state 42
	'TOFFOLI'      shift, and enter state 43
	'X'            shift, and enter state 44
	'Y'            shift, and enter state 45
	'Z'            shift, and enter state 46
	'if'           shift, and enter state 85
	'let'          shift, and enter state 86
	L_Var          shift, and enter state 57
	L_GateIdent    shift, and enter state 47
	L_Lambda       shift, and enter state 87

	Var            goto state 73
	GateIdent      goto state 21
	Lambda         goto state 74
	Term3          goto state 75
	Term2          goto state 76
	Term1          goto state 77
	Term           goto state 102
	Tup            goto state 79
	Bit            goto state 81
	Gate           goto state 82

State 90

	LetVar -> Var .                                     (rule 37)

	')'            reduce using rule 37
	','            reduce using rule 37
	%eof           reduce using rule 37


State 91

	ListLetVar -> LetVar .                              (rule 38)
	ListLetVar -> LetVar . ',' ListLetVar               (rule 39)

	')'            reduce using rule 38
	','            shift, and enter state 101
	%eof           reduce using rule 38


State 92

	%start_pListLetVar -> ListLetVar .                  (rule 6)

	%eof           accept


State 93

	%start_pLetVar -> LetVar .                          (rule 5)

	%eof           accept

	Var            goto state 70
	GateIdent      goto state 21
	Term3          goto state 97
	Tup            goto state 76
	Bit            goto state 78
	Gate           goto state 79

State 94

	%start_pTerm -> Term .                              (rule 4)

	%eof           accept


State 95

	%start_pTerm1 -> Term1 .                            (rule 3)

	%eof           accept


State 96

	%start_pTerm2 -> Term2 .                            (rule 2)
	Term2 -> Term2 . Term3                              (rule 30)

	'('            shift, and enter state 83
	'*'            shift, and enter state 84
	'0'            shift, and enter state 71
	'1'            shift, and enter state 72
	'CNOT'         shift, and enter state 23
	'CR2'          shift, and enter state 24
	'CR2D'         shift, and enter state 25
	'CR3'          shift, and enter state 26
	'CR3D'         shift, and enter state 27
	'CR4'          shift, and enter state 28
	'CR4D'         shift, and enter state 29
	'CR5'          shift, and enter state 30
	'CR5D'         shift, and enter state 31
	'CR8'          shift, and enter state 32
	'CR8D'         shift, and enter state 33
	'CT'           shift, and enter state 34
	'FREDKIN'      shift, and enter state 35
	'H'            shift, and enter state 36
	'I'            shift, and enter state 37
	'QFT'          shift, and enter state 38
	'QFTI'         shift, and enter state 39
	'S'            shift, and enter state 40
	'SWAP'         shift, and enter state 41
	'T'            shift, and enter state 42
	'TOFFOLI'      shift, and enter state 43
	'X'            shift, and enter state 44
	'Y'            shift, and enter state 45
	'Z'            shift, and enter state 46
	L_Var          shift, and enter state 57
	L_GateIdent    shift, and enter state 47
	%eof           accept

	Var            goto state 73
	GateIdent      goto state 21
	Term3          goto state 100
	Tup            goto state 79
	Bit            goto state 81
	Gate           goto state 82

State 97

	%start_pTerm3 -> Term3 .                            (rule 1)

	%eof           accept


State 98

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept

	Var            goto state 87
	LetVar         goto state 88
	ListLetVar     goto state 124

State 99

	Program -> ListFunDec .                             (rule 23)

	%eof           reduce using rule 23


State 100

	Term2 -> Term2 Term3 .                              (rule 30)

	'('            reduce using rule 30
	')'            reduce using rule 30
	'*'            reduce using rule 30
	','            reduce using rule 30
	'0'            reduce using rule 30
	'1'            reduce using rule 30
	'CNOT'         reduce using rule 30
	'CR2'          reduce using rule 30
	'CR2D'         reduce using rule 30
	'CR3'          reduce using rule 30
	'CR3D'         reduce using rule 30
	'CR4'          reduce using rule 30
	'CR4D'         reduce using rule 30
	'CR5'          reduce using rule 30
	'CR5D'         reduce using rule 30
	'CR8'          reduce using rule 30
	'CR8D'         reduce using rule 30
	'CT'           reduce using rule 30
	'FREDKIN'      reduce using rule 30
	'H'            reduce using rule 30
	'I'            reduce using rule 30
	'QFT'          reduce using rule 30
	'QFTI'         reduce using rule 30
	'S'            reduce using rule 30
	'SWAP'         reduce using rule 30
	'T'            reduce using rule 30
	'TOFFOLI'      reduce using rule 30
	'X'            reduce using rule 30
	'Y'            reduce using rule 30
	'Z'            reduce using rule 30
	'else'         reduce using rule 30
	'in'           reduce using rule 30
	'then'         reduce using rule 30
	L_FunVar       reduce using rule 30
	L_Var          reduce using rule 30
	L_GateIdent    reduce using rule 30
	%eof           reduce using rule 30

	Var            goto state 87
	LetVar         goto state 123

State 101

	ListLetVar -> LetVar ',' . ListLetVar               (rule 39)

	L_Var          shift, and enter state 57

	Var            goto state 90
	LetVar         goto state 91
	ListLetVar     goto state 127

State 102

	Tup -> '(' Term . ',' ListTerm ')'                  (rule 40)

	','            shift, and enter state 124


State 103

	Term1 -> 'let' '(' . LetVar ',' ListLetVar ')' '=' Term 'in' Term    (rule 33)

	L_Var          shift, and enter state 57

	Var            goto state 90
	LetVar         goto state 126

	'!'            shift, and enter state 49
	'('            shift, and enter state 50
	'Bit'          shift, and enter state 51
	'QBit'         shift, and enter state 52
	'T'            shift, and enter state 53

	Term2 -> Term2 . Term3                              (rule 30)
	Term1 -> 'if' Term2 . 'then' Term 'else' Term       (rule 32)

	'('            shift, and enter state 83
	'*'            shift, and enter state 84
	'0'            shift, and enter state 71
	'1'            shift, and enter state 72
	'CNOT'         shift, and enter state 23
	'CR2'          shift, and enter state 24
	'CR2D'         shift, and enter state 25
	'CR3'          shift, and enter state 26
	'CR3D'         shift, and enter state 27
	'CR4'          shift, and enter state 28
	'CR4D'         shift, and enter state 29
	'CR5'          shift, and enter state 30
	'CR5D'         shift, and enter state 31
	'CR8'          shift, and enter state 32
	'CR8D'         shift, and enter state 33
	'CT'           shift, and enter state 34
	'FREDKIN'      shift, and enter state 35
	'H'            shift, and enter state 36
	'I'            shift, and enter state 37
	'QFT'          shift, and enter state 38
	'QFTI'         shift, and enter state 39
	'S'            shift, and enter state 40
	'SWAP'         shift, and enter state 41
	'T'            shift, and enter state 42
	'TOFFOLI'      shift, and enter state 43
	'X'            shift, and enter state 44
	'Y'            shift, and enter state 45
	'Z'            shift, and enter state 46
	'then'         shift, and enter state 125
	L_Var          shift, and enter state 57
	L_GateIdent    shift, and enter state 47

	Var            goto state 73
	GateIdent      goto state 21
	Term3          goto state 100
	Tup            goto state 79
	Bit            goto state 81
	Gate           goto state 82

State 105

	Term3 -> '(' Term . ')'                             (rule 29)
	Tup -> '(' Term . ',' ListTerm ')'                  (rule 40)

	')'            shift, and enter state 123
	','            shift, and enter state 124


State 106

	ListTerm -> Term ',' . ListTerm                     (rule 42)

	'('            shift, and enter state 83
	'*'            shift, and enter state 84
	'0'            shift, and enter state 71
	'1'            shift, and enter state 72
	'CNOT'         shift, and enter state 23
	'CR2'          shift, and enter state 24
	'CR2D'         shift, and enter state 25
	'CR3'          shift, and enter state 26
	'CR3D'         shift, and enter state 27
	'CR4'          shift, and enter state 28
	'CR4D'         shift, and enter state 29
	'CR5'          shift, and enter state 30
	'CR5D'         shift, and enter state 31
	'CR8'          shift, and enter state 32
	'CR8D'         shift, and enter state 33
	'CT'           shift, and enter state 34
	'FREDKIN'      shift, and enter state 35
	'H'            shift, and enter state 36
	'I'            shift, and enter state 37
	'QFT'          shift, and enter state 38
	'QFTI'         shift, and enter state 39
	'S'            shift, and enter state 40
	'SWAP'         shift, and enter state 41
	'T'            shift, and enter state 42
	'TOFFOLI'      shift, and enter state 43
	'X'            shift, and enter state 44
	'Y'            shift, and enter state 45
	'Z'            shift, and enter state 46
	'if'           shift, and enter state 85
	'let'          shift, and enter state 86
	L_Var          shift, and enter state 57
	L_GateIdent    shift, and enter state 47
	L_Lambda       shift, and enter state 87

	Var            goto state 73
	GateIdent      goto state 21
	Lambda         goto state 74
	Term3          goto state 75
	Term2          goto state 76
	Term1          goto state 77
	Term           goto state 78
	Tup            goto state 79
	ListTerm       goto state 122
	Bit            goto state 81
	Gate           goto state 82

State 107

	Term1 -> Lambda Var . '.' Term                      (rule 34)

	'.'            shift, and enter state 121


State 108

	ListFunDec -> FunDec ListFunDec .                   (rule 47)

	%eof           reduce using rule 47


State 109

	FunDec -> FunVar Type . Function                    (rule 45)

	L_Var          shift, and enter state 57

	Var            goto state 64
	Function       goto state 120

State 110

	Function -> Var ListArg . '=' Term                  (rule 48)

	'='            shift, and enter state 119


State 111

	ListArg -> Arg ListArg .                            (rule 51)

	'='            reduce using rule 51
	%eof           reduce using rule 51

	Type2          goto state 46
	Type1          goto state 114

State 112

	Type2 -> '(' Type . ')'                             (rule 57)

	')'            shift, and enter state 118

	Type2          goto state 46
	Type1          goto state 113

State 113

	Type2 -> '!' Type2 .                                (rule 56)

	')'            reduce using rule 56
	'-o'           reduce using rule 56
	'><'           reduce using rule 56
	L_Var          reduce using rule 56
	%eof           reduce using rule 56


State 114

	Type1 -> Type2 '-o' . Type1                         (rule 59)

	'!'            shift, and enter state 52
	'('            shift, and enter state 53
	'Bit'          shift, and enter state 54
	'QBit'         shift, and enter state 55
	'T'            shift, and enter state 56
	L_Var          shift, and enter state 57

	Var            goto state 48
	Type2          goto state 49
	Type1          goto state 117

State 115

	Type1 -> Type2 '><' . Type1                         (rule 58)

	'!'            shift, and enter state 52
	'('            shift, and enter state 53
	'Bit'          shift, and enter state 54
	'QBit'         shift, and enter state 55
	'T'            shift, and enter state 56
	L_Var          shift, and enter state 57

	Var            goto state 48
	Type2          goto state 49
	Type1          goto state 116

State 116

	Type1 -> Type2 '><' Type1 .                         (rule 58)

	')'            reduce using rule 58
	L_Var          reduce using rule 58
	%eof           reduce using rule 58

	FunDec -> FunVar Type Function .                    (rule 45)

	L_FunVar       reduce using rule 45
	%eof           reduce using rule 45

	Type1 -> Type2 '-o' Type1 .                         (rule 59)

	')'            reduce using rule 59
	L_Var          reduce using rule 59
	%eof           reduce using rule 59


State 118

	Type2 -> '(' Type ')' .                             (rule 57)

	')'            reduce using rule 57
	'-o'           reduce using rule 57
	'><'           reduce using rule 57
	L_Var          reduce using rule 57
	%eof           reduce using rule 57


State 119

	Function -> Var ListArg '=' . Term                  (rule 48)

	'('            shift, and enter state 83
	'*'            shift, and enter state 84
	'0'            shift, and enter state 71
	'1'            shift, and enter state 72
	'CNOT'         shift, and enter state 23
	'CR2'          shift, and enter state 24
	'CR2D'         shift, and enter state 25
	'CR3'          shift, and enter state 26
	'CR3D'         shift, and enter state 27
	'CR4'          shift, and enter state 28
	'CR4D'         shift, and enter state 29
	'CR5'          shift, and enter state 30
	'CR5D'         shift, and enter state 31
	'CR8'          shift, and enter state 32
	'CR8D'         shift, and enter state 33
	'CT'           shift, and enter state 34
	'FREDKIN'      shift, and enter state 35
	'H'            shift, and enter state 36
	'I'            shift, and enter state 37
	'QFT'          shift, and enter state 38
	'QFTI'         shift, and enter state 39
	'S'            shift, and enter state 40
	'SWAP'         shift, and enter state 41
	'T'            shift, and enter state 42
	'TOFFOLI'      shift, and enter state 43
	'X'            shift, and enter state 44
	'Y'            shift, and enter state 45
	'Z'            shift, and enter state 46
	'if'           shift, and enter state 85
	'let'          shift, and enter state 86
	L_Var          shift, and enter state 57
	L_GateIdent    shift, and enter state 47
	L_Lambda       shift, and enter state 87

	Var            goto state 73
	GateIdent      goto state 21
	Lambda         goto state 74
	Term3          goto state 75
	Term2          goto state 76
	Term1          goto state 77
	Term           goto state 132
	Tup            goto state 79
	Bit            goto state 81
	Gate           goto state 82

State 120

	FunDec -> FunVar Type Function .                    (rule 45)

	L_FunVar       reduce using rule 45
	%eof           reduce using rule 45


State 121

	Term1 -> Lambda Var '.' . Term                      (rule 34)

	'('            shift, and enter state 83
	'*'            shift, and enter state 84
	'0'            shift, and enter state 71
	'1'            shift, and enter state 72
	'CNOT'         shift, and enter state 23
	'CR2'          shift, and enter state 24
	'CR2D'         shift, and enter state 25
	'CR3'          shift, and enter state 26
	'CR3D'         shift, and enter state 27
	'CR4'          shift, and enter state 28
	'CR4D'         shift, and enter state 29
	'CR5'          shift, and enter state 30
	'CR5D'         shift, and enter state 31
	'CR8'          shift, and enter state 32
	'CR8D'         shift, and enter state 33
	'CT'           shift, and enter state 34
	'FREDKIN'      shift, and enter state 35
	'H'            shift, and enter state 36
	'I'            shift, and enter state 37
	'QFT'          shift, and enter state 38
	'QFTI'         shift, and enter state 39
	'S'            shift, and enter state 40
	'SWAP'         shift, and enter state 41
	'T'            shift, and enter state 42
	'TOFFOLI'      shift, and enter state 43
	'X'            shift, and enter state 44
	'Y'            shift, and enter state 45
	'Z'            shift, and enter state 46
	'if'           shift, and enter state 85
	'let'          shift, and enter state 86
	L_Var          shift, and enter state 57
	L_GateIdent    shift, and enter state 47
	L_Lambda       shift, and enter state 87

	Var            goto state 73
	GateIdent      goto state 21
	Lambda         goto state 74
	Term3          goto state 75
	Term2          goto state 76
	Term1          goto state 77
	Term           goto state 131
	Tup            goto state 79
	Bit            goto state 81
	Gate           goto state 82

State 122

	ListTerm -> Term ',' ListTerm .                     (rule 42)

	')'            reduce using rule 42
	%eof           reduce using rule 42


State 123

	Term3 -> '(' Term ')' .                             (rule 29)

	'('            reduce using rule 29
	')'            reduce using rule 29
	'*'            reduce using rule 29
	','            reduce using rule 29
	'0'            reduce using rule 29
	'1'            reduce using rule 29
	'CNOT'         reduce using rule 29
	'CR2'          reduce using rule 29
	'CR2D'         reduce using rule 29
	'CR3'          reduce using rule 29
	'CR3D'         reduce using rule 29
	'CR4'          reduce using rule 29
	'CR4D'         reduce using rule 29
	'CR5'          reduce using rule 29
	'CR5D'         reduce using rule 29
	'CR8'          reduce using rule 29
	'CR8D'         reduce using rule 29
	'CT'           reduce using rule 29
	'FREDKIN'      reduce using rule 29
	'H'            reduce using rule 29
	'I'            reduce using rule 29
	'QFT'          reduce using rule 29
	'QFTI'         reduce using rule 29
	'S'            reduce using rule 29
	'SWAP'         reduce using rule 29
	'T'            reduce using rule 29
	'TOFFOLI'      reduce using rule 29
	'X'            reduce using rule 29
	'Y'            reduce using rule 29
	'Z'            reduce using rule 29
	'else'         reduce using rule 29
	'in'           reduce using rule 29
	'then'         reduce using rule 29
	L_FunVar       reduce using rule 29
	L_Var          reduce using rule 29
	L_GateIdent    reduce using rule 29
	%eof           reduce using rule 29


State 124

	Tup -> '(' Term ',' . ListTerm ')'                  (rule 40)

	'('            shift, and enter state 83
	'*'            shift, and enter state 84
	'0'            shift, and enter state 71
	'1'            shift, and enter state 72
	'CNOT'         shift, and enter state 23
	'CR2'          shift, and enter state 24
	'CR2D'         shift, and enter state 25
	'CR3'          shift, and enter state 26
	'CR3D'         shift, and enter state 27
	'CR4'          shift, and enter state 28
	'CR4D'         shift, and enter state 29
	'CR5'          shift, and enter state 30
	'CR5D'         shift, and enter state 31
	'CR8'          shift, and enter state 32
	'CR8D'         shift, and enter state 33
	'CT'           shift, and enter state 34
	'FREDKIN'      shift, and enter state 35
	'H'            shift, and enter state 36
	'I'            shift, and enter state 37
	'QFT'          shift, and enter state 38
	'QFTI'         shift, and enter state 39
	'S'            shift, and enter state 40
	'SWAP'         shift, and enter state 41
	'T'            shift, and enter state 42
	'TOFFOLI'      shift, and enter state 43
	'X'            shift, and enter state 44
	'Y'            shift, and enter state 45
	'Z'            shift, and enter state 46
	'if'           shift, and enter state 85
	'let'          shift, and enter state 86
	L_Var          shift, and enter state 57
	L_GateIdent    shift, and enter state 47
	L_Lambda       shift, and enter state 87

	Var            goto state 73
	GateIdent      goto state 21
	Lambda         goto state 74
	Term3          goto state 75
	Term2          goto state 76
	Term1          goto state 77
	Term           goto state 78
	Tup            goto state 79
	ListTerm       goto state 130
	Bit            goto state 81
	Gate           goto state 82

State 125

	Term1 -> 'if' Term2 'then' . Term 'else' Term       (rule 32)

	'('            shift, and enter state 83
	'*'            shift, and enter state 84
	'0'            shift, and enter state 71
	'1'            shift, and enter state 72
	'CNOT'         shift, and enter state 23
	'CR2'          shift, and enter state 24
	'CR2D'         shift, and enter state 25
	'CR3'          shift, and enter state 26
	'CR3D'         shift, and enter state 27
	'CR4'          shift, and enter state 28
	'CR4D'         shift, and enter state 29
	'CR5'          shift, and enter state 30
	'CR5D'         shift, and enter state 31
	'CR8'          shift, and enter state 32
	'CR8D'         shift, and enter state 33
	'CT'           shift, and enter state 34
	'FREDKIN'      shift, and enter state 35
	'H'            shift, and enter state 36
	'I'            shift, and enter state 37
	'QFT'          shift, and enter state 38
	'QFTI'         shift, and enter state 39
	'S'            shift, and enter state 40
	'SWAP'         shift, and enter state 41
	'T'            shift, and enter state 42
	'TOFFOLI'      shift, and enter state 43
	'X'            shift, and enter state 44
	'Y'            shift, and enter state 45
	'Z'            shift, and enter state 46
	'if'           shift, and enter state 85
	'let'          shift, and enter state 86
	L_Var          shift, and enter state 57
	L_GateIdent    shift, and enter state 47
	L_Lambda       shift, and enter state 87

	Var            goto state 73
	GateIdent      goto state 21
	Lambda         goto state 74
	Term3          goto state 75
	Term2          goto state 76
	Term1          goto state 77
	Term           goto state 129
	Tup            goto state 79
	Bit            goto state 81
	Gate           goto state 82

State 126

	Term1 -> 'let' '(' LetVar . ',' ListLetVar ')' '=' Term 'in' Term    (rule 33)

	','            shift, and enter state 128


State 127

	ListLetVar -> LetVar ',' ListLetVar .               (rule 39)

	')'            reduce using rule 39
	%eof           reduce using rule 39


State 128

	Term1 -> 'let' '(' LetVar ',' . ListLetVar ')' '=' Term 'in' Term    (rule 33)

	L_Var          shift, and enter state 57

	Var            goto state 90
	LetVar         goto state 91
	ListLetVar     goto state 135

State 129

	Term1 -> 'if' Term2 'then' Term . 'else' Term       (rule 32)

	'else'         shift, and enter state 134


State 130

	Tup -> '(' Term ',' ListTerm . ')'                  (rule 40)

	')'            shift, and enter state 133


State 131

	Term1 -> Lambda Var '.' Term .                      (rule 34)

	')'            reduce using rule 34
	','            reduce using rule 34
	'else'         reduce using rule 34
	'in'           reduce using rule 34
	L_FunVar       reduce using rule 34
	%eof           reduce using rule 34


State 132

	Function -> Var ListArg '=' Term .                  (rule 48)

	L_FunVar       reduce using rule 48
	%eof           reduce using rule 48


State 133

	Tup -> '(' Term ',' ListTerm ')' .                  (rule 40)

	'('            reduce using rule 40
	')'            reduce using rule 40
	'*'            reduce using rule 40
	','            reduce using rule 40
	'0'            reduce using rule 40
	'1'            reduce using rule 40
	'CNOT'         reduce using rule 40
	'CR2'          reduce using rule 40
	'CR2D'         reduce using rule 40
	'CR3'          reduce using rule 40
	'CR3D'         reduce using rule 40
	'CR4'          reduce using rule 40
	'CR4D'         reduce using rule 40
	'CR5'          reduce using rule 40
	'CR5D'         reduce using rule 40
	'CR8'          reduce using rule 40
	'CR8D'         reduce using rule 40
	'CT'           reduce using rule 40
	'FREDKIN'      reduce using rule 40
	'H'            reduce using rule 40
	'I'            reduce using rule 40
	'QFT'          reduce using rule 40
	'QFTI'         reduce using rule 40
	'S'            reduce using rule 40
	'SWAP'         reduce using rule 40
	'T'            reduce using rule 40
	'TOFFOLI'      reduce using rule 40
	'X'            reduce using rule 40
	'Y'            reduce using rule 40
	'Z'            reduce using rule 40
	'else'         reduce using rule 40
	'in'           reduce using rule 40
	'then'         reduce using rule 40
	L_FunVar       reduce using rule 40
	L_Var          reduce using rule 40
	L_GateIdent    reduce using rule 40
	%eof           reduce using rule 40


State 134

	Term1 -> 'if' Term2 'then' Term 'else' . Term       (rule 32)

	'('            shift, and enter state 83
	'*'            shift, and enter state 84
	'0'            shift, and enter state 71
	'1'            shift, and enter state 72
	'CNOT'         shift, and enter state 23
	'CR2'          shift, and enter state 24
	'CR2D'         shift, and enter state 25
	'CR3'          shift, and enter state 26
	'CR3D'         shift, and enter state 27
	'CR4'          shift, and enter state 28
	'CR4D'         shift, and enter state 29
	'CR5'          shift, and enter state 30
	'CR5D'         shift, and enter state 31
	'CR8'          shift, and enter state 32
	'CR8D'         shift, and enter state 33
	'CT'           shift, and enter state 34
	'FREDKIN'      shift, and enter state 35
	'H'            shift, and enter state 36
	'I'            shift, and enter state 37
	'QFT'          shift, and enter state 38
	'QFTI'         shift, and enter state 39
	'S'            shift, and enter state 40
	'SWAP'         shift, and enter state 41
	'T'            shift, and enter state 42
	'TOFFOLI'      shift, and enter state 43
	'X'            shift, and enter state 44
	'Y'            shift, and enter state 45
	'Z'            shift, and enter state 46
	'if'           shift, and enter state 85
	'let'          shift, and enter state 86
	L_Var          shift, and enter state 57
	L_GateIdent    shift, and enter state 47
	L_Lambda       shift, and enter state 87

	Var            goto state 73
	GateIdent      goto state 21
	Lambda         goto state 74
	Term3          goto state 75
	Term2          goto state 76
	Term1          goto state 77
	Term           goto state 137
	Tup            goto state 79
	Bit            goto state 81
	Gate           goto state 82

State 135

	Term1 -> 'let' '(' LetVar ',' ListLetVar . ')' '=' Term 'in' Term    (rule 33)

	')'            shift, and enter state 136


State 136

	Term1 -> 'let' '(' LetVar ',' ListLetVar ')' . '=' Term 'in' Term    (rule 33)

	'='            shift, and enter state 138


State 137

	Term1 -> 'if' Term2 'then' Term 'else' Term .       (rule 32)

	')'            reduce using rule 32
	','            reduce using rule 32
	'else'         reduce using rule 32
	'in'           reduce using rule 32
	L_FunVar       reduce using rule 32
	%eof           reduce using rule 32


State 138

	Term1 -> 'let' '(' LetVar ',' ListLetVar ')' '=' . Term 'in' Term    (rule 33)

	'('            shift, and enter state 83
	'*'            shift, and enter state 84
	'0'            shift, and enter state 71
	'1'            shift, and enter state 72
	'CNOT'         shift, and enter state 23
	'CR2'          shift, and enter state 24
	'CR2D'         shift, and enter state 25
	'CR3'          shift, and enter state 26
	'CR3D'         shift, and enter state 27
	'CR4'          shift, and enter state 28
	'CR4D'         shift, and enter state 29
	'CR5'          shift, and enter state 30
	'CR5D'         shift, and enter state 31
	'CR8'          shift, and enter state 32
	'CR8D'         shift, and enter state 33
	'CT'           shift, and enter state 34
	'FREDKIN'      shift, and enter state 35
	'H'            shift, and enter state 36
	'I'            shift, and enter state 37
	'QFT'          shift, and enter state 38
	'QFTI'         shift, and enter state 39
	'S'            shift, and enter state 40
	'SWAP'         shift, and enter state 41
	'T'            shift, and enter state 42
	'TOFFOLI'      shift, and enter state 43
	'X'            shift, and enter state 44
	'Y'            shift, and enter state 45
	'Z'            shift, and enter state 46
	'if'           shift, and enter state 85
	'let'          shift, and enter state 86
	L_Var          shift, and enter state 57
	L_GateIdent    shift, and enter state 47
	L_Lambda       shift, and enter state 87

	Var            goto state 73
	GateIdent      goto state 21
	Lambda         goto state 74
	Term3          goto state 75
	Term2          goto state 76
	Term1          goto state 77
	Term           goto state 139
	Tup            goto state 79
	Bit            goto state 81
	Gate           goto state 82

State 139

	Term1 -> 'let' '(' LetVar ',' ListLetVar ')' '=' Term . 'in' Term    (rule 33)

	'in'           shift, and enter state 140


State 140

	Term1 -> 'let' '(' LetVar ',' ListLetVar ')' '=' Term 'in' . Term    (rule 33)

	'('            shift, and enter state 83
	'*'            shift, and enter state 84
	'0'            shift, and enter state 71
	'1'            shift, and enter state 72
	'CNOT'         shift, and enter state 23
	'CR2'          shift, and enter state 24
	'CR2D'         shift, and enter state 25
	'CR3'          shift, and enter state 26
	'CR3D'         shift, and enter state 27
	'CR4'          shift, and enter state 28
	'CR4D'         shift, and enter state 29
	'CR5'          shift, and enter state 30
	'CR5D'         shift, and enter state 31
	'CR8'          shift, and enter state 32
	'CR8D'         shift, and enter state 33
	'CT'           shift, and enter state 34
	'FREDKIN'      shift, and enter state 35
	'H'            shift, and enter state 36
	'I'            shift, and enter state 37
	'QFT'          shift, and enter state 38
	'QFTI'         shift, and enter state 39
	'S'            shift, and enter state 40
	'SWAP'         shift, and enter state 41
	'T'            shift, and enter state 42
	'TOFFOLI'      shift, and enter state 43
	'X'            shift, and enter state 44
	'Y'            shift, and enter state 45
	'Z'            shift, and enter state 46
	'if'           shift, and enter state 85
	'let'          shift, and enter state 86
	L_Var          shift, and enter state 57
	L_GateIdent    shift, and enter state 47
	L_Lambda       shift, and enter state 87

	Var            goto state 73
	GateIdent      goto state 21
	Lambda         goto state 74
	Term3          goto state 75
	Term2          goto state 76
	Term1          goto state 77
	Term           goto state 141
	Tup            goto state 79
	Bit            goto state 81
	Gate           goto state 82

State 141

	Term1 -> 'let' '(' LetVar ',' ListLetVar ')' '=' Term 'in' Term .    (rule 33)

	')'            reduce using rule 33
	','            reduce using rule 33
	'else'         reduce using rule 33
	'in'           reduce using rule 33
	L_FunVar       reduce using rule 33
	%eof           reduce using rule 33


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 87
Number of terminals: 46
Number of non-terminals: 42
Number of states: 142
