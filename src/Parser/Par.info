-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from Parser/Par.y
-----------------------------------------------------------------------------

state 51 contains 4 shift/reduce conflicts.
state 67 contains 4 shift/reduce conflicts.
state 68 contains 4 shift/reduce conflicts.
state 81 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	%start_pTerm2 -> Term2                             (1)
	%start_pTerm1 -> Term1                             (2)
	%start_pTerm -> Term                               (3)
	%start_pBit -> Bit                                 (4)
	%start_pFunDec -> FunDec                           (5)
	%start_pListFunDec -> ListFunDec                   (6)
	%start_pFunction -> Function                       (7)
	%start_pArg -> Arg                                 (8)
	%start_pListArg -> ListArg                         (9)
	%start_pType -> Type                               (10)
	%start_pListType -> ListType                       (11)
	%start_pGate -> Gate                               (12)
	Variable -> L_Variable                             (13)
	GateIdent -> L_GateIdent                           (14)
	Lambda -> L_Lambda                                 (15)
	Program -> ListFunDec                              (16)
	Term2 -> Bit                                       (17)
	Term2 -> Variable                                  (18)
	Term2 -> '(' Term1 ',' Term1 ')'                   (19)
	Term2 -> '(' Term ')'                              (20)
	Term1 -> '*'                                       (21)
	Term1 -> 'measure' Term1                           (22)
	Term1 -> 'new' Term1                               (23)
	Term1 -> Term1 Term2                               (24)
	Term1 -> Lambda Variable '->' Term                 (25)
	Term1 -> 'if' Term 'then' Term 'else' Term         (26)
	Term1 -> Gate                                      (27)
	Term1 -> 'let' '(' Term ',' Term ')' '=' Term 'in' Term   (28)
	Term1 -> Term2                                     (29)
	Term -> Term1                                      (30)
	Bit -> '0'                                         (31)
	Bit -> '1'                                         (32)
	FunDec -> Variable ':' ListType Function           (33)
	ListFunDec ->                                      (34)
	ListFunDec -> FunDec ListFunDec                    (35)
	Function -> Variable ListArg '=' Term              (36)
	Arg -> Variable                                    (37)
	ListArg ->                                         (38)
	ListArg -> Arg ListArg                             (39)
	Type -> 'Bit'                                      (40)
	Type -> 'QBit'                                     (41)
	Type -> 'T'                                        (42)
	Type -> Type '><' Type                             (43)
	ListType ->                                        (44)
	ListType -> Type                                   (45)
	ListType -> Type '-o' ListType                     (46)
	Gate -> 'H'                                        (47)
	Gate -> 'X'                                        (48)
	Gate -> 'Y'                                        (49)
	Gate -> 'Z'                                        (50)
	Gate -> 'I'                                        (51)
	Gate -> 'S'                                        (52)
	Gate -> 'T'                                        (53)
	Gate -> 'CNOT'                                     (54)
	Gate -> 'TOFFOLI'                                  (55)
	Gate -> 'SWAP'                                     (56)
	Gate -> 'FREDKIN'                                  (57)
	Gate -> GateIdent                                  (58)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'('            { PT _ (TS _ 1) }
	')'            { PT _ (TS _ 2) }
	'*'            { PT _ (TS _ 3) }
	','            { PT _ (TS _ 4) }
	'->'           { PT _ (TS _ 5) }
	'-o'           { PT _ (TS _ 6) }
	'0'            { PT _ (TS _ 7) }
	'1'            { PT _ (TS _ 8) }
	':'            { PT _ (TS _ 9) }
	'='            { PT _ (TS _ 10) }
	'><'           { PT _ (TS _ 11) }
	'Bit'          { PT _ (TS _ 12) }
	'CNOT'         { PT _ (TS _ 13) }
	'FREDKIN'      { PT _ (TS _ 14) }
	'H'            { PT _ (TS _ 15) }
	'I'            { PT _ (TS _ 16) }
	'QBit'         { PT _ (TS _ 17) }
	'S'            { PT _ (TS _ 18) }
	'SWAP'         { PT _ (TS _ 19) }
	'T'            { PT _ (TS _ 20) }
	'TOFFOLI'      { PT _ (TS _ 21) }
	'X'            { PT _ (TS _ 22) }
	'Y'            { PT _ (TS _ 23) }
	'Z'            { PT _ (TS _ 24) }
	'else'         { PT _ (TS _ 25) }
	'if'           { PT _ (TS _ 26) }
	'in'           { PT _ (TS _ 27) }
	'let'          { PT _ (TS _ 28) }
	'measure'      { PT _ (TS _ 29) }
	'new'          { PT _ (TS _ 30) }
	'then'         { PT _ (TS _ 31) }
	L_Variable     { PT _ (T_Variable $$) }
	L_GateIdent    { PT _ (T_GateIdent $$) }
	L_Lambda       { PT _ (T_Lambda $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	%start_pTerm2   rule  1
	%start_pTerm1   rule  2
	%start_pTerm    rule  3
	%start_pBit     rule  4
	%start_pFunDec  rule  5
	%start_pListFunDec rule  6
	%start_pFunction rule  7
	%start_pArg     rule  8
	%start_pListArg rule  9
	%start_pType    rule  10
	%start_pListType rule  11
	%start_pGate    rule  12
	Variable        rule  13
	GateIdent       rule  14
	Lambda          rule  15
	Program         rule  16
	Term2           rules 17, 18, 19, 20
	Term1           rules 21, 22, 23, 24, 25, 26, 27, 28, 29
	Term            rule  30
	Bit             rules 31, 32
	FunDec          rule  33
	ListFunDec      rules 34, 35
	Function        rule  36
	Arg             rule  37
	ListArg         rules 38, 39
	Type            rules 40, 41, 42, 43
	ListType        rules 44, 45, 46
	Gate            rules 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram -> . Program                        (rule 0)

	L_Variable     shift, and enter state 14
	%eof           reduce using rule 34

	Variable       goto state 41
	Program        goto state 64
	FunDec         goto state 42
	ListFunDec     goto state 65

State 1

	%start_pTerm2 -> . Term2                            (rule 1)

	'('            shift, and enter state 55
	'0'            shift, and enter state 46
	'1'            shift, and enter state 47
	L_Variable     shift, and enter state 14

	Variable       goto state 48
	Term2          goto state 63
	Bit            goto state 53

State 2

	%start_pTerm1 -> . Term1                            (rule 2)

	'('            shift, and enter state 55
	'*'            shift, and enter state 56
	'0'            shift, and enter state 46
	'1'            shift, and enter state 47
	'CNOT'         shift, and enter state 17
	'FREDKIN'      shift, and enter state 18
	'H'            shift, and enter state 19
	'I'            shift, and enter state 20
	'S'            shift, and enter state 21
	'SWAP'         shift, and enter state 22
	'T'            shift, and enter state 23
	'TOFFOLI'      shift, and enter state 24
	'X'            shift, and enter state 25
	'Y'            shift, and enter state 26
	'Z'            shift, and enter state 27
	'if'           shift, and enter state 57
	'let'          shift, and enter state 58
	'measure'      shift, and enter state 59
	'new'          shift, and enter state 60
	L_Variable     shift, and enter state 14
	L_GateIdent    shift, and enter state 28
	L_Lambda       shift, and enter state 61

	Variable       goto state 48
	GateIdent      goto state 15
	Lambda         goto state 49
	Term2          goto state 50
	Term1          goto state 62
	Bit            goto state 53
	Gate           goto state 54

State 3

	%start_pTerm -> . Term                              (rule 3)

	'('            shift, and enter state 55
	'*'            shift, and enter state 56
	'0'            shift, and enter state 46
	'1'            shift, and enter state 47
	'CNOT'         shift, and enter state 17
	'FREDKIN'      shift, and enter state 18
	'H'            shift, and enter state 19
	'I'            shift, and enter state 20
	'S'            shift, and enter state 21
	'SWAP'         shift, and enter state 22
	'T'            shift, and enter state 23
	'TOFFOLI'      shift, and enter state 24
	'X'            shift, and enter state 25
	'Y'            shift, and enter state 26
	'Z'            shift, and enter state 27
	'if'           shift, and enter state 57
	'let'          shift, and enter state 58
	'measure'      shift, and enter state 59
	'new'          shift, and enter state 60
	L_Variable     shift, and enter state 14
	L_GateIdent    shift, and enter state 28
	L_Lambda       shift, and enter state 61

	Variable       goto state 48
	GateIdent      goto state 15
	Lambda         goto state 49
	Term2          goto state 50
	Term1          goto state 51
	Term           goto state 52
	Bit            goto state 53
	Gate           goto state 54

State 4

	%start_pBit -> . Bit                                (rule 4)

	'0'            shift, and enter state 46
	'1'            shift, and enter state 47

	Bit            goto state 45

State 5

	%start_pFunDec -> . FunDec                          (rule 5)

	L_Variable     shift, and enter state 14

	Variable       goto state 41
	FunDec         goto state 44

State 6

	%start_pListFunDec -> . ListFunDec                  (rule 6)

	L_Variable     shift, and enter state 14
	%eof           reduce using rule 34

	Variable       goto state 41
	FunDec         goto state 42
	ListFunDec     goto state 43

State 7

	%start_pFunction -> . Function                      (rule 7)

	L_Variable     shift, and enter state 14

	Variable       goto state 39
	Function       goto state 40

State 8

	%start_pArg -> . Arg                                (rule 8)

	L_Variable     shift, and enter state 14

	Variable       goto state 35
	Arg            goto state 38

State 9

	%start_pListArg -> . ListArg                        (rule 9)

	L_Variable     shift, and enter state 14
	%eof           reduce using rule 38

	Variable       goto state 35
	Arg            goto state 36
	ListArg        goto state 37

State 10

	%start_pType -> . Type                              (rule 10)

	'Bit'          shift, and enter state 31
	'QBit'         shift, and enter state 32
	'T'            shift, and enter state 33

	Type           goto state 34

State 11

	%start_pListType -> . ListType                      (rule 11)

	'Bit'          shift, and enter state 31
	'QBit'         shift, and enter state 32
	'T'            shift, and enter state 33
	%eof           reduce using rule 44

	Type           goto state 29
	ListType       goto state 30

State 12

	%start_pGate -> . Gate                              (rule 12)

	'CNOT'         shift, and enter state 17
	'FREDKIN'      shift, and enter state 18
	'H'            shift, and enter state 19
	'I'            shift, and enter state 20
	'S'            shift, and enter state 21
	'SWAP'         shift, and enter state 22
	'T'            shift, and enter state 23
	'TOFFOLI'      shift, and enter state 24
	'X'            shift, and enter state 25
	'Y'            shift, and enter state 26
	'Z'            shift, and enter state 27
	L_GateIdent    shift, and enter state 28

	GateIdent      goto state 15
	Gate           goto state 16

State 13

	Variable -> . L_Variable                            (rule 13)

	L_Variable     shift, and enter state 14


State 14

	Variable -> L_Variable .                            (rule 13)

	'('            reduce using rule 13
	')'            reduce using rule 13
	','            reduce using rule 13
	'->'           reduce using rule 13
	'0'            reduce using rule 13
	'1'            reduce using rule 13
	':'            reduce using rule 13
	'='            reduce using rule 13
	'else'         reduce using rule 13
	'in'           reduce using rule 13
	'then'         reduce using rule 13
	L_Variable     reduce using rule 13
	%eof           reduce using rule 13


State 15

	Gate -> GateIdent .                                 (rule 58)

	'('            reduce using rule 58
	')'            reduce using rule 58
	','            reduce using rule 58
	'0'            reduce using rule 58
	'1'            reduce using rule 58
	'else'         reduce using rule 58
	'in'           reduce using rule 58
	'then'         reduce using rule 58
	L_Variable     reduce using rule 58
	%eof           reduce using rule 58


State 16

	%start_pGate -> Gate .                              (rule 12)

	%eof           accept


State 17

	Gate -> 'CNOT' .                                    (rule 54)

	'('            reduce using rule 54
	')'            reduce using rule 54
	','            reduce using rule 54
	'0'            reduce using rule 54
	'1'            reduce using rule 54
	'else'         reduce using rule 54
	'in'           reduce using rule 54
	'then'         reduce using rule 54
	L_Variable     reduce using rule 54
	%eof           reduce using rule 54


State 18

	Gate -> 'FREDKIN' .                                 (rule 57)

	'('            reduce using rule 57
	')'            reduce using rule 57
	','            reduce using rule 57
	'0'            reduce using rule 57
	'1'            reduce using rule 57
	'else'         reduce using rule 57
	'in'           reduce using rule 57
	'then'         reduce using rule 57
	L_Variable     reduce using rule 57
	%eof           reduce using rule 57


State 19

	Gate -> 'H' .                                       (rule 47)

	'('            reduce using rule 47
	')'            reduce using rule 47
	','            reduce using rule 47
	'0'            reduce using rule 47
	'1'            reduce using rule 47
	'else'         reduce using rule 47
	'in'           reduce using rule 47
	'then'         reduce using rule 47
	L_Variable     reduce using rule 47
	%eof           reduce using rule 47


State 20

	Gate -> 'I' .                                       (rule 51)

	'('            reduce using rule 51
	')'            reduce using rule 51
	','            reduce using rule 51
	'0'            reduce using rule 51
	'1'            reduce using rule 51
	'else'         reduce using rule 51
	'in'           reduce using rule 51
	'then'         reduce using rule 51
	L_Variable     reduce using rule 51
	%eof           reduce using rule 51


State 21

	Gate -> 'S' .                                       (rule 52)

	'('            reduce using rule 52
	')'            reduce using rule 52
	','            reduce using rule 52
	'0'            reduce using rule 52
	'1'            reduce using rule 52
	'else'         reduce using rule 52
	'in'           reduce using rule 52
	'then'         reduce using rule 52
	L_Variable     reduce using rule 52
	%eof           reduce using rule 52


State 22

	Gate -> 'SWAP' .                                    (rule 56)

	'('            reduce using rule 56
	')'            reduce using rule 56
	','            reduce using rule 56
	'0'            reduce using rule 56
	'1'            reduce using rule 56
	'else'         reduce using rule 56
	'in'           reduce using rule 56
	'then'         reduce using rule 56
	L_Variable     reduce using rule 56
	%eof           reduce using rule 56


State 23

	Gate -> 'T' .                                       (rule 53)

	'('            reduce using rule 53
	')'            reduce using rule 53
	','            reduce using rule 53
	'0'            reduce using rule 53
	'1'            reduce using rule 53
	'else'         reduce using rule 53
	'in'           reduce using rule 53
	'then'         reduce using rule 53
	L_Variable     reduce using rule 53
	%eof           reduce using rule 53


State 24

	Gate -> 'TOFFOLI' .                                 (rule 55)

	'('            reduce using rule 55
	')'            reduce using rule 55
	','            reduce using rule 55
	'0'            reduce using rule 55
	'1'            reduce using rule 55
	'else'         reduce using rule 55
	'in'           reduce using rule 55
	'then'         reduce using rule 55
	L_Variable     reduce using rule 55
	%eof           reduce using rule 55


State 25

	Gate -> 'X' .                                       (rule 48)

	'('            reduce using rule 48
	')'            reduce using rule 48
	','            reduce using rule 48
	'0'            reduce using rule 48
	'1'            reduce using rule 48
	'else'         reduce using rule 48
	'in'           reduce using rule 48
	'then'         reduce using rule 48
	L_Variable     reduce using rule 48
	%eof           reduce using rule 48


State 26

	Gate -> 'Y' .                                       (rule 49)

	'('            reduce using rule 49
	')'            reduce using rule 49
	','            reduce using rule 49
	'0'            reduce using rule 49
	'1'            reduce using rule 49
	'else'         reduce using rule 49
	'in'           reduce using rule 49
	'then'         reduce using rule 49
	L_Variable     reduce using rule 49
	%eof           reduce using rule 49


State 27

	Gate -> 'Z' .                                       (rule 50)

	'('            reduce using rule 50
	')'            reduce using rule 50
	','            reduce using rule 50
	'0'            reduce using rule 50
	'1'            reduce using rule 50
	'else'         reduce using rule 50
	'in'           reduce using rule 50
	'then'         reduce using rule 50
	L_Variable     reduce using rule 50
	%eof           reduce using rule 50


State 28

	GateIdent -> L_GateIdent .                          (rule 14)

	'('            reduce using rule 14
	')'            reduce using rule 14
	','            reduce using rule 14
	'0'            reduce using rule 14
	'1'            reduce using rule 14
	'else'         reduce using rule 14
	'in'           reduce using rule 14
	'then'         reduce using rule 14
	L_Variable     reduce using rule 14
	%eof           reduce using rule 14


State 29

	Type -> Type . '><' Type                            (rule 43)
	ListType -> Type .                                  (rule 45)
	ListType -> Type . '-o' ListType                    (rule 46)

	'-o'           shift, and enter state 79
	'><'           shift, and enter state 78
	L_Variable     reduce using rule 45
	%eof           reduce using rule 45


State 30

	%start_pListType -> ListType .                      (rule 11)

	%eof           accept


State 31

	Type -> 'Bit' .                                     (rule 40)

	'-o'           reduce using rule 40
	'><'           reduce using rule 40
	L_Variable     reduce using rule 40
	%eof           reduce using rule 40


State 32

	Type -> 'QBit' .                                    (rule 41)

	'-o'           reduce using rule 41
	'><'           reduce using rule 41
	L_Variable     reduce using rule 41
	%eof           reduce using rule 41


State 33

	Type -> 'T' .                                       (rule 42)

	'-o'           reduce using rule 42
	'><'           reduce using rule 42
	L_Variable     reduce using rule 42
	%eof           reduce using rule 42


State 34

	%start_pType -> Type .                              (rule 10)
	Type -> Type . '><' Type                            (rule 43)

	'><'           shift, and enter state 78
	%eof           accept


State 35

	Arg -> Variable .                                   (rule 37)

	'='            reduce using rule 37
	L_Variable     reduce using rule 37
	%eof           reduce using rule 37


State 36

	ListArg -> Arg . ListArg                            (rule 39)

	'='            reduce using rule 38
	L_Variable     shift, and enter state 14
	%eof           reduce using rule 38

	Variable       goto state 35
	Arg            goto state 36
	ListArg        goto state 77

State 37

	%start_pListArg -> ListArg .                        (rule 9)

	%eof           accept


State 38

	%start_pArg -> Arg .                                (rule 8)

	%eof           accept


State 39

	Function -> Variable . ListArg '=' Term             (rule 36)

	'='            reduce using rule 38
	L_Variable     shift, and enter state 14

	Variable       goto state 35
	Arg            goto state 36
	ListArg        goto state 76

State 40

	%start_pFunction -> Function .                      (rule 7)

	%eof           accept


State 41

	FunDec -> Variable . ':' ListType Function          (rule 33)

	':'            shift, and enter state 75


State 42

	ListFunDec -> FunDec . ListFunDec                   (rule 35)

	L_Variable     shift, and enter state 14
	%eof           reduce using rule 34

	Variable       goto state 41
	FunDec         goto state 42
	ListFunDec     goto state 74

State 43

	%start_pListFunDec -> ListFunDec .                  (rule 6)

	%eof           accept


State 44

	%start_pFunDec -> FunDec .                          (rule 5)

	%eof           accept


State 45

	%start_pBit -> Bit .                                (rule 4)

	%eof           accept


State 46

	Bit -> '0' .                                        (rule 31)

	'('            reduce using rule 31
	')'            reduce using rule 31
	','            reduce using rule 31
	'0'            reduce using rule 31
	'1'            reduce using rule 31
	'else'         reduce using rule 31
	'in'           reduce using rule 31
	'then'         reduce using rule 31
	L_Variable     reduce using rule 31
	%eof           reduce using rule 31


State 47

	Bit -> '1' .                                        (rule 32)

	'('            reduce using rule 32
	')'            reduce using rule 32
	','            reduce using rule 32
	'0'            reduce using rule 32
	'1'            reduce using rule 32
	'else'         reduce using rule 32
	'in'           reduce using rule 32
	'then'         reduce using rule 32
	L_Variable     reduce using rule 32
	%eof           reduce using rule 32


State 48

	Term2 -> Variable .                                 (rule 18)

	'('            reduce using rule 18
	')'            reduce using rule 18
	','            reduce using rule 18
	'0'            reduce using rule 18
	'1'            reduce using rule 18
	'else'         reduce using rule 18
	'in'           reduce using rule 18
	'then'         reduce using rule 18
	L_Variable     reduce using rule 18
	%eof           reduce using rule 18


State 49

	Term1 -> Lambda . Variable '->' Term                (rule 25)

	L_Variable     shift, and enter state 14

	Variable       goto state 73

State 50

	Term1 -> Term2 .                                    (rule 29)

	'('            reduce using rule 29
	')'            reduce using rule 29
	','            reduce using rule 29
	'0'            reduce using rule 29
	'1'            reduce using rule 29
	'else'         reduce using rule 29
	'in'           reduce using rule 29
	'then'         reduce using rule 29
	L_Variable     reduce using rule 29
	%eof           reduce using rule 29


State 51

	Term1 -> Term1 . Term2                              (rule 24)
	Term -> Term1 .                                     (rule 30)

	'('            shift, and enter state 55
			(reduce using rule 30)

	')'            reduce using rule 30
	','            reduce using rule 30
	'0'            shift, and enter state 46
			(reduce using rule 30)

	'1'            shift, and enter state 47
			(reduce using rule 30)

	'else'         reduce using rule 30
	'in'           reduce using rule 30
	'then'         reduce using rule 30
	L_Variable     shift, and enter state 14
			(reduce using rule 30)

	%eof           reduce using rule 30

	Variable       goto state 48
	Term2          goto state 66
	Bit            goto state 53

State 52

	%start_pTerm -> Term .                              (rule 3)

	%eof           accept


State 53

	Term2 -> Bit .                                      (rule 17)

	'('            reduce using rule 17
	')'            reduce using rule 17
	','            reduce using rule 17
	'0'            reduce using rule 17
	'1'            reduce using rule 17
	'else'         reduce using rule 17
	'in'           reduce using rule 17
	'then'         reduce using rule 17
	L_Variable     reduce using rule 17
	%eof           reduce using rule 17


State 54

	Term1 -> Gate .                                     (rule 27)

	'('            reduce using rule 27
	')'            reduce using rule 27
	','            reduce using rule 27
	'0'            reduce using rule 27
	'1'            reduce using rule 27
	'else'         reduce using rule 27
	'in'           reduce using rule 27
	'then'         reduce using rule 27
	L_Variable     reduce using rule 27
	%eof           reduce using rule 27


State 55

	Term2 -> '(' . Term1 ',' Term1 ')'                  (rule 19)
	Term2 -> '(' . Term ')'                             (rule 20)

	'('            shift, and enter state 55
	'*'            shift, and enter state 56
	'0'            shift, and enter state 46
	'1'            shift, and enter state 47
	'CNOT'         shift, and enter state 17
	'FREDKIN'      shift, and enter state 18
	'H'            shift, and enter state 19
	'I'            shift, and enter state 20
	'S'            shift, and enter state 21
	'SWAP'         shift, and enter state 22
	'T'            shift, and enter state 23
	'TOFFOLI'      shift, and enter state 24
	'X'            shift, and enter state 25
	'Y'            shift, and enter state 26
	'Z'            shift, and enter state 27
	'if'           shift, and enter state 57
	'let'          shift, and enter state 58
	'measure'      shift, and enter state 59
	'new'          shift, and enter state 60
	L_Variable     shift, and enter state 14
	L_GateIdent    shift, and enter state 28
	L_Lambda       shift, and enter state 61

	Variable       goto state 48
	GateIdent      goto state 15
	Lambda         goto state 49
	Term2          goto state 50
	Term1          goto state 71
	Term           goto state 72
	Bit            goto state 53
	Gate           goto state 54

State 56

	Term1 -> '*' .                                      (rule 21)

	'('            reduce using rule 21
	')'            reduce using rule 21
	','            reduce using rule 21
	'0'            reduce using rule 21
	'1'            reduce using rule 21
	'else'         reduce using rule 21
	'in'           reduce using rule 21
	'then'         reduce using rule 21
	L_Variable     reduce using rule 21
	%eof           reduce using rule 21


State 57

	Term1 -> 'if' . Term 'then' Term 'else' Term        (rule 26)

	'('            shift, and enter state 55
	'*'            shift, and enter state 56
	'0'            shift, and enter state 46
	'1'            shift, and enter state 47
	'CNOT'         shift, and enter state 17
	'FREDKIN'      shift, and enter state 18
	'H'            shift, and enter state 19
	'I'            shift, and enter state 20
	'S'            shift, and enter state 21
	'SWAP'         shift, and enter state 22
	'T'            shift, and enter state 23
	'TOFFOLI'      shift, and enter state 24
	'X'            shift, and enter state 25
	'Y'            shift, and enter state 26
	'Z'            shift, and enter state 27
	'if'           shift, and enter state 57
	'let'          shift, and enter state 58
	'measure'      shift, and enter state 59
	'new'          shift, and enter state 60
	L_Variable     shift, and enter state 14
	L_GateIdent    shift, and enter state 28
	L_Lambda       shift, and enter state 61

	Variable       goto state 48
	GateIdent      goto state 15
	Lambda         goto state 49
	Term2          goto state 50
	Term1          goto state 51
	Term           goto state 70
	Bit            goto state 53
	Gate           goto state 54

State 58

	Term1 -> 'let' . '(' Term ',' Term ')' '=' Term 'in' Term    (rule 28)

	'('            shift, and enter state 69


State 59

	Term1 -> 'measure' . Term1                          (rule 22)

	'('            shift, and enter state 55
	'*'            shift, and enter state 56
	'0'            shift, and enter state 46
	'1'            shift, and enter state 47
	'CNOT'         shift, and enter state 17
	'FREDKIN'      shift, and enter state 18
	'H'            shift, and enter state 19
	'I'            shift, and enter state 20
	'S'            shift, and enter state 21
	'SWAP'         shift, and enter state 22
	'T'            shift, and enter state 23
	'TOFFOLI'      shift, and enter state 24
	'X'            shift, and enter state 25
	'Y'            shift, and enter state 26
	'Z'            shift, and enter state 27
	'if'           shift, and enter state 57
	'let'          shift, and enter state 58
	'measure'      shift, and enter state 59
	'new'          shift, and enter state 60
	L_Variable     shift, and enter state 14
	L_GateIdent    shift, and enter state 28
	L_Lambda       shift, and enter state 61

	Variable       goto state 48
	GateIdent      goto state 15
	Lambda         goto state 49
	Term2          goto state 50
	Term1          goto state 68
	Bit            goto state 53
	Gate           goto state 54

State 60

	Term1 -> 'new' . Term1                              (rule 23)

	'('            shift, and enter state 55
	'*'            shift, and enter state 56
	'0'            shift, and enter state 46
	'1'            shift, and enter state 47
	'CNOT'         shift, and enter state 17
	'FREDKIN'      shift, and enter state 18
	'H'            shift, and enter state 19
	'I'            shift, and enter state 20
	'S'            shift, and enter state 21
	'SWAP'         shift, and enter state 22
	'T'            shift, and enter state 23
	'TOFFOLI'      shift, and enter state 24
	'X'            shift, and enter state 25
	'Y'            shift, and enter state 26
	'Z'            shift, and enter state 27
	'if'           shift, and enter state 57
	'let'          shift, and enter state 58
	'measure'      shift, and enter state 59
	'new'          shift, and enter state 60
	L_Variable     shift, and enter state 14
	L_GateIdent    shift, and enter state 28
	L_Lambda       shift, and enter state 61

	Variable       goto state 48
	GateIdent      goto state 15
	Lambda         goto state 49
	Term2          goto state 50
	Term1          goto state 67
	Bit            goto state 53
	Gate           goto state 54

State 61

	Lambda -> L_Lambda .                                (rule 15)

	L_Variable     reduce using rule 15


State 62

	%start_pTerm1 -> Term1 .                            (rule 2)
	Term1 -> Term1 . Term2                              (rule 24)

	'('            shift, and enter state 55
	'0'            shift, and enter state 46
	'1'            shift, and enter state 47
	L_Variable     shift, and enter state 14
	%eof           accept

	Variable       goto state 48
	Term2          goto state 66
	Bit            goto state 53

State 63

	%start_pTerm2 -> Term2 .                            (rule 1)

	%eof           accept


State 64

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 65

	Program -> ListFunDec .                             (rule 16)

	%eof           reduce using rule 16


State 66

	Term1 -> Term1 Term2 .                              (rule 24)

	'('            reduce using rule 24
	')'            reduce using rule 24
	','            reduce using rule 24
	'0'            reduce using rule 24
	'1'            reduce using rule 24
	'else'         reduce using rule 24
	'in'           reduce using rule 24
	'then'         reduce using rule 24
	L_Variable     reduce using rule 24
	%eof           reduce using rule 24


State 67

	Term1 -> 'new' Term1 .                              (rule 23)
	Term1 -> Term1 . Term2                              (rule 24)

	'('            shift, and enter state 55
			(reduce using rule 23)

	')'            reduce using rule 23
	','            reduce using rule 23
	'0'            shift, and enter state 46
			(reduce using rule 23)

	'1'            shift, and enter state 47
			(reduce using rule 23)

	'else'         reduce using rule 23
	'in'           reduce using rule 23
	'then'         reduce using rule 23
	L_Variable     shift, and enter state 14
			(reduce using rule 23)

	%eof           reduce using rule 23

	Variable       goto state 48
	Term2          goto state 66
	Bit            goto state 53

State 68

	Term1 -> 'measure' Term1 .                          (rule 22)
	Term1 -> Term1 . Term2                              (rule 24)

	'('            shift, and enter state 55
			(reduce using rule 22)

	')'            reduce using rule 22
	','            reduce using rule 22
	'0'            shift, and enter state 46
			(reduce using rule 22)

	'1'            shift, and enter state 47
			(reduce using rule 22)

	'else'         reduce using rule 22
	'in'           reduce using rule 22
	'then'         reduce using rule 22
	L_Variable     shift, and enter state 14
			(reduce using rule 22)

	%eof           reduce using rule 22

	Variable       goto state 48
	Term2          goto state 66
	Bit            goto state 53

State 69

	Term1 -> 'let' '(' . Term ',' Term ')' '=' Term 'in' Term    (rule 28)

	'('            shift, and enter state 55
	'*'            shift, and enter state 56
	'0'            shift, and enter state 46
	'1'            shift, and enter state 47
	'CNOT'         shift, and enter state 17
	'FREDKIN'      shift, and enter state 18
	'H'            shift, and enter state 19
	'I'            shift, and enter state 20
	'S'            shift, and enter state 21
	'SWAP'         shift, and enter state 22
	'T'            shift, and enter state 23
	'TOFFOLI'      shift, and enter state 24
	'X'            shift, and enter state 25
	'Y'            shift, and enter state 26
	'Z'            shift, and enter state 27
	'if'           shift, and enter state 57
	'let'          shift, and enter state 58
	'measure'      shift, and enter state 59
	'new'          shift, and enter state 60
	L_Variable     shift, and enter state 14
	L_GateIdent    shift, and enter state 28
	L_Lambda       shift, and enter state 61

	Variable       goto state 48
	GateIdent      goto state 15
	Lambda         goto state 49
	Term2          goto state 50
	Term1          goto state 51
	Term           goto state 88
	Bit            goto state 53
	Gate           goto state 54

State 70

	Term1 -> 'if' Term . 'then' Term 'else' Term        (rule 26)

	'then'         shift, and enter state 87


State 71

	Term2 -> '(' Term1 . ',' Term1 ')'                  (rule 19)
	Term1 -> Term1 . Term2                              (rule 24)
	Term -> Term1 .                                     (rule 30)

	'('            shift, and enter state 55
	')'            reduce using rule 30
	','            shift, and enter state 86
	'0'            shift, and enter state 46
	'1'            shift, and enter state 47
	L_Variable     shift, and enter state 14

	Variable       goto state 48
	Term2          goto state 66
	Bit            goto state 53

State 72

	Term2 -> '(' Term . ')'                             (rule 20)

	')'            shift, and enter state 85


State 73

	Term1 -> Lambda Variable . '->' Term                (rule 25)

	'->'           shift, and enter state 84


State 74

	ListFunDec -> FunDec ListFunDec .                   (rule 35)

	%eof           reduce using rule 35


State 75

	FunDec -> Variable ':' . ListType Function          (rule 33)

	'Bit'          shift, and enter state 31
	'QBit'         shift, and enter state 32
	'T'            shift, and enter state 33
	L_Variable     reduce using rule 44

	Type           goto state 29
	ListType       goto state 83

State 76

	Function -> Variable ListArg . '=' Term             (rule 36)

	'='            shift, and enter state 82


State 77

	ListArg -> Arg ListArg .                            (rule 39)

	'='            reduce using rule 39
	%eof           reduce using rule 39


State 78

	Type -> Type '><' . Type                            (rule 43)

	'Bit'          shift, and enter state 31
	'QBit'         shift, and enter state 32
	'T'            shift, and enter state 33

	Type           goto state 81

State 79

	ListType -> Type '-o' . ListType                    (rule 46)

	'Bit'          shift, and enter state 31
	'QBit'         shift, and enter state 32
	'T'            shift, and enter state 33
	L_Variable     reduce using rule 44
	%eof           reduce using rule 44

	Type           goto state 29
	ListType       goto state 80

State 80

	ListType -> Type '-o' ListType .                    (rule 46)

	L_Variable     reduce using rule 46
	%eof           reduce using rule 46


State 81

	Type -> Type . '><' Type                            (rule 43)
	Type -> Type '><' Type .                            (rule 43)

	'-o'           reduce using rule 43
	'><'           shift, and enter state 78
			(reduce using rule 43)

	L_Variable     reduce using rule 43
	%eof           reduce using rule 43


State 82

	Function -> Variable ListArg '=' . Term             (rule 36)

	'('            shift, and enter state 55
	'*'            shift, and enter state 56
	'0'            shift, and enter state 46
	'1'            shift, and enter state 47
	'CNOT'         shift, and enter state 17
	'FREDKIN'      shift, and enter state 18
	'H'            shift, and enter state 19
	'I'            shift, and enter state 20
	'S'            shift, and enter state 21
	'SWAP'         shift, and enter state 22
	'T'            shift, and enter state 23
	'TOFFOLI'      shift, and enter state 24
	'X'            shift, and enter state 25
	'Y'            shift, and enter state 26
	'Z'            shift, and enter state 27
	'if'           shift, and enter state 57
	'let'          shift, and enter state 58
	'measure'      shift, and enter state 59
	'new'          shift, and enter state 60
	L_Variable     shift, and enter state 14
	L_GateIdent    shift, and enter state 28
	L_Lambda       shift, and enter state 61

	Variable       goto state 48
	GateIdent      goto state 15
	Lambda         goto state 49
	Term2          goto state 50
	Term1          goto state 51
	Term           goto state 94
	Bit            goto state 53
	Gate           goto state 54

State 83

	FunDec -> Variable ':' ListType . Function          (rule 33)

	L_Variable     shift, and enter state 14

	Variable       goto state 39
	Function       goto state 93

State 84

	Term1 -> Lambda Variable '->' . Term                (rule 25)

	'('            shift, and enter state 55
	'*'            shift, and enter state 56
	'0'            shift, and enter state 46
	'1'            shift, and enter state 47
	'CNOT'         shift, and enter state 17
	'FREDKIN'      shift, and enter state 18
	'H'            shift, and enter state 19
	'I'            shift, and enter state 20
	'S'            shift, and enter state 21
	'SWAP'         shift, and enter state 22
	'T'            shift, and enter state 23
	'TOFFOLI'      shift, and enter state 24
	'X'            shift, and enter state 25
	'Y'            shift, and enter state 26
	'Z'            shift, and enter state 27
	'if'           shift, and enter state 57
	'let'          shift, and enter state 58
	'measure'      shift, and enter state 59
	'new'          shift, and enter state 60
	L_Variable     shift, and enter state 14
	L_GateIdent    shift, and enter state 28
	L_Lambda       shift, and enter state 61

	Variable       goto state 48
	GateIdent      goto state 15
	Lambda         goto state 49
	Term2          goto state 50
	Term1          goto state 51
	Term           goto state 92
	Bit            goto state 53
	Gate           goto state 54

State 85

	Term2 -> '(' Term ')' .                             (rule 20)

	'('            reduce using rule 20
	')'            reduce using rule 20
	','            reduce using rule 20
	'0'            reduce using rule 20
	'1'            reduce using rule 20
	'else'         reduce using rule 20
	'in'           reduce using rule 20
	'then'         reduce using rule 20
	L_Variable     reduce using rule 20
	%eof           reduce using rule 20


State 86

	Term2 -> '(' Term1 ',' . Term1 ')'                  (rule 19)

	'('            shift, and enter state 55
	'*'            shift, and enter state 56
	'0'            shift, and enter state 46
	'1'            shift, and enter state 47
	'CNOT'         shift, and enter state 17
	'FREDKIN'      shift, and enter state 18
	'H'            shift, and enter state 19
	'I'            shift, and enter state 20
	'S'            shift, and enter state 21
	'SWAP'         shift, and enter state 22
	'T'            shift, and enter state 23
	'TOFFOLI'      shift, and enter state 24
	'X'            shift, and enter state 25
	'Y'            shift, and enter state 26
	'Z'            shift, and enter state 27
	'if'           shift, and enter state 57
	'let'          shift, and enter state 58
	'measure'      shift, and enter state 59
	'new'          shift, and enter state 60
	L_Variable     shift, and enter state 14
	L_GateIdent    shift, and enter state 28
	L_Lambda       shift, and enter state 61

	Variable       goto state 48
	GateIdent      goto state 15
	Lambda         goto state 49
	Term2          goto state 50
	Term1          goto state 91
	Bit            goto state 53
	Gate           goto state 54

State 87

	Term1 -> 'if' Term 'then' . Term 'else' Term        (rule 26)

	'('            shift, and enter state 55
	'*'            shift, and enter state 56
	'0'            shift, and enter state 46
	'1'            shift, and enter state 47
	'CNOT'         shift, and enter state 17
	'FREDKIN'      shift, and enter state 18
	'H'            shift, and enter state 19
	'I'            shift, and enter state 20
	'S'            shift, and enter state 21
	'SWAP'         shift, and enter state 22
	'T'            shift, and enter state 23
	'TOFFOLI'      shift, and enter state 24
	'X'            shift, and enter state 25
	'Y'            shift, and enter state 26
	'Z'            shift, and enter state 27
	'if'           shift, and enter state 57
	'let'          shift, and enter state 58
	'measure'      shift, and enter state 59
	'new'          shift, and enter state 60
	L_Variable     shift, and enter state 14
	L_GateIdent    shift, and enter state 28
	L_Lambda       shift, and enter state 61

	Variable       goto state 48
	GateIdent      goto state 15
	Lambda         goto state 49
	Term2          goto state 50
	Term1          goto state 51
	Term           goto state 90
	Bit            goto state 53
	Gate           goto state 54

State 88

	Term1 -> 'let' '(' Term . ',' Term ')' '=' Term 'in' Term    (rule 28)

	','            shift, and enter state 89


State 89

	Term1 -> 'let' '(' Term ',' . Term ')' '=' Term 'in' Term    (rule 28)

	'('            shift, and enter state 55
	'*'            shift, and enter state 56
	'0'            shift, and enter state 46
	'1'            shift, and enter state 47
	'CNOT'         shift, and enter state 17
	'FREDKIN'      shift, and enter state 18
	'H'            shift, and enter state 19
	'I'            shift, and enter state 20
	'S'            shift, and enter state 21
	'SWAP'         shift, and enter state 22
	'T'            shift, and enter state 23
	'TOFFOLI'      shift, and enter state 24
	'X'            shift, and enter state 25
	'Y'            shift, and enter state 26
	'Z'            shift, and enter state 27
	'if'           shift, and enter state 57
	'let'          shift, and enter state 58
	'measure'      shift, and enter state 59
	'new'          shift, and enter state 60
	L_Variable     shift, and enter state 14
	L_GateIdent    shift, and enter state 28
	L_Lambda       shift, and enter state 61

	Variable       goto state 48
	GateIdent      goto state 15
	Lambda         goto state 49
	Term2          goto state 50
	Term1          goto state 51
	Term           goto state 97
	Bit            goto state 53
	Gate           goto state 54

State 90

	Term1 -> 'if' Term 'then' Term . 'else' Term        (rule 26)

	'else'         shift, and enter state 96


State 91

	Term2 -> '(' Term1 ',' Term1 . ')'                  (rule 19)
	Term1 -> Term1 . Term2                              (rule 24)

	'('            shift, and enter state 55
	')'            shift, and enter state 95
	'0'            shift, and enter state 46
	'1'            shift, and enter state 47
	L_Variable     shift, and enter state 14

	Variable       goto state 48
	Term2          goto state 66
	Bit            goto state 53

State 92

	Term1 -> Lambda Variable '->' Term .                (rule 25)

	'('            reduce using rule 25
	')'            reduce using rule 25
	','            reduce using rule 25
	'0'            reduce using rule 25
	'1'            reduce using rule 25
	'else'         reduce using rule 25
	'in'           reduce using rule 25
	'then'         reduce using rule 25
	L_Variable     reduce using rule 25
	%eof           reduce using rule 25


State 93

	FunDec -> Variable ':' ListType Function .          (rule 33)

	L_Variable     reduce using rule 33
	%eof           reduce using rule 33


State 94

	Function -> Variable ListArg '=' Term .             (rule 36)

	L_Variable     reduce using rule 36
	%eof           reduce using rule 36


State 95

	Term2 -> '(' Term1 ',' Term1 ')' .                  (rule 19)

	'('            reduce using rule 19
	')'            reduce using rule 19
	','            reduce using rule 19
	'0'            reduce using rule 19
	'1'            reduce using rule 19
	'else'         reduce using rule 19
	'in'           reduce using rule 19
	'then'         reduce using rule 19
	L_Variable     reduce using rule 19
	%eof           reduce using rule 19


State 96

	Term1 -> 'if' Term 'then' Term 'else' . Term        (rule 26)

	'('            shift, and enter state 55
	'*'            shift, and enter state 56
	'0'            shift, and enter state 46
	'1'            shift, and enter state 47
	'CNOT'         shift, and enter state 17
	'FREDKIN'      shift, and enter state 18
	'H'            shift, and enter state 19
	'I'            shift, and enter state 20
	'S'            shift, and enter state 21
	'SWAP'         shift, and enter state 22
	'T'            shift, and enter state 23
	'TOFFOLI'      shift, and enter state 24
	'X'            shift, and enter state 25
	'Y'            shift, and enter state 26
	'Z'            shift, and enter state 27
	'if'           shift, and enter state 57
	'let'          shift, and enter state 58
	'measure'      shift, and enter state 59
	'new'          shift, and enter state 60
	L_Variable     shift, and enter state 14
	L_GateIdent    shift, and enter state 28
	L_Lambda       shift, and enter state 61

	Variable       goto state 48
	GateIdent      goto state 15
	Lambda         goto state 49
	Term2          goto state 50
	Term1          goto state 51
	Term           goto state 99
	Bit            goto state 53
	Gate           goto state 54

State 97

	Term1 -> 'let' '(' Term ',' Term . ')' '=' Term 'in' Term    (rule 28)

	')'            shift, and enter state 98


State 98

	Term1 -> 'let' '(' Term ',' Term ')' . '=' Term 'in' Term    (rule 28)

	'='            shift, and enter state 100


State 99

	Term1 -> 'if' Term 'then' Term 'else' Term .        (rule 26)

	'('            reduce using rule 26
	')'            reduce using rule 26
	','            reduce using rule 26
	'0'            reduce using rule 26
	'1'            reduce using rule 26
	'else'         reduce using rule 26
	'in'           reduce using rule 26
	'then'         reduce using rule 26
	L_Variable     reduce using rule 26
	%eof           reduce using rule 26


State 100

	Term1 -> 'let' '(' Term ',' Term ')' '=' . Term 'in' Term    (rule 28)

	'('            shift, and enter state 55
	'*'            shift, and enter state 56
	'0'            shift, and enter state 46
	'1'            shift, and enter state 47
	'CNOT'         shift, and enter state 17
	'FREDKIN'      shift, and enter state 18
	'H'            shift, and enter state 19
	'I'            shift, and enter state 20
	'S'            shift, and enter state 21
	'SWAP'         shift, and enter state 22
	'T'            shift, and enter state 23
	'TOFFOLI'      shift, and enter state 24
	'X'            shift, and enter state 25
	'Y'            shift, and enter state 26
	'Z'            shift, and enter state 27
	'if'           shift, and enter state 57
	'let'          shift, and enter state 58
	'measure'      shift, and enter state 59
	'new'          shift, and enter state 60
	L_Variable     shift, and enter state 14
	L_GateIdent    shift, and enter state 28
	L_Lambda       shift, and enter state 61

	Variable       goto state 48
	GateIdent      goto state 15
	Lambda         goto state 49
	Term2          goto state 50
	Term1          goto state 51
	Term           goto state 101
	Bit            goto state 53
	Gate           goto state 54

State 101

	Term1 -> 'let' '(' Term ',' Term ')' '=' Term . 'in' Term    (rule 28)

	'in'           shift, and enter state 102


State 102

	Term1 -> 'let' '(' Term ',' Term ')' '=' Term 'in' . Term    (rule 28)

	'('            shift, and enter state 55
	'*'            shift, and enter state 56
	'0'            shift, and enter state 46
	'1'            shift, and enter state 47
	'CNOT'         shift, and enter state 17
	'FREDKIN'      shift, and enter state 18
	'H'            shift, and enter state 19
	'I'            shift, and enter state 20
	'S'            shift, and enter state 21
	'SWAP'         shift, and enter state 22
	'T'            shift, and enter state 23
	'TOFFOLI'      shift, and enter state 24
	'X'            shift, and enter state 25
	'Y'            shift, and enter state 26
	'Z'            shift, and enter state 27
	'if'           shift, and enter state 57
	'let'          shift, and enter state 58
	'measure'      shift, and enter state 59
	'new'          shift, and enter state 60
	L_Variable     shift, and enter state 14
	L_GateIdent    shift, and enter state 28
	L_Lambda       shift, and enter state 61

	Variable       goto state 48
	GateIdent      goto state 15
	Lambda         goto state 49
	Term2          goto state 50
	Term1          goto state 51
	Term           goto state 103
	Bit            goto state 53
	Gate           goto state 54

State 103

	Term1 -> 'let' '(' Term ',' Term ')' '=' Term 'in' Term .    (rule 28)

	'('            reduce using rule 28
	')'            reduce using rule 28
	','            reduce using rule 28
	'0'            reduce using rule 28
	'1'            reduce using rule 28
	'else'         reduce using rule 28
	'in'           reduce using rule 28
	'then'         reduce using rule 28
	L_Variable     reduce using rule 28
	%eof           reduce using rule 28


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 59
Number of terminals: 34
Number of non-terminals: 29
Number of states: 104
