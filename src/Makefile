# Makefile generated by BNFC.

GHC        = stack ghc
HAPPY      = happy
HAPPY_OPTS = --array --info --ghc --coerce
ALEX       = alex
ALEX_OPTS  = --ghc

# List of goals not corresponding to file names.

.PHONY : all clean distclean

# Default goal.

all : Parser/Test

# Rules for building the parser.

Parser/Abs.hs Parser/Lex.x Parser/Par.y Parser/Print.hs Parser/Test.hs : Parser/Parser.cf
	bnfc --haskell -d Parser/Parser.cf

%.hs : %.y
	${HAPPY} ${HAPPY_OPTS} $<

%.hs : %.x
	${ALEX} ${ALEX_OPTS} $<

Parser/Test : Parser/Abs.hs Parser/Lex.hs Parser/Par.hs Parser/Print.hs Parser/Test.hs
	${GHC} ${GHC_OPTS} $@

# Rules for cleaning generated files.

clean :
	-rm -f Parser/*.hi Parser/*.o Parser/*.log Parser/*.aux Parser/*.dvi

distclean : clean
	-rm -f Parser/Abs.hs Parser/Abs.hs.bak Parser/ComposOp.hs Parser/ComposOp.hs.bak Parser/Doc.txt Parser/Doc.txt.bak Parser/ErrM.hs Parser/ErrM.hs.bak Parser/Layout.hs Parser/Layout.hs.bak Parser/Lex.x Parser/Lex.x.bak Parser/Par.y Parser/Par.y.bak Parser/Print.hs Parser/Print.hs.bak Parser/Skel.hs Parser/Skel.hs.bak Parser/Test.hs Parser/Test.hs.bak Parser/XML.hs Parser/XML.hs.bak Parser/AST.agda Parser/AST.agda.bak Parser/Parser.agda Parser/Parser.agda.bak Parser/IOLib.agda Parser/IOLib.agda.bak Parser/Main.agda Parser/Main.agda.bak Parser/Parser.dtd Parser/Parser.dtd.bak Parser/Test Parser/Lex.hs Parser/Par.hs Parser/Par.info Parser/ParData.hs Makefile
	-rmdir -p Parser/

# EOF
